diff --git a/coverage.svg b/coverage.svg
index eff9675..1490a87 100644
--- a/coverage.svg
+++ b/coverage.svg
@@ -9,13 +9,13 @@
     </mask>
     <g mask="url(#a)">
         <path fill="#555" d="M0 0h63v20H0z"/>
-        <path fill="#9f9f9f" d="M63 0h36v20H63z"/>
+        <path fill="#e05d44" d="M63 0h36v20H63z"/>
         <path fill="url(#b)" d="M0 0h99v20H0z"/>
     </g>
     <g fill="#fff" text-anchor="middle" font-family="DejaVu Sans,Verdana,Geneva,sans-serif" font-size="11">
         <text x="31.5" y="15" fill="#010101" fill-opacity=".3">coverage</text>
         <text x="31.5" y="14">coverage</text>
-        <text x="80" y="15" fill="#010101" fill-opacity=".3">40.48%</text>
-        <text x="80" y="14">40.48%</text>
+        <text x="80" y="15" fill="#010101" fill-opacity=".3">20%</text>
+        <text x="80" y="14">20%</text>
     </g>
 </svg>
diff --git a/coverage.xml b/coverage.xml
index 31eecde..7548dd6 100644
--- a/coverage.xml
+++ b/coverage.xml
@@ -1,14 +1,57 @@
 <?xml version="1.0" ?>
-<coverage version="7.6.12" timestamp="1740189769337" lines-valid="2109" lines-covered="932" line-rate="0.4419" branches-valid="534" branches-covered="138" branch-rate="0.2584" complexity="0">
+<coverage version="7.6.12" timestamp="1740641653265" lines-valid="4797" lines-covered="1222" line-rate="0.2547" branches-valid="1218" branches-covered="3" branch-rate="0.002463" complexity="0">
 	<!-- Generated by coverage.py: https://coverage.readthedocs.io/en/7.6.12 -->
 	<!-- Based on https://raw.githubusercontent.com/cobertura/web/master/htdocs/xml/coverage-04.dtd -->
 	<sources>
-		<source>src</source>
+		<source>/Users/tony/Documents/Vidst/src</source>
 	</sources>
 	<packages>
-		<package name="ai" line-rate="0.6183" branch-rate="0.5" complexity="0">
+		<package name="scripts" line-rate="1" branch-rate="1" complexity="0">
 			<classes>
-				<class name="pipeline.py" filename="ai/pipeline.py" complexity="0" line-rate="0.6183" branch-rate="0.5">
+				<class name="benchmark_apis.py" filename="scripts/benchmark_apis.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+				<class name="migrate_vectors.py" filename="scripts/migrate_vectors.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+			</classes>
+		</package>
+		<package name="video_understanding" line-rate="1" branch-rate="1" complexity="0">
+			<classes>
+				<class name="exceptions.py" filename="video_understanding/exceptions.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines>
+						<line number="3" hits="1"/>
+						<line number="7" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="15" hits="1"/>
+						<line number="19" hits="1"/>
+						<line number="23" hits="1"/>
+						<line number="27" hits="1"/>
+						<line number="31" hits="1"/>
+						<line number="35" hits="1"/>
+						<line number="39" hits="1"/>
+					</lines>
+				</class>
+			</classes>
+		</package>
+		<package name="video_understanding.ai" line-rate="0.2324" branch-rate="0" complexity="0">
+			<classes>
+				<class name="exceptions.py" filename="video_understanding/ai/exceptions.py" complexity="0" line-rate="0" branch-rate="1">
+					<methods/>
+					<lines>
+						<line number="3" hits="0"/>
+						<line number="12" hits="0"/>
+						<line number="14" hits="0"/>
+					</lines>
+				</class>
+				<class name="factory.py" filename="video_understanding/ai/factory.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+				<class name="pipeline.py" filename="video_understanding/ai/pipeline.py" complexity="0" line-rate="0.2374" branch-rate="0">
 					<methods/>
 					<lines>
 						<line number="3" hits="1"/>
@@ -20,651 +63,783 @@
 						<line number="11" hits="1"/>
 						<line number="13" hits="1"/>
 						<line number="14" hits="1"/>
-						<line number="17" hits="1"/>
-						<line number="20" hits="1"/>
-						<line number="21" hits="1"/>
-						<line number="22" hits="1"/>
+						<line number="18" hits="1"/>
 						<line number="23" hits="1"/>
-						<line number="24" hits="1"/>
-						<line number="25" hits="1"/>
+						<line number="26" hits="1"/>
+						<line number="27" hits="1"/>
 						<line number="28" hits="1"/>
+						<line number="29" hits="1"/>
+						<line number="30" hits="1"/>
 						<line number="31" hits="1"/>
-						<line number="38" hits="0"/>
-						<line number="39" hits="0"/>
-						<line number="43" hits="1"/>
-						<line number="51" hits="0"/>
-						<line number="53" hits="1"/>
-						<line number="69" hits="0"/>
-						<line number="70" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="71,79"/>
-						<line number="71" hits="0"/>
-						<line number="72" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="70,73"/>
-						<line number="73" hits="0"/>
+						<line number="34" hits="1"/>
+						<line number="37" hits="1"/>
+						<line number="43" hits="0"/>
+						<line number="44" hits="0"/>
+						<line number="48" hits="1"/>
+						<line number="55" hits="0"/>
+						<line number="57" hits="1"/>
+						<line number="72" hits="0"/>
+						<line number="73" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="74,87"/>
 						<line number="74" hits="0"/>
-						<line number="75" hits="0"/>
+						<line number="75" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="73,76"/>
 						<line number="76" hits="0"/>
-						<line number="79" hits="0"/>
-						<line number="81" hits="1"/>
-						<line number="94" hits="0"/>
-						<line number="96" hits="0"/>
-						<line number="97" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="98,101"/>
-						<line number="98" hits="0"/>
-						<line number="99" hits="0"/>
+						<line number="77" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="78,80"/>
+						<line number="78" hits="0"/>
+						<line number="80" hits="0"/>
+						<line number="83" hits="0"/>
+						<line number="84" hits="0"/>
+						<line number="87" hits="0"/>
+						<line number="89" hits="1"/>
 						<line number="101" hits="0"/>
-						<line number="102" hits="0"/>
 						<line number="103" hits="0"/>
-						<line number="104" hits="0"/>
+						<line number="104" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="105,108"/>
 						<line number="105" hits="0"/>
 						<line number="106" hits="0"/>
-						<line number="109" hits="1"/>
-						<line number="119" hits="0"/>
-						<line number="123" hits="0"/>
-						<line number="126" hits="1"/>
-						<line number="142" hits="0"/>
-						<line number="143" hits="0"/>
-						<line number="144" hits="0"/>
-						<line number="145" hits="0"/>
-						<line number="148" hits="1"/>
-						<line number="158" hits="0"/>
-						<line number="160" hits="0"/>
-						<line number="166" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="167,170"/>
-						<line number="167" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="166,168"/>
-						<line number="168" hits="0"/>
-						<line number="170" hits="0"/>
-						<line number="171" hits="0"/>
+						<line number="108" hits="0"/>
+						<line number="109" hits="0"/>
+						<line number="110" hits="0"/>
+						<line number="111" hits="0"/>
+						<line number="112" hits="0"/>
+						<line number="113" hits="0"/>
+						<line number="116" hits="1"/>
+						<line number="125" hits="0"/>
+						<line number="129" hits="0"/>
+						<line number="132" hits="1"/>
+						<line number="147" hits="0"/>
+						<line number="148" hits="0"/>
+						<line number="149" hits="0"/>
+						<line number="150" hits="0"/>
+						<line number="153" hits="1"/>
+						<line number="162" hits="0"/>
+						<line number="164" hits="0"/>
+						<line number="170" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="171,174"/>
+						<line number="171" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="170,172"/>
 						<line number="172" hits="0"/>
-						<line number="175" hits="1"/>
-						<line number="178" hits="1"/>
-						<line number="187" hits="1"/>
-						<line number="188" hits="1"/>
-						<line number="190" hits="1"/>
-						<line number="196" hits="1"/>
-						<line number="198" hits="1"/>
-						<line number="212" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="213" hits="1"/>
-						<line number="215" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="216"/>
-						<line number="216" hits="0"/>
-						<line number="218" hits="1"/>
-						<line number="219" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="220" hits="1"/>
-						<line number="223" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="226"/>
-						<line number="226" hits="0"/>
-						<line number="228" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="229" hits="1"/>
-						<line number="231" hits="1"/>
-						<line number="232" hits="1"/>
-						<line number="233" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="234" hits="1"/>
-						<line number="239" hits="1"/>
-						<line number="240" hits="1"/>
-						<line number="241" hits="1"/>
-						<line number="242" hits="1"/>
-						<line number="243" hits="1"/>
-						<line number="245" hits="1"/>
-						<line number="246" hits="1"/>
-						<line number="247" hits="1"/>
-						<line number="249" hits="1"/>
-						<line number="259" hits="1"/>
-						<line number="260" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="261" hits="1"/>
-						<line number="262" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="260"/>
-						<line number="263" hits="1"/>
-						<line number="264" hits="1"/>
-						<line number="265" hits="1"/>
-						<line number="266" hits="0"/>
+						<line number="174" hits="0"/>
+						<line number="175" hits="0"/>
+						<line number="176" hits="0"/>
+						<line number="179" hits="1"/>
+						<line number="182" hits="1"/>
+						<line number="189" hits="0"/>
+						<line number="190" hits="0"/>
+						<line number="192" hits="1"/>
+						<line number="198" hits="0"/>
+						<line number="200" hits="1"/>
+						<line number="214" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="215,217"/>
+						<line number="215" hits="0"/>
+						<line number="217" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="218,220"/>
+						<line number="218" hits="0"/>
+						<line number="220" hits="0"/>
+						<line number="221" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="222,225"/>
+						<line number="222" hits="0"/>
+						<line number="225" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="228,230"/>
+						<line number="228" hits="0"/>
+						<line number="230" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="231,233"/>
+						<line number="231" hits="0"/>
+						<line number="233" hits="0"/>
+						<line number="234" hits="0"/>
+						<line number="235" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="236,241"/>
+						<line number="236" hits="0"/>
+						<line number="241" hits="0"/>
+						<line number="242" hits="0"/>
+						<line number="243" hits="0"/>
+						<line number="244" hits="0"/>
+						<line number="245" hits="0"/>
+						<line number="247" hits="0"/>
+						<line number="248" hits="0"/>
+						<line number="249" hits="0"/>
+						<line number="251" hits="0"/>
+						<line number="261" hits="0"/>
+						<line number="262" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="263,288"/>
+						<line number="263" hits="0"/>
+						<line number="264" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="262,265"/>
+						<line number="265" hits="0"/>
+						<line number="266" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="267,269"/>
 						<line number="267" hits="0"/>
-						<line number="268" hits="0"/>
-						<line number="269" hits="1"/>
-						<line number="270" hits="0"/>
-						<line number="271" hits="0"/>
+						<line number="269" hits="0"/>
 						<line number="272" hits="0"/>
-						<line number="273" hits="1"/>
+						<line number="273" hits="0"/>
 						<line number="274" hits="0"/>
 						<line number="275" hits="0"/>
 						<line number="276" hits="0"/>
-						<line number="277" hits="1"/>
-						<line number="278" hits="1"/>
-						<line number="281" hits="1"/>
-						<line number="282" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="290"/>
-						<line number="283" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="284"/>
+						<line number="277" hits="0"/>
+						<line number="278" hits="0"/>
+						<line number="279" hits="0"/>
+						<line number="280" hits="0"/>
+						<line number="281" hits="0"/>
+						<line number="282" hits="0"/>
+						<line number="283" hits="0"/>
 						<line number="284" hits="0"/>
-						<line number="285" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="286"/>
-						<line number="286" hits="0"/>
-						<line number="288" hits="1"/>
-						<line number="290" hits="1"/>
-						<line number="291" hits="1"/>
-						<line number="293" hits="1"/>
-						<line number="302" hits="1"/>
-						<line number="306" hits="1"/>
-						<line number="315" hits="1"/>
-						<line number="319" hits="1"/>
+						<line number="285" hits="0"/>
+						<line number="288" hits="0"/>
+						<line number="289" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="290,297"/>
+						<line number="290" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="291,292"/>
+						<line number="291" hits="0"/>
+						<line number="292" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="293,295"/>
+						<line number="293" hits="0"/>
+						<line number="295" hits="0"/>
+						<line number="297" hits="0"/>
+						<line number="298" hits="0"/>
+						<line number="300" hits="1"/>
+						<line number="309" hits="0"/>
+						<line number="312" hits="0"/>
+						<line number="314" hits="1"/>
+						<line number="323" hits="0"/>
+						<line number="326" hits="0"/>
 						<line number="328" hits="1"/>
-						<line number="332" hits="1"/>
-						<line number="338" hits="1"/>
-						<line number="339" hits="1"/>
-						<line number="341" hits="1"/>
+						<line number="337" hits="0"/>
+						<line number="340" hits="0"/>
+						<line number="342" hits="1"/>
+						<line number="348" hits="0"/>
+						<line number="349" hits="0"/>
+						<line number="351" hits="0"/>
 					</lines>
 				</class>
 			</classes>
 		</package>
-		<package name="ai.exceptions" line-rate="1" branch-rate="1" complexity="0">
+		<package name="video_understanding.ai.exceptions" line-rate="0.8222" branch-rate="1" complexity="0">
 			<classes>
-				<class name="twelve_labs.py" filename="ai/exceptions/twelve_labs.py" complexity="0" line-rate="1" branch-rate="1">
+				<class name="gemini.py" filename="video_understanding/ai/exceptions/gemini.py" complexity="0" line-rate="0.8333" branch-rate="1">
 					<methods/>
 					<lines>
 						<line number="3" hits="1"/>
-						<line number="5" hits="1"/>
-						<line number="8" hits="1"/>
-						<line number="11" hits="1"/>
-						<line number="14" hits="1"/>
-						<line number="17" hits="1"/>
-						<line number="20" hits="1"/>
+						<line number="6" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="17" hits="0"/>
+						<line number="18" hits="0"/>
+						<line number="21" hits="1"/>
+						<line number="26" hits="1"/>
+						<line number="31" hits="1"/>
+						<line number="36" hits="1"/>
+						<line number="41" hits="1"/>
+						<line number="46" hits="1"/>
+						<line number="51" hits="1"/>
 					</lines>
 				</class>
-			</classes>
-		</package>
-		<package name="ai.models" line-rate="0.1409" branch-rate="0.04167" complexity="0">
-			<classes>
-				<class name="base.py" filename="ai/models/base.py" complexity="0" line-rate="0.8529" branch-rate="0.5833">
+				<class name="gpt4v.py" filename="video_understanding/ai/exceptions/gpt4v.py" complexity="0" line-rate="0.8182" branch-rate="1">
 					<methods/>
 					<lines>
-						<line number="8" hits="1"/>
+						<line number="3" hits="1"/>
+						<line number="6" hits="1"/>
 						<line number="9" hits="1"/>
-						<line number="10" hits="1"/>
-						<line number="12" hits="1"/>
-						<line number="14" hits="1"/>
-						<line number="17" hits="1"/>
-						<line number="76" hits="1"/>
-						<line number="91" hits="0"/>
-						<line number="93" hits="1"/>
-						<line number="106" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="107" hits="1"/>
-						<line number="108" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="110"/>
-						<line number="109" hits="1"/>
-						<line number="110" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="111,112"/>
-						<line number="111" hits="0"/>
-						<line number="112" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,113"/>
-						<line number="113" hits="0"/>
-						<line number="115" hits="1"/>
-						<line number="131" hits="1"/>
-						<line number="132" hits="1"/>
-						<line number="134" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="135" hits="1"/>
-						<line number="136" hits="1"/>
-						<line number="137" hits="1"/>
-						<line number="138" hits="1"/>
-						<line number="139" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="140" hits="1"/>
-						<line number="141" hits="1"/>
-						<line number="143" hits="1"/>
-						<line number="145" hits="1"/>
-						<line number="154" hits="1"/>
-						<line number="155" hits="1"/>
-						<line number="157" hits="1"/>
-						<line number="159" hits="1"/>
+						<line number="17" hits="0"/>
+						<line number="18" hits="0"/>
+						<line number="21" hits="1"/>
+						<line number="26" hits="1"/>
+						<line number="31" hits="1"/>
+						<line number="36" hits="1"/>
+						<line number="41" hits="1"/>
+						<line number="46" hits="1"/>
 					</lines>
 				</class>
-				<class name="gemini.py" filename="ai/models/gemini.py" complexity="0" line-rate="0.375" branch-rate="0">
+				<class name="twelve_labs.py" filename="video_understanding/ai/exceptions/twelve_labs.py" complexity="0" line-rate="0.8182" branch-rate="1">
 					<methods/>
 					<lines>
 						<line number="3" hits="1"/>
-						<line number="4" hits="1"/>
-						<line number="5" hits="1"/>
-						<line number="7" hits="1"/>
+						<line number="6" hits="1"/>
 						<line number="9" hits="1"/>
-						<line number="12" hits="1"/>
-						<line number="15" hits="1"/>
-						<line number="21" hits="0"/>
-						<line number="23" hits="1"/>
-						<line number="35" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="36,38"/>
+						<line number="17" hits="0"/>
+						<line number="18" hits="0"/>
+						<line number="21" hits="1"/>
+						<line number="26" hits="1"/>
+						<line number="31" hits="1"/>
+						<line number="36" hits="1"/>
+						<line number="41" hits="1"/>
+						<line number="46" hits="1"/>
+					</lines>
+				</class>
+				<class name="whisper.py" filename="video_understanding/ai/exceptions/whisper.py" complexity="0" line-rate="0.8182" branch-rate="1">
+					<methods/>
+					<lines>
+						<line number="3" hits="1"/>
+						<line number="6" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="17" hits="0"/>
+						<line number="18" hits="0"/>
+						<line number="21" hits="1"/>
+						<line number="26" hits="1"/>
+						<line number="31" hits="1"/>
+						<line number="36" hits="1"/>
+						<line number="41" hits="1"/>
+						<line number="46" hits="1"/>
+					</lines>
+				</class>
+			</classes>
+		</package>
+		<package name="video_understanding.ai.models" line-rate="0.1414" branch-rate="0.005319" complexity="0">
+			<classes>
+				<class name="base.py" filename="video_understanding/ai/models/base.py" complexity="0" line-rate="0.4651" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="13" hits="1"/>
+						<line number="15" hits="1"/>
+						<line number="18" hits="1"/>
+						<line number="29" hits="1"/>
+						<line number="35" hits="1"/>
+						<line number="37" hits="1"/>
+						<line number="38" hits="1"/>
+						<line number="52" hits="1"/>
+						<line number="53" hits="1"/>
+						<line number="70" hits="1"/>
+						<line number="71" hits="1"/>
+						<line number="85" hits="1"/>
+						<line number="100" hits="0"/>
+						<line number="102" hits="1"/>
+						<line number="115" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="116,117"/>
+						<line number="116" hits="0"/>
+						<line number="117" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="118,119"/>
+						<line number="118" hits="0"/>
+						<line number="119" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="120,121"/>
+						<line number="120" hits="0"/>
+						<line number="121" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,122"/>
+						<line number="122" hits="0"/>
+						<line number="124" hits="1"/>
+						<line number="140" hits="0"/>
+						<line number="141" hits="0"/>
+						<line number="143" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="144,152"/>
+						<line number="144" hits="0"/>
+						<line number="145" hits="0"/>
+						<line number="146" hits="0"/>
+						<line number="147" hits="0"/>
+						<line number="148" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="143,149"/>
+						<line number="149" hits="0"/>
+						<line number="150" hits="0"/>
+						<line number="152" hits="0"/>
+						<line number="154" hits="1"/>
+						<line number="163" hits="0"/>
+						<line number="164" hits="0"/>
+						<line number="166" hits="0"/>
+						<line number="168" hits="1"/>
+					</lines>
+				</class>
+				<class name="config.py" filename="video_understanding/ai/models/config.py" complexity="0" line-rate="0.3125" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="3" hits="1"/>
+						<line number="4" hits="1"/>
+						<line number="5" hits="1"/>
+						<line number="7" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="26" hits="0"/>
+						<line number="33" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="34,36"/>
+						<line number="34" hits="0"/>
 						<line number="36" hits="0"/>
 						<line number="38" hits="0"/>
-						<line number="39" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="40,42"/>
+						<line number="39" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="40,45"/>
 						<line number="40" hits="0"/>
+						<line number="41" hits="0"/>
 						<line number="42" hits="0"/>
-						<line number="44" hits="1"/>
-						<line number="56" hits="0"/>
-						<line number="58" hits="0"/>
+						<line number="43" hits="0"/>
+						<line number="45" hits="0"/>
+					</lines>
+				</class>
+				<class name="document_ai.py" filename="video_understanding/ai/models/document_ai.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+				<class name="gemini.py" filename="video_understanding/ai/models/gemini.py" complexity="0" line-rate="0.3784" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="3" hits="1"/>
+						<line number="4" hits="1"/>
+						<line number="5" hits="1"/>
+						<line number="6" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="13" hits="1"/>
+						<line number="16" hits="1"/>
+						<line number="19" hits="1"/>
+						<line number="25" hits="0"/>
+						<line number="26" hits="0"/>
+						<line number="28" hits="1"/>
+						<line number="34" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="35,38"/>
+						<line number="35" hits="0"/>
+						<line number="38" hits="0"/>
+						<line number="40" hits="1"/>
+						<line number="52" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="53,55"/>
+						<line number="53" hits="0"/>
+						<line number="55" hits="0"/>
+						<line number="56" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="57,59"/>
+						<line number="57" hits="0"/>
 						<line number="59" hits="0"/>
-						<line number="60" hits="0"/>
-						<line number="61" hits="0"/>
-						<line number="65" hits="0"/>
-						<line number="72" hits="0"/>
+						<line number="61" hits="1"/>
 						<line number="73" hits="0"/>
+						<line number="75" hits="0"/>
+						<line number="76" hits="0"/>
+						<line number="77" hits="0"/>
+						<line number="78" hits="0"/>
+						<line number="79" hits="0"/>
+						<line number="83" hits="0"/>
+						<line number="90" hits="0"/>
+						<line number="91" hits="0"/>
+						<line number="93" hits="1"/>
+						<line number="101" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,102"/>
+						<line number="102" hits="0"/>
+						<line number="103" hits="0"/>
 					</lines>
 				</class>
-				<class name="gpt4v.py" filename="ai/models/gpt4v.py" complexity="0" line-rate="0.375" branch-rate="0">
+				<class name="gpt4v.py" filename="video_understanding/ai/models/gpt4v.py" complexity="0" line-rate="0.3333" branch-rate="0.0625">
 					<methods/>
 					<lines>
 						<line number="3" hits="1"/>
 						<line number="4" hits="1"/>
 						<line number="5" hits="1"/>
 						<line number="7" hits="1"/>
-						<line number="9" hits="1"/>
-						<line number="12" hits="1"/>
-						<line number="15" hits="1"/>
-						<line number="21" hits="0"/>
-						<line number="23" hits="1"/>
-						<line number="35" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="36,38"/>
-						<line number="36" hits="0"/>
-						<line number="38" hits="0"/>
-						<line number="39" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="40,42"/>
-						<line number="40" hits="0"/>
-						<line number="42" hits="0"/>
-						<line number="44" hits="1"/>
-						<line number="56" hits="0"/>
-						<line number="58" hits="0"/>
-						<line number="59" hits="0"/>
-						<line number="60" hits="0"/>
-						<line number="61" hits="0"/>
-						<line number="65" hits="0"/>
-						<line number="72" hits="0"/>
+						<line number="8" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="13" hits="1"/>
+						<line number="30" hits="0"/>
+						<line number="31" hits="0"/>
+						<line number="32" hits="0"/>
+						<line number="33" hits="0"/>
+						<line number="34" hits="0"/>
+						<line number="36" hits="1"/>
+						<line number="39" hits="1"/>
+						<line number="48" hits="1"/>
+						<line number="49" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="52"/>
+						<line number="50" hits="1"/>
+						<line number="52" hits="0"/>
+						<line number="53" hits="0"/>
+						<line number="55" hits="1"/>
+						<line number="69" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="70,72"/>
+						<line number="70" hits="0"/>
+						<line number="72" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="73,75"/>
 						<line number="73" hits="0"/>
+						<line number="75" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="76,78"/>
+						<line number="76" hits="0"/>
+						<line number="78" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="79,81"/>
+						<line number="79" hits="0"/>
+						<line number="81" hits="0"/>
+						<line number="83" hits="1"/>
+						<line number="95" hits="0"/>
+						<line number="97" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="98,102"/>
+						<line number="98" hits="0"/>
+						<line number="102" hits="0"/>
+						<line number="103" hits="0"/>
+						<line number="126" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="127,129"/>
+						<line number="127" hits="0"/>
+						<line number="129" hits="0"/>
+						<line number="130" hits="0"/>
+						<line number="136" hits="0"/>
+						<line number="137" hits="0"/>
+						<line number="139" hits="1"/>
+						<line number="141" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,142"/>
+						<line number="142" hits="0"/>
+						<line number="143" hits="0"/>
 					</lines>
 				</class>
-				<class name="twelve_labs.py" filename="ai/models/twelve_labs.py" complexity="0" line-rate="0" branch-rate="0">
+				<class name="twelve_labs.py" filename="video_understanding/ai/models/twelve_labs.py" complexity="0" line-rate="0" branch-rate="0">
 					<methods/>
 					<lines>
 						<line number="3" hits="0"/>
-						<line number="4" hits="0"/>
 						<line number="5" hits="0"/>
 						<line number="6" hits="0"/>
 						<line number="7" hits="0"/>
 						<line number="8" hits="0"/>
 						<line number="9" hits="0"/>
+						<line number="10" hits="0"/>
 						<line number="11" hits="0"/>
 						<line number="13" hits="0"/>
-						<line number="14" hits="0"/>
-						<line number="17" hits="0"/>
+						<line number="15" hits="0"/>
+						<line number="16" hits="0"/>
 						<line number="19" hits="0"/>
-						<line number="23" hits="0"/>
-						<line number="27" hits="0"/>
-						<line number="31" hits="0"/>
+						<line number="22" hits="0"/>
+						<line number="26" hits="0"/>
+						<line number="30" hits="0"/>
 						<line number="34" hits="0"/>
-						<line number="35" hits="0"/>
-						<line number="36" hits="0"/>
 						<line number="37" hits="0"/>
 						<line number="38" hits="0"/>
 						<line number="39" hits="0"/>
 						<line number="40" hits="0"/>
+						<line number="41" hits="0"/>
 						<line number="42" hits="0"/>
-						<line number="51" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="52,54"/>
-						<line number="52" hits="0"/>
-						<line number="54" hits="0"/>
+						<line number="43" hits="0"/>
+						<line number="45" hits="0"/>
+						<line number="54" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="55,57"/>
 						<line number="55" hits="0"/>
-						<line number="56" hits="0"/>
 						<line number="57" hits="0"/>
 						<line number="58" hits="0"/>
 						<line number="59" hits="0"/>
+						<line number="60" hits="0"/>
 						<line number="61" hits="0"/>
 						<line number="62" hits="0"/>
-						<line number="68" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="69,74"/>
-						<line number="69" hits="0"/>
-						<line number="70" hits="0"/>
-						<line number="74" hits="0"/>
-						<line number="76" hits="0"/>
-						<line number="82" hits="0"/>
-						<line number="84" hits="0"/>
-						<line number="96" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="97,100"/>
-						<line number="97" hits="0"/>
-						<line number="100" hits="0"/>
-						<line number="103" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="104,108"/>
-						<line number="104" hits="0"/>
+						<line number="64" hits="0"/>
+						<line number="65" hits="0"/>
+						<line number="71" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="72,79"/>
+						<line number="72" hits="0"/>
+						<line number="73" hits="0"/>
+						<line number="79" hits="0"/>
+						<line number="81" hits="0"/>
+						<line number="87" hits="0"/>
+						<line number="89" hits="0"/>
+						<line number="101" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="102,105"/>
+						<line number="102" hits="0"/>
 						<line number="105" hits="0"/>
-						<line number="108" hits="0"/>
+						<line number="108" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="109,113"/>
 						<line number="109" hits="0"/>
-						<line number="112" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="113,120"/>
-						<line number="113" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="114,116"/>
+						<line number="110" hits="0"/>
+						<line number="113" hits="0"/>
 						<line number="114" hits="0"/>
-						<line number="115" hits="0"/>
-						<line number="116" hits="0"/>
-						<line number="117" hits="0"/>
-						<line number="120" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="122,192"/>
-						<line number="122" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="123,133"/>
-						<line number="123" hits="0"/>
-						<line number="125" hits="0"/>
-						<line number="126" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="127,128"/>
-						<line number="127" hits="0"/>
-						<line number="128" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="129,130"/>
-						<line number="129" hits="0"/>
+						<line number="117" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="118,125"/>
+						<line number="118" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="119,121"/>
+						<line number="119" hits="0"/>
+						<line number="120" hits="0"/>
+						<line number="121" hits="0"/>
+						<line number="122" hits="0"/>
+						<line number="125" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="127,197"/>
+						<line number="127" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="128,138"/>
+						<line number="128" hits="0"/>
 						<line number="130" hits="0"/>
-						<line number="133" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="134,144"/>
+						<line number="131" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="132,133"/>
+						<line number="132" hits="0"/>
+						<line number="133" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="134,135"/>
 						<line number="134" hits="0"/>
-						<line number="136" hits="0"/>
-						<line number="137" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="138,139"/>
-						<line number="138" hits="0"/>
-						<line number="139" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="140,141"/>
-						<line number="140" hits="0"/>
+						<line number="135" hits="0"/>
+						<line number="138" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="139,149"/>
+						<line number="139" hits="0"/>
 						<line number="141" hits="0"/>
-						<line number="144" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="145,157"/>
+						<line number="142" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="143,144"/>
+						<line number="143" hits="0"/>
+						<line number="144" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="145,146"/>
 						<line number="145" hits="0"/>
 						<line number="146" hits="0"/>
-						<line number="147" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="148,152"/>
-						<line number="148" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="149,151"/>
-						<line number="149" hits="0"/>
+						<line number="149" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="150,162"/>
+						<line number="150" hits="0"/>
 						<line number="151" hits="0"/>
-						<line number="152" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="153,154"/>
-						<line number="153" hits="0"/>
+						<line number="152" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="153,157"/>
+						<line number="153" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="154,156"/>
 						<line number="154" hits="0"/>
-						<line number="157" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="158,170"/>
+						<line number="156" hits="0"/>
+						<line number="157" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="158,159"/>
 						<line number="158" hits="0"/>
 						<line number="159" hits="0"/>
-						<line number="160" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="161,165"/>
-						<line number="161" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="162,164"/>
-						<line number="162" hits="0"/>
+						<line number="162" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="163,175"/>
+						<line number="163" hits="0"/>
 						<line number="164" hits="0"/>
-						<line number="165" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="166,167"/>
-						<line number="166" hits="0"/>
+						<line number="165" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="166,170"/>
+						<line number="166" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="167,169"/>
 						<line number="167" hits="0"/>
-						<line number="170" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="171,177"/>
+						<line number="169" hits="0"/>
+						<line number="170" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="171,172"/>
 						<line number="171" hits="0"/>
-						<line number="172" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="173,174"/>
-						<line number="173" hits="0"/>
-						<line number="174" hits="0"/>
-						<line number="177" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="178,184"/>
+						<line number="172" hits="0"/>
+						<line number="175" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="176,182"/>
+						<line number="176" hits="0"/>
+						<line number="177" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="178,179"/>
 						<line number="178" hits="0"/>
-						<line number="179" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="180,181"/>
-						<line number="180" hits="0"/>
-						<line number="181" hits="0"/>
-						<line number="184" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="185,188"/>
+						<line number="179" hits="0"/>
+						<line number="182" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="183,189"/>
+						<line number="183" hits="0"/>
+						<line number="184" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="185,186"/>
 						<line number="185" hits="0"/>
-						<line number="188" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="189,192"/>
-						<line number="189" hits="0"/>
-						<line number="192" hits="0"/>
-						<line number="193" hits="0"/>
-						<line number="195" hits="0"/>
-						<line number="211" hits="0"/>
-						<line number="212" hits="0"/>
-						<line number="213" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="214,215"/>
-						<line number="214" hits="0"/>
-						<line number="215" hits="0"/>
-						<line number="218" hits="0"/>
-						<line number="223" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="224,225"/>
-						<line number="224" hits="0"/>
-						<line number="225" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="226,230"/>
-						<line number="226" hits="0"/>
-						<line number="227" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="228,229"/>
-						<line number="228" hits="0"/>
+						<line number="186" hits="0"/>
+						<line number="189" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="190,193"/>
+						<line number="190" hits="0"/>
+						<line number="193" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="194,197"/>
+						<line number="194" hits="0"/>
+						<line number="197" hits="0"/>
+						<line number="198" hits="0"/>
+						<line number="200" hits="0"/>
+						<line number="216" hits="0"/>
+						<line number="217" hits="0"/>
+						<line number="218" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="219,220"/>
+						<line number="219" hits="0"/>
+						<line number="220" hits="0"/>
+						<line number="223" hits="0"/>
+						<line number="228" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="229,230"/>
 						<line number="229" hits="0"/>
-						<line number="230" hits="0"/>
-						<line number="232" hits="0"/>
+						<line number="230" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="231,235"/>
+						<line number="231" hits="0"/>
+						<line number="232" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="233,234"/>
 						<line number="233" hits="0"/>
 						<line number="234" hits="0"/>
-						<line number="240" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="241,244"/>
-						<line number="241" hits="0"/>
-						<line number="242" hits="0"/>
-						<line number="244" hits="0"/>
-						<line number="245" hits="0"/>
+						<line number="235" hits="0"/>
+						<line number="237" hits="0"/>
+						<line number="238" hits="0"/>
+						<line number="239" hits="0"/>
+						<line number="245" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="246,249"/>
 						<line number="246" hits="0"/>
 						<line number="247" hits="0"/>
-						<line number="248" hits="0"/>
 						<line number="249" hits="0"/>
-						<line number="251" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="252,255"/>
-						<line number="252" hits="0"/>
-						<line number="253" hits="0"/>
+						<line number="250" hits="0"/>
+						<line number="251" hits="0"/>
+						<line number="254" hits="0"/>
 						<line number="255" hits="0"/>
 						<line number="256" hits="0"/>
-						<line number="257" hits="0"/>
+						<line number="258" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="259,262"/>
 						<line number="259" hits="0"/>
 						<line number="260" hits="0"/>
 						<line number="262" hits="0"/>
-						<line number="279" hits="0"/>
-						<line number="280" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="281,289"/>
-						<line number="281" hits="0"/>
-						<line number="282" hits="0"/>
-						<line number="283" hits="0"/>
-						<line number="284" hits="0"/>
-						<line number="285" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="286,288"/>
+						<line number="263" hits="0"/>
+						<line number="264" hits="0"/>
+						<line number="266" hits="0"/>
+						<line number="267" hits="0"/>
+						<line number="269" hits="0"/>
 						<line number="286" hits="0"/>
+						<line number="287" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="288,296"/>
 						<line number="288" hits="0"/>
 						<line number="289" hits="0"/>
+						<line number="290" hits="0"/>
 						<line number="291" hits="0"/>
-						<line number="303" hits="0"/>
-						<line number="304" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="305,346"/>
-						<line number="305" hits="0"/>
-						<line number="306" hits="0"/>
-						<line number="307" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="308,311"/>
-						<line number="308" hits="0"/>
-						<line number="311" hits="0"/>
-						<line number="312" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="313,340"/>
+						<line number="292" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="293,295"/>
+						<line number="293" hits="0"/>
+						<line number="295" hits="0"/>
+						<line number="296" hits="0"/>
+						<line number="298" hits="0"/>
+						<line number="310" hits="0"/>
+						<line number="311" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="312,359"/>
+						<line number="312" hits="0"/>
 						<line number="313" hits="0"/>
-						<line number="314" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="315,316"/>
+						<line number="314" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="315,318"/>
 						<line number="315" hits="0"/>
-						<line number="316" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="317,319"/>
-						<line number="317" hits="0"/>
-						<line number="319" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="320,331"/>
+						<line number="318" hits="0"/>
+						<line number="319" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="320,353"/>
 						<line number="320" hits="0"/>
-						<line number="321" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="323,328"/>
+						<line number="321" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="322,323"/>
+						<line number="322" hits="0"/>
 						<line number="323" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="324,326"/>
 						<line number="324" hits="0"/>
-						<line number="326" hits="0"/>
-						<line number="328" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="329,330"/>
-						<line number="329" hits="0"/>
-						<line number="330" hits="0"/>
-						<line number="331" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="332,334"/>
-						<line number="332" hits="0"/>
+						<line number="326" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="327,340"/>
+						<line number="327" hits="0"/>
+						<line number="328" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="330,337"/>
+						<line number="330" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="331,333"/>
+						<line number="331" hits="0"/>
 						<line number="333" hits="0"/>
-						<line number="334" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="335,338"/>
-						<line number="335" hits="0"/>
-						<line number="336" hits="0"/>
+						<line number="337" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="338,339"/>
 						<line number="338" hits="0"/>
-						<line number="340" hits="0"/>
+						<line number="339" hits="0"/>
+						<line number="340" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="341,347"/>
 						<line number="341" hits="0"/>
-						<line number="342" hits="0"/>
-						<line number="343" hits="0"/>
-						<line number="344" hits="0"/>
 						<line number="346" hits="0"/>
+						<line number="347" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="348,351"/>
 						<line number="348" hits="0"/>
+						<line number="349" hits="0"/>
+						<line number="351" hits="0"/>
+						<line number="353" hits="0"/>
+						<line number="354" hits="0"/>
+						<line number="355" hits="0"/>
 						<line number="356" hits="0"/>
 						<line number="357" hits="0"/>
-						<line number="358" hits="0"/>
-						<line number="359" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,360"/>
-						<line number="360" hits="0"/>
-						<line number="365" hits="0"/>
-						<line number="366" hits="0"/>
-						<line number="368" hits="0"/>
-						<line number="380" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="381,383"/>
+						<line number="359" hits="0"/>
+						<line number="361" hits="0"/>
+						<line number="369" hits="0"/>
+						<line number="370" hits="0"/>
+						<line number="371" hits="0"/>
+						<line number="372" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,373"/>
+						<line number="373" hits="0"/>
+						<line number="378" hits="0"/>
+						<line number="379" hits="0"/>
 						<line number="381" hits="0"/>
-						<line number="383" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="384,386"/>
-						<line number="384" hits="0"/>
-						<line number="386" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="387,389"/>
-						<line number="387" hits="0"/>
-						<line number="389" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="394,396"/>
+						<line number="393" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="394,396"/>
 						<line number="394" hits="0"/>
-						<line number="396" hits="0"/>
-						<line number="397" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="398,400"/>
-						<line number="398" hits="0"/>
-						<line number="400" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="401,403"/>
-						<line number="401" hits="0"/>
-						<line number="403" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="404,406"/>
-						<line number="404" hits="0"/>
-						<line number="406" hits="0"/>
-						<line number="408" hits="0"/>
-						<line number="424" hits="0"/>
-						<line number="425" hits="0"/>
-						<line number="426" hits="0"/>
-						<line number="429" hits="0"/>
-						<line number="433" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="434,437"/>
-						<line number="434" hits="0"/>
-						<line number="435" hits="0"/>
+						<line number="396" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="397,399"/>
+						<line number="397" hits="0"/>
+						<line number="399" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="400,402"/>
+						<line number="400" hits="0"/>
+						<line number="402" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="407,409"/>
+						<line number="407" hits="0"/>
+						<line number="409" hits="0"/>
+						<line number="410" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="411,413"/>
+						<line number="411" hits="0"/>
+						<line number="413" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="414,416"/>
+						<line number="414" hits="0"/>
+						<line number="416" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="417,419"/>
+						<line number="417" hits="0"/>
+						<line number="419" hits="0"/>
+						<line number="421" hits="0"/>
 						<line number="437" hits="0"/>
-						<line number="439" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="440,441"/>
-						<line number="440" hits="0"/>
-						<line number="441" hits="0"/>
-						<line number="444" hits="0"/>
-						<line number="445" hits="0"/>
-						<line number="446" hits="0"/>
+						<line number="438" hits="0"/>
+						<line number="439" hits="0"/>
+						<line number="442" hits="0"/>
+						<line number="446" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="447,452"/>
 						<line number="447" hits="0"/>
-						<line number="450" hits="0"/>
-						<line number="451" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="452,463"/>
+						<line number="448" hits="0"/>
 						<line number="452" hits="0"/>
-						<line number="458" hits="0"/>
-						<line number="459" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="451,460"/>
+						<line number="454" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="455,456"/>
+						<line number="455" hits="0"/>
+						<line number="456" hits="0"/>
+						<line number="459" hits="0"/>
 						<line number="460" hits="0"/>
-						<line number="463" hits="0"/>
-						<line number="464" hits="0"/>
-						<line number="465" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="466,469"/>
-						<line number="466" hits="0"/>
-						<line number="469" hits="0"/>
-						<line number="470" hits="0"/>
+						<line number="461" hits="0"/>
+						<line number="462" hits="0"/>
+						<line number="465" hits="0"/>
+						<line number="466" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="467,478"/>
+						<line number="467" hits="0"/>
+						<line number="473" hits="0"/>
+						<line number="474" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="466,475"/>
+						<line number="475" hits="0"/>
+						<line number="478" hits="0"/>
 						<line number="479" hits="0"/>
-						<line number="480" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="481,482"/>
+						<line number="480" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="481,484"/>
 						<line number="481" hits="0"/>
-						<line number="482" hits="0"/>
+						<line number="484" hits="0"/>
 						<line number="485" hits="0"/>
-						<line number="488" hits="0"/>
-						<line number="489" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="490,497"/>
-						<line number="490" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="491,492"/>
-						<line number="491" hits="0"/>
-						<line number="492" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="493,495"/>
-						<line number="493" hits="0"/>
-						<line number="495" hits="0"/>
+						<line number="494" hits="0"/>
+						<line number="495" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="496,497"/>
+						<line number="496" hits="0"/>
 						<line number="497" hits="0"/>
 						<line number="500" hits="0"/>
-						<line number="505" hits="0"/>
-						<line number="507" hits="0"/>
+						<line number="503" hits="0"/>
+						<line number="504" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="505,512"/>
+						<line number="505" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="506,507"/>
+						<line number="506" hits="0"/>
+						<line number="507" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="508,510"/>
 						<line number="508" hits="0"/>
 						<line number="510" hits="0"/>
+						<line number="512" hits="0"/>
+						<line number="515" hits="0"/>
 						<line number="520" hits="0"/>
-						<line number="521" hits="0"/>
-						<line number="526" hits="0"/>
-						<line number="527" hits="0"/>
-						<line number="528" hits="0"/>
-						<line number="530" hits="0"/>
-						<line number="540" hits="0"/>
+						<line number="522" hits="0"/>
+						<line number="523" hits="0"/>
+						<line number="525" hits="0"/>
+						<line number="535" hits="0"/>
+						<line number="536" hits="0"/>
 						<line number="541" hits="0"/>
-						<line number="544" hits="0"/>
+						<line number="542" hits="0"/>
+						<line number="543" hits="0"/>
 						<line number="545" hits="0"/>
-						<line number="546" hits="0"/>
-						<line number="548" hits="0"/>
-						<line number="550" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="551,553"/>
-						<line number="551" hits="0"/>
-						<line number="552" hits="0"/>
-						<line number="553" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="554,558"/>
-						<line number="554" hits="0"/>
 						<line number="555" hits="0"/>
 						<line number="556" hits="0"/>
-						<line number="558" hits="0"/>
+						<line number="559" hits="0"/>
 						<line number="560" hits="0"/>
-						<line number="562" hits="0"/>
-						<line number="564" hits="0"/>
-						<line number="576" hits="0"/>
-						<line number="578" hits="0"/>
-						<line number="581" hits="0"/>
-						<line number="582" hits="0"/>
-						<line number="585" hits="0"/>
-						<line number="586" hits="0"/>
-						<line number="587" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="588,596"/>
-						<line number="588" hits="0"/>
+						<line number="561" hits="0"/>
+						<line number="563" hits="0"/>
+						<line number="565" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="566,568"/>
+						<line number="566" hits="0"/>
+						<line number="567" hits="0"/>
+						<line number="568" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="569,573"/>
+						<line number="569" hits="0"/>
+						<line number="570" hits="0"/>
+						<line number="571" hits="0"/>
+						<line number="573" hits="0"/>
+						<line number="575" hits="0"/>
+						<line number="577" hits="0"/>
+						<line number="579" hits="0"/>
+						<line number="591" hits="0"/>
+						<line number="593" hits="0"/>
 						<line number="596" hits="0"/>
 						<line number="597" hits="0"/>
-						<line number="598" hits="0"/>
-						<line number="599" hits="0"/>
+						<line number="600" hits="0"/>
 						<line number="601" hits="0"/>
-						<line number="615" hits="0"/>
-						<line number="620" hits="0"/>
-						<line number="622" hits="0"/>
-						<line number="642" hits="0"/>
-						<line number="643" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="644,646"/>
-						<line number="644" hits="0"/>
-						<line number="646" hits="0"/>
-						<line number="656" hits="0"/>
+						<line number="602" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="603,611"/>
+						<line number="603" hits="0"/>
+						<line number="611" hits="0"/>
+						<line number="612" hits="0"/>
+						<line number="613" hits="0"/>
+						<line number="614" hits="0"/>
+						<line number="616" hits="0"/>
+						<line number="630" hits="0"/>
+						<line number="635" hits="0"/>
+						<line number="637" hits="0"/>
+						<line number="657" hits="0"/>
+						<line number="658" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="659,661"/>
+						<line number="659" hits="0"/>
+						<line number="661" hits="0"/>
+						<line number="671" hits="0"/>
 					</lines>
 				</class>
-				<class name="whisper.py" filename="ai/models/whisper.py" complexity="0" line-rate="0.2778" branch-rate="0">
+				<class name="whisper.py" filename="video_understanding/ai/models/whisper.py" complexity="0" line-rate="0.3036" branch-rate="0">
 					<methods/>
 					<lines>
+						<line number="13" hits="1"/>
 						<line number="14" hits="1"/>
 						<line number="15" hits="1"/>
 						<line number="16" hits="1"/>
 						<line number="18" hits="1"/>
 						<line number="19" hits="1"/>
-						<line number="22" hits="1"/>
-						<line number="35" hits="1"/>
-						<line number="36" hits="1"/>
+						<line number="21" hits="1"/>
+						<line number="24" hits="1"/>
 						<line number="37" hits="1"/>
+						<line number="38" hits="1"/>
 						<line number="39" hits="1"/>
-						<line number="48" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="49,50"/>
-						<line number="49" hits="0"/>
-						<line number="50" hits="0"/>
+						<line number="41" hits="1"/>
+						<line number="50" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="51,52"/>
 						<line number="51" hits="0"/>
-						<line number="53" hits="1"/>
-						<line number="69" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="70,72"/>
-						<line number="70" hits="0"/>
-						<line number="72" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="73,75"/>
-						<line number="73" hits="0"/>
+						<line number="52" hits="0"/>
+						<line number="53" hits="0"/>
+						<line number="55" hits="1"/>
+						<line number="71" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="72,74"/>
+						<line number="72" hits="0"/>
+						<line number="74" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="75,77"/>
 						<line number="75" hits="0"/>
-						<line number="76" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="77,79"/>
 						<line number="77" hits="0"/>
-						<line number="79" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="80,84"/>
-						<line number="80" hits="0"/>
-						<line number="81" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="82,84"/>
+						<line number="78" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="79,81"/>
+						<line number="79" hits="0"/>
+						<line number="81" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="82,86"/>
 						<line number="82" hits="0"/>
+						<line number="83" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="84,86"/>
 						<line number="84" hits="0"/>
-						<line number="86" hits="1"/>
-						<line number="107" hits="0"/>
+						<line number="86" hits="0"/>
+						<line number="88" hits="1"/>
 						<line number="109" hits="0"/>
-						<line number="111" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="112,114"/>
-						<line number="112" hits="0"/>
+						<line number="111" hits="0"/>
+						<line number="113" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="114,116"/>
 						<line number="114" hits="0"/>
-						<line number="115" hits="0"/>
 						<line number="116" hits="0"/>
 						<line number="117" hits="0"/>
-						<line number="120" hits="0"/>
-						<line number="127" hits="0"/>
-						<line number="137" hits="0"/>
-						<line number="138" hits="0"/>
-						<line number="140" hits="1"/>
-						<line number="149" hits="0"/>
-						<line number="152" hits="0"/>
-						<line number="153" hits="0"/>
+						<line number="118" hits="0"/>
+						<line number="119" hits="0"/>
+						<line number="122" hits="0"/>
+						<line number="129" hits="0"/>
+						<line number="139" hits="0"/>
+						<line number="140" hits="0"/>
+						<line number="142" hits="1"/>
+						<line number="151" hits="0"/>
 						<line number="154" hits="0"/>
 						<line number="155" hits="0"/>
-						<line number="157" hits="1"/>
-						<line number="178" hits="0"/>
-						<line number="181" hits="0"/>
-						<line number="182" hits="0"/>
-						<line number="195" hits="0"/>
-						<line number="196" hits="0"/>
-						<line number="198" hits="1"/>
-						<line number="204" hits="0"/>
+						<line number="156" hits="0"/>
+						<line number="157" hits="0"/>
+						<line number="159" hits="1"/>
+						<line number="180" hits="0"/>
+						<line number="183" hits="0"/>
+						<line number="184" hits="0"/>
+						<line number="197" hits="0"/>
+						<line number="198" hits="0"/>
+						<line number="200" hits="1"/>
+						<line number="206" hits="0"/>
 					</lines>
 				</class>
 			</classes>
 		</package>
-		<package name="ai.models.twelve_labs" line-rate="0.6636" branch-rate="0.3667" complexity="0">
+		<package name="video_understanding.ai.models.twelve_labs" line-rate="0.2825" branch-rate="0" complexity="0">
 			<classes>
-				<class name="client.py" filename="ai/models/twelve_labs/client.py" complexity="0" line-rate="0.3407" branch-rate="0.05882">
+				<class name="client.py" filename="video_understanding/ai/models/twelve_labs/client.py" complexity="0" line-rate="0.2762" branch-rate="0">
 					<methods/>
 					<lines>
 						<line number="20" hits="1"/>
 						<line number="21" hits="1"/>
 						<line number="22" hits="1"/>
 						<line number="23" hits="1"/>
-						<line number="24" hits="1"/>
 						<line number="25" hits="1"/>
-						<line number="27" hits="1"/>
-						<line number="33" hits="1"/>
+						<line number="26" hits="1"/>
+						<line number="28" hits="1"/>
 						<line number="35" hits="1"/>
 						<line number="37" hits="1"/>
-						<line number="57" hits="1"/>
-						<line number="58" hits="1"/>
-						<line number="59" hits="1"/>
+						<line number="40" hits="1"/>
 						<line number="60" hits="1"/>
 						<line number="61" hits="1"/>
 						<line number="62" hits="1"/>
+						<line number="63" hits="1"/>
 						<line number="64" hits="1"/>
-						<line number="73" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="74"/>
-						<line number="74" hits="0"/>
-						<line number="76" hits="1"/>
-						<line number="77" hits="1"/>
-						<line number="78" hits="1"/>
-						<line number="79" hits="1"/>
-						<line number="81" hits="1"/>
-						<line number="95" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="96,102"/>
-						<line number="96" hits="0"/>
-						<line number="102" hits="0"/>
-						<line number="104" hits="1"/>
-						<line number="110" hits="1"/>
+						<line number="65" hits="1"/>
+						<line number="67" hits="1"/>
+						<line number="76" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="77,79"/>
+						<line number="77" hits="0"/>
+						<line number="79" hits="0"/>
+						<line number="80" hits="0"/>
+						<line number="81" hits="0"/>
+						<line number="82" hits="0"/>
+						<line number="84" hits="1"/>
+						<line number="98" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="99,105"/>
+						<line number="99" hits="0"/>
+						<line number="105" hits="0"/>
+						<line number="107" hits="1"/>
+						<line number="113" hits="1"/>
 						<line number="140" hits="0"/>
 						<line number="141" hits="0"/>
 						<line number="143" hits="0"/>
@@ -685,279 +860,571 @@
 						<line number="195" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="196,199"/>
 						<line number="196" hits="0"/>
 						<line number="199" hits="0"/>
+						<line number="202" hits="0"/>
+						<line number="203" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="204,207"/>
 						<line number="204" hits="0"/>
-						<line number="205" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="206,209"/>
-						<line number="206" hits="0"/>
-						<line number="209" hits="0"/>
+						<line number="207" hits="0"/>
+						<line number="208" hits="0"/>
+						<line number="209" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="210,219"/>
 						<line number="210" hits="0"/>
-						<line number="211" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="212,221"/>
-						<line number="212" hits="0"/>
-						<line number="217" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="211,218"/>
-						<line number="218" hits="0"/>
+						<line number="215" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="209,216"/>
+						<line number="216" hits="0"/>
+						<line number="219" hits="0"/>
+						<line number="220" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="221,222"/>
 						<line number="221" hits="0"/>
-						<line number="222" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="223,224"/>
-						<line number="223" hits="0"/>
-						<line number="224" hits="0"/>
-						<line number="226" hits="1"/>
-						<line number="255" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="256,258"/>
-						<line number="256" hits="0"/>
-						<line number="258" hits="0"/>
+						<line number="222" hits="0"/>
+						<line number="224" hits="1"/>
+						<line number="253" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="254,256"/>
+						<line number="254" hits="0"/>
+						<line number="256" hits="0"/>
+						<line number="266" hits="0"/>
+						<line number="267" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="268,269"/>
 						<line number="268" hits="0"/>
-						<line number="269" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="270,271"/>
-						<line number="270" hits="0"/>
-						<line number="271" hits="0"/>
-						<line number="273" hits="1"/>
-						<line number="293" hits="0"/>
+						<line number="269" hits="0"/>
+						<line number="271" hits="1"/>
+						<line number="291" hits="0"/>
+						<line number="292" hits="0"/>
+						<line number="293" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="294,296"/>
 						<line number="294" hits="0"/>
-						<line number="295" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="296,298"/>
 						<line number="296" hits="0"/>
-						<line number="298" hits="0"/>
-						<line number="299" hits="0"/>
-						<line number="301" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="302,309"/>
-						<line number="302" hits="0"/>
-						<line number="309" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="310,313"/>
-						<line number="310" hits="0"/>
-						<line number="313" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="314,316"/>
+						<line number="297" hits="0"/>
+						<line number="299" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="300,307"/>
+						<line number="300" hits="0"/>
+						<line number="307" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="308,311"/>
+						<line number="308" hits="0"/>
+						<line number="311" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="312,314"/>
+						<line number="312" hits="0"/>
 						<line number="314" hits="0"/>
-						<line number="316" hits="0"/>
-						<line number="318" hits="1"/>
-						<line number="346" hits="0"/>
-						<line number="355" hits="0"/>
-						<line number="357" hits="1"/>
-						<line number="367" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="368"/>
-						<line number="368" hits="0"/>
-						<line number="369" hits="0"/>
+						<line number="316" hits="1"/>
+						<line number="341" hits="0"/>
+						<line number="350" hits="0"/>
+						<line number="352" hits="1"/>
+						<line number="362" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,363"/>
+						<line number="363" hits="0"/>
+						<line number="364" hits="0"/>
+						<line number="366" hits="1"/>
+						<line number="375" hits="0"/>
+						<line number="377" hits="1"/>
+						<line number="390" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="391,393"/>
+						<line number="391" hits="0"/>
+						<line number="393" hits="0"/>
+						<line number="395" hits="1"/>
+						<line number="409" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="410,412"/>
+						<line number="410" hits="0"/>
+						<line number="412" hits="0"/>
+						<line number="416" hits="1"/>
+						<line number="426" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="427,429"/>
+						<line number="427" hits="0"/>
+						<line number="429" hits="0"/>
 					</lines>
 				</class>
-				<class name="exceptions.py" filename="ai/models/twelve_labs/exceptions.py" complexity="0" line-rate="1" branch-rate="1">
+				<class name="exceptions.py" filename="video_understanding/ai/models/twelve_labs/exceptions.py" complexity="0" line-rate="1" branch-rate="1">
 					<methods/>
 					<lines>
+						<line number="3" hits="1"/>
 						<line number="6" hits="1"/>
-						<line number="8" hits="1"/>
-						<line number="15" hits="1"/>
-						<line number="22" hits="1"/>
-						<line number="29" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="18" hits="1"/>
+						<line number="27" hits="1"/>
 						<line number="36" hits="1"/>
-						<line number="43" hits="1"/>
-						<line number="50" hits="1"/>
-						<line number="57" hits="1"/>
-						<line number="65" hits="1"/>
+						<line number="45" hits="1"/>
+						<line number="51" hits="1"/>
+						<line number="60" hits="1"/>
+						<line number="70" hits="1"/>
 					</lines>
 				</class>
-				<class name="model.py" filename="ai/models/twelve_labs/model.py" complexity="0" line-rate="0.8675" branch-rate="0.7692">
+				<class name="model.py" filename="video_understanding/ai/models/twelve_labs/model.py" complexity="0" line-rate="0.1456" branch-rate="0">
 					<methods/>
 					<lines>
 						<line number="34" hits="1"/>
 						<line number="35" hits="1"/>
 						<line number="36" hits="1"/>
-						<line number="38" hits="1"/>
+						<line number="37" hits="1"/>
 						<line number="39" hits="1"/>
-						<line number="43" hits="1"/>
-						<line number="44" hits="1"/>
-						<line number="46" hits="1"/>
-						<line number="73" hits="1"/>
-						<line number="74" hits="1"/>
-						<line number="76" hits="1"/>
-						<line number="92" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="93" hits="1"/>
-						<line number="95" hits="1"/>
-						<line number="96" hits="1"/>
-						<line number="98" hits="1"/>
-						<line number="140" hits="1"/>
-						<line number="142" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="143" hits="1"/>
-						<line number="145" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="146" hits="1"/>
-						<line number="148" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="149" hits="1"/>
-						<line number="152" hits="1"/>
-						<line number="153" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="158"/>
-						<line number="154" hits="1"/>
-						<line number="155" hits="1"/>
-						<line number="156" hits="1"/>
-						<line number="157" hits="1"/>
-						<line number="158" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="159,162"/>
-						<line number="159" hits="0"/>
-						<line number="162" hits="1"/>
-						<line number="163" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="164" hits="1"/>
-						<line number="166" hits="1" branch="true" condition-coverage="100% (2/2)"/>
+						<line number="41" hits="1"/>
+						<line number="47" hits="1"/>
+						<line number="49" hits="1"/>
+						<line number="50" hits="1"/>
+						<line number="51" hits="1"/>
+						<line number="54" hits="1"/>
+						<line number="82" hits="1"/>
+						<line number="83" hits="1"/>
+						<line number="84" hits="1"/>
+						<line number="86" hits="1"/>
+						<line number="103" hits="0"/>
+						<line number="104" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="105,107"/>
+						<line number="105" hits="0"/>
+						<line number="107" hits="0"/>
+						<line number="108" hits="0"/>
+						<line number="109" hits="0"/>
+						<line number="110" hits="0"/>
+						<line number="111" hits="0"/>
+						<line number="112" hits="0"/>
+						<line number="114" hits="1"/>
+						<line number="126" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="127,133"/>
+						<line number="127" hits="0"/>
+						<line number="132" hits="0"/>
+						<line number="133" hits="0"/>
+						<line number="135" hits="1"/>
+						<line number="147" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="148,152"/>
+						<line number="148" hits="0"/>
+						<line number="149" hits="0"/>
+						<line number="152" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="153,157"/>
+						<line number="153" hits="0"/>
+						<line number="154" hits="0"/>
+						<line number="155" hits="0"/>
+						<line number="157" hits="0"/>
+						<line number="160" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="161,165"/>
+						<line number="161" hits="0"/>
+						<line number="162" hits="0"/>
+						<line number="163" hits="0"/>
+						<line number="165" hits="0"/>
 						<line number="167" hits="1"/>
-						<line number="169" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="170" hits="1"/>
-						<line number="173" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="174"/>
-						<line number="174" hits="0"/>
-						<line number="175" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="176,178"/>
-						<line number="176" hits="0"/>
-						<line number="178" hits="1"/>
-						<line number="180" hits="1"/>
-						<line number="181" hits="0"/>
-						<line number="183" hits="1"/>
-						<line number="240" hits="1"/>
-						<line number="242" hits="1"/>
-						<line number="244" hits="1"/>
-						<line number="249" hits="1"/>
-						<line number="254" hits="1"/>
-						<line number="256" hits="1"/>
-						<line number="258" hits="1"/>
-						<line number="259" hits="1"/>
-						<line number="270" hits="1"/>
-						<line number="272" hits="0"/>
-						<line number="273" hits="0"/>
-						<line number="275" hits="1"/>
-						<line number="342" hits="1"/>
-						<line number="343" hits="1"/>
-						<line number="344" hits="1"/>
-						<line number="345" hits="1"/>
-						<line number="347" hits="1"/>
-						<line number="380" hits="1"/>
-						<line number="381" hits="1"/>
-						<line number="383" hits="1"/>
-						<line number="428" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="429" hits="1"/>
-						<line number="431" hits="1"/>
+						<line number="191" hits="0"/>
+						<line number="192" hits="0"/>
+						<line number="194" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="195,198"/>
+						<line number="195" hits="0"/>
+						<line number="198" hits="0"/>
+						<line number="200" hits="0"/>
+						<line number="201" hits="0"/>
+						<line number="202" hits="0"/>
+						<line number="203" hits="0"/>
+						<line number="204" hits="0"/>
+						<line number="205" hits="0"/>
+						<line number="207" hits="0"/>
+						<line number="211" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="212,216"/>
+						<line number="212" hits="0"/>
+						<line number="213" hits="0"/>
+						<line number="216" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="217,218"/>
+						<line number="217" hits="0"/>
+						<line number="218" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="219,220"/>
+						<line number="219" hits="0"/>
+						<line number="220" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="221,222"/>
+						<line number="221" hits="0"/>
+						<line number="222" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="223,224"/>
+						<line number="223" hits="0"/>
+						<line number="224" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="225,227"/>
+						<line number="225" hits="0"/>
+						<line number="227" hits="0"/>
+						<line number="229" hits="0"/>
+						<line number="230" hits="0"/>
+						<line number="232" hits="1"/>
+						<line number="255" hits="0"/>
+						<line number="256" hits="0"/>
+						<line number="258" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="259,271"/>
+						<line number="259" hits="0"/>
+						<line number="260" hits="0"/>
+						<line number="261" hits="0"/>
+						<line number="262" hits="0"/>
+						<line number="263" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="264,265"/>
+						<line number="264" hits="0"/>
+						<line number="265" hits="0"/>
+						<line number="266" hits="0"/>
+						<line number="267" hits="0"/>
+						<line number="269" hits="0"/>
+						<line number="271" hits="0"/>
+						<line number="273" hits="1"/>
+						<line number="315" hits="0"/>
+						<line number="317" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="318,320"/>
+						<line number="318" hits="0"/>
+						<line number="320" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="321,323"/>
+						<line number="321" hits="0"/>
+						<line number="323" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="324,327"/>
+						<line number="324" hits="0"/>
+						<line number="327" hits="0"/>
+						<line number="328" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="329,333"/>
+						<line number="329" hits="0"/>
+						<line number="330" hits="0"/>
+						<line number="331" hits="0"/>
+						<line number="332" hits="0"/>
+						<line number="333" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="334,337"/>
+						<line number="334" hits="0"/>
+						<line number="337" hits="0"/>
+						<line number="338" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="339,341"/>
+						<line number="339" hits="0"/>
+						<line number="341" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="342,344"/>
+						<line number="342" hits="0"/>
+						<line number="344" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="345,348"/>
+						<line number="345" hits="0"/>
+						<line number="348" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="349,353"/>
+						<line number="349" hits="0"/>
+						<line number="350" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="351,353"/>
+						<line number="351" hits="0"/>
+						<line number="353" hits="0"/>
+						<line number="355" hits="0"/>
+						<line number="356" hits="0"/>
+						<line number="358" hits="1"/>
+						<line number="398" hits="0"/>
+						<line number="400" hits="0"/>
+						<line number="402" hits="0"/>
+						<line number="405" hits="0"/>
+						<line number="408" hits="0"/>
+						<line number="410" hits="0"/>
+						<line number="412" hits="0"/>
+						<line number="415" hits="0"/>
+						<line number="425" hits="0"/>
+						<line number="427" hits="0"/>
+						<line number="428" hits="0"/>
+						<line number="429" hits="0"/>
+						<line number="430" hits="0"/>
 						<line number="432" hits="1"/>
-						<line number="433" hits="1"/>
-						<line number="435" hits="1"/>
-						<line number="437" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="439" hits="1"/>
-						<line number="441" hits="1"/>
-						<line number="443" hits="1"/>
-						<line number="444" hits="1"/>
-						<line number="445" hits="1"/>
-						<line number="446" hits="0"/>
-						<line number="450" hits="1"/>
-						<line number="451" hits="1"/>
-						<line number="452" hits="0"/>
-						<line number="454" hits="0"/>
+						<line number="496" hits="0"/>
+						<line number="497" hits="0"/>
+						<line number="498" hits="0"/>
+						<line number="499" hits="0"/>
+						<line number="501" hits="1"/>
+						<line number="510" hits="0"/>
+						<line number="511" hits="0"/>
+						<line number="512" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,513"/>
+						<line number="513" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,517"/>
+						<line number="517" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,518"/>
+						<line number="518" hits="0"/>
+						<line number="519" hits="0"/>
+						<line number="520" hits="0"/>
+						<line number="522" hits="1"/>
+						<line number="535" hits="0"/>
+						<line number="536" hits="0"/>
+						<line number="537" hits="0"/>
+						<line number="538" hits="0"/>
+						<line number="540" hits="1"/>
+						<line number="585" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,586"/>
+						<line number="586" hits="0"/>
+						<line number="588" hits="0"/>
+						<line number="589" hits="0"/>
+						<line number="590" hits="0"/>
+						<line number="592" hits="0"/>
+						<line number="594" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="596,598"/>
+						<line number="596" hits="0"/>
+						<line number="598" hits="0"/>
+						<line number="600" hits="0"/>
+						<line number="601" hits="0"/>
+						<line number="602" hits="0"/>
+						<line number="603" hits="0"/>
+						<line number="607" hits="0"/>
+						<line number="608" hits="0"/>
+						<line number="609" hits="0"/>
+						<line number="611" hits="0"/>
+						<line number="616" hits="1"/>
+						<line number="617" hits="1"/>
+						<line number="623" hits="0"/>
+						<line number="625" hits="1"/>
+						<line number="640" hits="0"/>
+						<line number="641" hits="0"/>
+						<line number="643" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="644,648"/>
+						<line number="644" hits="0"/>
+						<line number="648" hits="0"/>
+						<line number="650" hits="0"/>
+						<line number="651" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="652,653"/>
+						<line number="652" hits="0"/>
+						<line number="653" hits="0"/>
+						<line number="655" hits="1"/>
+						<line number="668" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="669,672"/>
+						<line number="669" hits="0"/>
+						<line number="672" hits="0"/>
+						<line number="675" hits="0"/>
+						<line number="676" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="677,680"/>
+						<line number="677" hits="0"/>
+						<line number="680" hits="0"/>
+						<line number="681" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="682,686"/>
+						<line number="682" hits="0"/>
+						<line number="686" hits="0"/>
+						<line number="687" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="688,690"/>
+						<line number="688" hits="0"/>
+						<line number="690" hits="0"/>
+						<line number="692" hits="1"/>
+						<line number="700" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="701,705"/>
+						<line number="701" hits="0"/>
+						<line number="702" hits="0"/>
+						<line number="703" hits="0"/>
+						<line number="705" hits="0"/>
+						<line number="708" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="709,713"/>
+						<line number="709" hits="0"/>
+						<line number="710" hits="0"/>
+						<line number="711" hits="0"/>
+						<line number="713" hits="0"/>
 					</lines>
 				</class>
-				<class name="types.py" filename="ai/models/twelve_labs/types.py" complexity="0" line-rate="0.9394" branch-rate="1">
+				<class name="types.py" filename="video_understanding/ai/models/twelve_labs/types.py" complexity="0" line-rate="0.9394" branch-rate="1">
 					<methods/>
 					<lines>
 						<line number="16" hits="1"/>
 						<line number="17" hits="1"/>
 						<line number="19" hits="1"/>
-						<line number="21" hits="1"/>
-						<line number="39" hits="1"/>
-						<line number="40" hits="1"/>
+						<line number="22" hits="1"/>
 						<line number="41" hits="1"/>
+						<line number="42" hits="1"/>
 						<line number="43" hits="1"/>
-						<line number="65" hits="1"/>
-						<line number="66" hits="1"/>
-						<line number="67" hits="1"/>
-						<line number="68" hits="1"/>
+						<line number="46" hits="1"/>
+						<line number="69" hits="1"/>
 						<line number="70" hits="1"/>
-						<line number="92" hits="1"/>
-						<line number="93" hits="1"/>
-						<line number="94" hits="1"/>
-						<line number="95" hits="1"/>
-						<line number="97" hits="1"/>
-						<line number="121" hits="1"/>
-						<line number="122" hits="1"/>
-						<line number="123" hits="1"/>
-						<line number="124" hits="1"/>
-						<line number="125" hits="1"/>
-						<line number="127" hits="1"/>
-						<line number="150" hits="1"/>
-						<line number="151" hits="1"/>
-						<line number="152" hits="1"/>
-						<line number="153" hits="1"/>
-						<line number="154" hits="1"/>
-						<line number="156" hits="1"/>
-						<line number="167" hits="0"/>
-						<line number="169" hits="1"/>
-						<line number="176" hits="0"/>
+						<line number="71" hits="1"/>
+						<line number="72" hits="1"/>
+						<line number="75" hits="1"/>
+						<line number="98" hits="1"/>
+						<line number="99" hits="1"/>
+						<line number="100" hits="1"/>
+						<line number="101" hits="1"/>
+						<line number="104" hits="1"/>
+						<line number="129" hits="1"/>
+						<line number="130" hits="1"/>
+						<line number="131" hits="1"/>
+						<line number="132" hits="1"/>
+						<line number="133" hits="1"/>
+						<line number="136" hits="1"/>
+						<line number="160" hits="1"/>
+						<line number="161" hits="1"/>
+						<line number="162" hits="1"/>
+						<line number="163" hits="1"/>
+						<line number="164" hits="1"/>
+						<line number="167" hits="1"/>
+						<line number="178" hits="0"/>
+						<line number="181" hits="1"/>
+						<line number="188" hits="0"/>
 					</lines>
 				</class>
 			</classes>
 		</package>
-		<package name="core" line-rate="0.5746" branch-rate="0.4451" complexity="0">
+		<package name="video_understanding.ai.ocr" line-rate="0" branch-rate="1" complexity="0">
 			<classes>
-				<class name="doc.py" filename="core/doc.py" complexity="0" line-rate="1" branch-rate="1">
+				<class name="base.py" filename="video_understanding/ai/ocr/base.py" complexity="0" line-rate="0" branch-rate="1">
 					<methods/>
 					<lines>
-						<line number="6" hits="1"/>
-						<line number="7" hits="1"/>
-						<line number="10" hits="1"/>
-						<line number="22" hits="1"/>
-						<line number="29" hits="1"/>
-						<line number="30" hits="1"/>
-						<line number="31" hits="1"/>
-						<line number="33" hits="1"/>
-						<line number="48" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="49" hits="1"/>
-						<line number="51" hits="1"/>
+						<line number="1" hits="0"/>
+						<line number="2" hits="0"/>
+						<line number="3" hits="0"/>
+						<line number="6" hits="0"/>
+						<line number="9" hits="0"/>
+						<line number="10" hits="0"/>
+						<line number="35" hits="0"/>
+						<line number="36" hits="0"/>
+						<line number="59" hits="0"/>
+						<line number="60" hits="0"/>
+					</lines>
+				</class>
+				<class name="document_ai.py" filename="video_understanding/ai/ocr/document_ai.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+				<class name="service.py" filename="video_understanding/ai/ocr/service.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+			</classes>
+		</package>
+		<package name="video_understanding.ai.scene" line-rate="1" branch-rate="1" complexity="0">
+			<classes>
+				<class name="base.py" filename="video_understanding/ai/scene/base.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+				<class name="service.py" filename="video_understanding/ai/scene/service.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+				<class name="twelve_labs.py" filename="video_understanding/ai/scene/twelve_labs.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+			</classes>
+		</package>
+		<package name="video_understanding.ai.transcription" line-rate="1" branch-rate="1" complexity="0">
+			<classes>
+				<class name="base.py" filename="video_understanding/ai/transcription/base.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+				<class name="hybrid.py" filename="video_understanding/ai/transcription/hybrid.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+				<class name="service.py" filename="video_understanding/ai/transcription/service.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+			</classes>
+		</package>
+		<package name="video_understanding.core" line-rate="0.2849" branch-rate="0.005495" complexity="0">
+			<classes>
+				<class name="config.py" filename="video_understanding/core/config.py" complexity="0" line-rate="0" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="7" hits="0"/>
+						<line number="8" hits="0"/>
+						<line number="11" hits="0"/>
+						<line number="14" hits="0"/>
+						<line number="17" hits="0"/>
+						<line number="18" hits="0"/>
+						<line number="30" hits="0"/>
+						<line number="31" hits="0"/>
+						<line number="32" hits="0"/>
+						<line number="33" hits="0"/>
+						<line number="34" hits="0"/>
+						<line number="35" hits="0"/>
+						<line number="37" hits="0"/>
+						<line number="43" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="44,45"/>
+						<line number="44" hits="0"/>
+						<line number="45" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="46,47"/>
+						<line number="46" hits="0"/>
+						<line number="47" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="48,49"/>
+						<line number="48" hits="0"/>
+						<line number="49" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="50,51"/>
+						<line number="50" hits="0"/>
+						<line number="51" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="52,53"/>
+						<line number="52" hits="0"/>
+						<line number="53" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,54"/>
+						<line number="54" hits="0"/>
+						<line number="57" hits="0"/>
+						<line number="58" hits="0"/>
+						<line number="70" hits="0"/>
+						<line number="71" hits="0"/>
+						<line number="72" hits="0"/>
+						<line number="73" hits="0"/>
+						<line number="74" hits="0"/>
+						<line number="75" hits="0"/>
+						<line number="77" hits="0"/>
+						<line number="83" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="84,85"/>
+						<line number="84" hits="0"/>
+						<line number="85" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="86,87"/>
+						<line number="86" hits="0"/>
+						<line number="87" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="88,89"/>
+						<line number="88" hits="0"/>
+						<line number="89" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="90,91"/>
+						<line number="90" hits="0"/>
+						<line number="91" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="92,93"/>
+						<line number="92" hits="0"/>
+						<line number="93" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,94"/>
+						<line number="94" hits="0"/>
+						<line number="97" hits="0"/>
+						<line number="98" hits="0"/>
+						<line number="108" hits="0"/>
+						<line number="109" hits="0"/>
+						<line number="110" hits="0"/>
+						<line number="111" hits="0"/>
+						<line number="113" hits="0"/>
+						<line number="119" hits="0"/>
+						<line number="120" hits="0"/>
+						<line number="121" hits="0"/>
+						<line number="122" hits="0"/>
+						<line number="123" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,124"/>
+						<line number="124" hits="0"/>
+						<line number="127" hits="0"/>
+						<line number="139" hits="0"/>
+						<line number="140" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="141,143"/>
+						<line number="141" hits="0"/>
+						<line number="143" hits="0"/>
+						<line number="144" hits="0"/>
+						<line number="146" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="147,149"/>
+						<line number="147" hits="0"/>
+						<line number="149" hits="0"/>
+						<line number="155" hits="0"/>
+						<line number="156" hits="0"/>
+						<line number="158" hits="0"/>
+						<line number="159" hits="0"/>
+						<line number="162" hits="0"/>
+						<line number="168" hits="0"/>
+						<line number="171" hits="0"/>
+						<line number="180" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="181,182"/>
+						<line number="181" hits="0"/>
+						<line number="182" hits="0"/>
+					</lines>
+				</class>
+				<class name="doc.py" filename="video_understanding/core/doc.py" complexity="0" line-rate="0.5" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="6" hits="1"/>
+						<line number="7" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="22" hits="1"/>
+						<line number="29" hits="0"/>
+						<line number="30" hits="0"/>
+						<line number="31" hits="0"/>
+						<line number="33" hits="1"/>
+						<line number="48" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="49,51"/>
+						<line number="49" hits="0"/>
+						<line number="51" hits="0"/>
 						<line number="58" hits="1"/>
 						<line number="59" hits="1"/>
-						<line number="65" hits="1"/>
+						<line number="65" hits="0"/>
 						<line number="68" hits="1"/>
-						<line number="86" hits="1"/>
+						<line number="86" hits="0"/>
 					</lines>
 				</class>
-				<class name="exceptions.py" filename="core/exceptions.py" complexity="0" line-rate="0.8222" branch-rate="0">
+				<class name="exceptions.py" filename="video_understanding/core/exceptions.py" complexity="0" line-rate="0.8103" branch-rate="0.1667">
 					<methods/>
 					<lines>
-						<line number="9" hits="1"/>
-						<line number="11" hits="1"/>
-						<line number="16" hits="1"/>
-						<line number="23" hits="1"/>
-						<line number="24" hits="1"/>
-						<line number="26" hits="1"/>
-						<line number="33" hits="1"/>
-						<line number="40" hits="1"/>
-						<line number="47" hits="1"/>
+						<line number="27" hits="1"/>
+						<line number="46" hits="1"/>
+						<line number="53" hits="1"/>
 						<line number="54" hits="1"/>
-						<line number="61" hits="1"/>
-						<line number="68" hits="1"/>
+						<line number="57" hits="1"/>
+						<line number="66" hits="1"/>
 						<line number="75" hits="1"/>
-						<line number="82" hits="1"/>
-						<line number="89" hits="1"/>
-						<line number="96" hits="1"/>
-						<line number="103" hits="1"/>
-						<line number="110" hits="1"/>
-						<line number="117" hits="1"/>
-						<line number="124" hits="1"/>
-						<line number="131" hits="1"/>
-						<line number="138" hits="1"/>
-						<line number="145" hits="1"/>
+						<line number="84" hits="1"/>
+						<line number="93" hits="1"/>
+						<line number="102" hits="1"/>
+						<line number="122" hits="1"/>
+						<line number="129" hits="1"/>
+						<line number="130" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="131"/>
+						<line number="131" hits="0"/>
+						<line number="134" hits="1"/>
+						<line number="143" hits="1"/>
 						<line number="152" hits="1"/>
-						<line number="159" hits="1"/>
-						<line number="166" hits="1"/>
-						<line number="173" hits="1"/>
-						<line number="180" hits="1"/>
-						<line number="187" hits="1"/>
-						<line number="194" hits="1"/>
-						<line number="201" hits="1"/>
-						<line number="206" hits="1"/>
+						<line number="161" hits="1"/>
+						<line number="170" hits="1"/>
+						<line number="179" hits="1"/>
+						<line number="188" hits="1"/>
+						<line number="199" hits="1"/>
+						<line number="212" hits="0"/>
 						<line number="213" hits="0"/>
-						<line number="215" hits="1"/>
-						<line number="222" hits="1"/>
-						<line number="229" hits="1"/>
-						<line number="237" hits="1"/>
+						<line number="216" hits="1"/>
+						<line number="225" hits="1"/>
+						<line number="234" hits="1"/>
+						<line number="243" hits="1"/>
+						<line number="252" hits="1"/>
 						<line number="261" hits="1"/>
-						<line number="270" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="271,273"/>
-						<line number="271" hits="0"/>
-						<line number="273" hits="0"/>
-						<line number="276" hits="0"/>
-						<line number="277" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="278,280"/>
-						<line number="278" hits="0"/>
-						<line number="280" hits="0"/>
+						<line number="270" hits="1"/>
+						<line number="279" hits="1"/>
+						<line number="288" hits="1"/>
+						<line number="297" hits="1"/>
+						<line number="306" hits="1"/>
+						<line number="315" hits="1"/>
+						<line number="324" hits="1"/>
+						<line number="330" hits="1"/>
+						<line number="337" hits="0"/>
+						<line number="340" hits="1"/>
+						<line number="349" hits="1"/>
+						<line number="358" hits="1"/>
+						<line number="367" hits="1"/>
+						<line number="376" hits="1"/>
+						<line number="385" hits="1"/>
+						<line number="391" hits="1"/>
+						<line number="397" hits="1"/>
+						<line number="403" hits="1"/>
+						<line number="409" hits="1"/>
+						<line number="416" hits="1"/>
+						<line number="441" hits="1"/>
+						<line number="466" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="467,469"/>
+						<line number="467" hits="0"/>
+						<line number="469" hits="0"/>
+						<line number="472" hits="0"/>
+						<line number="473" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="474,476"/>
+						<line number="474" hits="0"/>
+						<line number="476" hits="0"/>
 					</lines>
 				</class>
-				<class name="input.py" filename="core/input.py" complexity="0" line-rate="0.7407" branch-rate="0.6071">
+				<class name="input.py" filename="video_understanding/core/input.py" complexity="0" line-rate="0.275" branch-rate="0">
 					<methods/>
 					<lines>
 						<line number="28" hits="1"/>
 						<line number="29" hits="1"/>
 						<line number="30" hits="1"/>
-						<line number="31" hits="1"/>
+						<line number="32" hits="1"/>
 						<line number="33" hits="1"/>
-						<line number="34" hits="1"/>
+						<line number="35" hits="1"/>
 						<line number="36" hits="1"/>
-						<line number="37" hits="1"/>
+						<line number="39" hits="1"/>
 						<line number="40" hits="1"/>
-						<line number="41" hits="1"/>
+						<line number="62" hits="1"/>
 						<line number="63" hits="1"/>
 						<line number="64" hits="1"/>
 						<line number="65" hits="1"/>
@@ -965,104 +1432,103 @@
 						<line number="67" hits="1"/>
 						<line number="68" hits="1"/>
 						<line number="69" hits="1"/>
-						<line number="70" hits="1"/>
-						<line number="73" hits="1"/>
-						<line number="101" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="102" hits="1"/>
-						<line number="104" hits="1"/>
-						<line number="106" hits="1"/>
-						<line number="107" hits="1"/>
-						<line number="108" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="109" hits="1"/>
-						<line number="112" hits="1"/>
-						<line number="113" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="114" hits="1"/>
-						<line number="117" hits="1"/>
-						<line number="120" hits="1"/>
-						<line number="121" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="124"/>
-						<line number="122" hits="1"/>
-						<line number="124" hits="0"/>
+						<line number="72" hits="1"/>
+						<line number="100" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="101,103"/>
+						<line number="101" hits="0"/>
+						<line number="103" hits="0"/>
+						<line number="105" hits="0"/>
+						<line number="106" hits="0"/>
+						<line number="107" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="108,111"/>
+						<line number="108" hits="0"/>
+						<line number="111" hits="0"/>
+						<line number="112" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="113,116"/>
+						<line number="113" hits="0"/>
+						<line number="116" hits="0"/>
+						<line number="119" hits="0"/>
+						<line number="120" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="121,123"/>
+						<line number="121" hits="0"/>
+						<line number="123" hits="0"/>
+						<line number="125" hits="0"/>
 						<line number="126" hits="0"/>
 						<line number="127" hits="0"/>
 						<line number="128" hits="0"/>
 						<line number="129" hits="0"/>
-						<line number="130" hits="0"/>
-						<line number="132" hits="0"/>
-						<line number="144" hits="0"/>
-						<line number="146" hits="1"/>
-						<line number="147" hits="1"/>
-						<line number="150" hits="1"/>
-						<line number="180" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="181,187"/>
-						<line number="181" hits="0"/>
-						<line number="187" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="190,196"/>
-						<line number="190" hits="0"/>
-						<line number="196" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="197,200"/>
-						<line number="197" hits="0"/>
-						<line number="200" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="201,204"/>
-						<line number="201" hits="0"/>
-						<line number="204" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,205"/>
-						<line number="205" hits="0"/>
-						<line number="208" hits="1"/>
-						<line number="244" hits="0"/>
-						<line number="247" hits="0"/>
-						<line number="249" hits="0"/>
-						<line number="252" hits="1"/>
-						<line number="289" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="290" hits="1"/>
-						<line number="292" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="293" hits="1"/>
-						<line number="295" hits="1"/>
-						<line number="296" hits="1"/>
-						<line number="298" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="299" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="300" hits="1"/>
-						<line number="301" hits="1"/>
-						<line number="302" hits="1"/>
-						<line number="303" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="304" hits="1"/>
-						<line number="305" hits="1"/>
-						<line number="306" hits="1"/>
-						<line number="308" hits="1"/>
-						<line number="311" hits="1"/>
-						<line number="342" hits="1"/>
-						<line number="343" hits="1"/>
-						<line number="344" hits="1"/>
-						<line number="345" hits="1"/>
-						<line number="346" hits="1"/>
-					</lines>
-				</class>
-				<class name="logging_config.py" filename="core/logging_config.py" complexity="0" line-rate="1" branch-rate="1">
-					<methods/>
-					<lines>
-						<line number="3" hits="1"/>
-						<line number="4" hits="1"/>
-						<line number="5" hits="1"/>
-						<line number="6" hits="1"/>
-						<line number="7" hits="1"/>
-						<line number="8" hits="1"/>
-						<line number="12" hits="1"/>
+						<line number="131" hits="0"/>
+						<line number="143" hits="0"/>
+						<line number="145" hits="0"/>
+						<line number="146" hits="0"/>
+						<line number="149" hits="1"/>
+						<line number="179" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="180,186"/>
+						<line number="180" hits="0"/>
+						<line number="186" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="189,195"/>
+						<line number="189" hits="0"/>
+						<line number="195" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="196,199"/>
+						<line number="196" hits="0"/>
+						<line number="199" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="200,203"/>
+						<line number="200" hits="0"/>
+						<line number="203" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,204"/>
+						<line number="204" hits="0"/>
+						<line number="207" hits="1"/>
+						<line number="243" hits="0"/>
+						<line number="246" hits="0"/>
+						<line number="248" hits="0"/>
+						<line number="251" hits="1"/>
+						<line number="288" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="289,291"/>
+						<line number="289" hits="0"/>
+						<line number="291" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="292,294"/>
+						<line number="292" hits="0"/>
+						<line number="294" hits="0"/>
+						<line number="295" hits="0"/>
+						<line number="297" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="298,307"/>
+						<line number="298" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="297,299"/>
+						<line number="299" hits="0"/>
+						<line number="300" hits="0"/>
+						<line number="301" hits="0"/>
+						<line number="302" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="297,303"/>
+						<line number="303" hits="0"/>
+						<line number="304" hits="0"/>
+						<line number="305" hits="0"/>
+						<line number="307" hits="0"/>
+						<line number="310" hits="1"/>
+						<line number="341" hits="0"/>
+						<line number="342" hits="0"/>
+						<line number="343" hits="0"/>
+						<line number="344" hits="0"/>
+						<line number="345" hits="0"/>
+					</lines>
+				</class>
+				<class name="logging_config.py" filename="video_understanding/core/logging_config.py" complexity="0" line-rate="0.4231" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="3" hits="1"/>
+						<line number="4" hits="1"/>
+						<line number="5" hits="1"/>
+						<line number="6" hits="1"/>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="12" hits="1"/>
 						<line number="15" hits="1"/>
 						<line number="18" hits="1"/>
 						<line number="21" hits="1"/>
-						<line number="31" hits="1"/>
-						<line number="39" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="40" hits="1"/>
-						<line number="43" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="44" hits="1"/>
-						<line number="47" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="48" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="54" hits="1"/>
-						<line number="56" hits="1"/>
+						<line number="31" hits="0"/>
+						<line number="39" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="40,43"/>
+						<line number="40" hits="0"/>
+						<line number="43" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="44,47"/>
+						<line number="44" hits="0"/>
+						<line number="47" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="48,56"/>
+						<line number="48" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="47,54"/>
+						<line number="54" hits="0"/>
+						<line number="56" hits="0"/>
 						<line number="59" hits="1"/>
-						<line number="69" hits="1"/>
-						<line number="70" hits="1"/>
-						<line number="72" hits="1"/>
-						<line number="104" hits="1"/>
-						<line number="105" hits="1"/>
-						<line number="106" hits="1"/>
+						<line number="69" hits="0"/>
+						<line number="70" hits="0"/>
+						<line number="72" hits="0"/>
+						<line number="104" hits="0"/>
+						<line number="105" hits="0"/>
+						<line number="106" hits="0"/>
 					</lines>
 				</class>
-				<class name="metrics.py" filename="core/metrics.py" complexity="0" line-rate="0.982" branch-rate="0.9231">
+				<class name="metrics.py" filename="video_understanding/core/metrics.py" complexity="0" line-rate="0.3471" branch-rate="0">
 					<methods/>
 					<lines>
 						<line number="7" hits="1"/>
@@ -1085,100 +1551,110 @@
 						<line number="65" hits="1"/>
 						<line number="66" hits="1"/>
 						<line number="68" hits="1"/>
-						<line number="70" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="71" hits="1"/>
-						<line number="72" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="73" hits="1"/>
-						<line number="74" hits="1"/>
+						<line number="70" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="71,72"/>
+						<line number="71" hits="0"/>
+						<line number="72" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="73,74"/>
+						<line number="73" hits="0"/>
+						<line number="74" hits="0"/>
 						<line number="76" hits="1"/>
-						<line number="78" hits="1"/>
+						<line number="78" hits="0"/>
 						<line number="86" hits="1"/>
 						<line number="87" hits="1"/>
 						<line number="90" hits="1"/>
 						<line number="91" hits="1"/>
 						<line number="92" hits="1"/>
 						<line number="94" hits="1"/>
-						<line number="96" hits="1"/>
+						<line number="96" hits="0"/>
 						<line number="103" hits="1"/>
 						<line number="106" hits="1"/>
-						<line number="108" hits="1"/>
-						<line number="117" hits="1"/>
+						<line number="108" hits="0"/>
+						<line number="117" hits="0"/>
 						<line number="123" hits="1"/>
 						<line number="126" hits="1"/>
-						<line number="128" hits="1"/>
-						<line number="129" hits="1"/>
-						<line number="130" hits="1"/>
-						<line number="132" hits="1"/>
-						<line number="142" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="143" hits="1"/>
-						<line number="145" hits="1"/>
+						<line number="128" hits="0"/>
+						<line number="129" hits="0"/>
+						<line number="130" hits="0"/>
+						<line number="131" hits="0"/>
+						<line number="133" hits="1"/>
+						<line number="139" hits="0"/>
+						<line number="141" hits="1"/>
+						<line number="143" hits="0"/>
+						<line number="144" hits="0"/>
 						<line number="146" hits="1"/>
-						<line number="149" hits="1"/>
-						<line number="152" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="153" hits="1"/>
-						<line number="154" hits="1"/>
-						<line number="157" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="158" hits="1"/>
-						<line number="165" hits="1"/>
-						<line number="167" hits="1"/>
-						<line number="173" hits="1"/>
-						<line number="182" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="183" hits="1"/>
-						<line number="184" hits="1"/>
-						<line number="186" hits="1"/>
-						<line number="187" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="188"/>
-						<line number="188" hits="0"/>
-						<line number="189" hits="0"/>
-						<line number="191" hits="1"/>
-						<line number="199" hits="1"/>
-						<line number="204" hits="1"/>
-						<line number="206" hits="1"/>
-						<line number="215" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="216" hits="1"/>
-						<line number="217" hits="1"/>
-						<line number="219" hits="1"/>
-						<line number="220" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="221" hits="1"/>
-						<line number="222" hits="1"/>
-						<line number="224" hits="1"/>
-						<line number="225" hits="1"/>
-						<line number="227" hits="1"/>
-						<line number="234" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="235" hits="1"/>
-						<line number="239" hits="1"/>
-						<line number="245" hits="1"/>
-						<line number="247" hits="1"/>
-						<line number="253" hits="1"/>
-						<line number="254" hits="1"/>
-						<line number="255" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="256" hits="1"/>
-						<line number="257" hits="1"/>
-						<line number="258" hits="1"/>
-						<line number="260" hits="1"/>
-						<line number="271" hits="1"/>
-						<line number="272" hits="1"/>
-						<line number="275" hits="1"/>
-						<line number="278" hits="1"/>
-						<line number="285" hits="1"/>
-						<line number="286" hits="1"/>
-						<line number="287" hits="1"/>
-						<line number="288" hits="1"/>
-						<line number="290" hits="1"/>
-						<line number="292" hits="1"/>
-						<line number="293" hits="1"/>
+						<line number="148" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="149,150"/>
+						<line number="149" hits="0"/>
+						<line number="150" hits="0"/>
+						<line number="152" hits="1"/>
+						<line number="162" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="163,165"/>
+						<line number="163" hits="0"/>
+						<line number="165" hits="0"/>
+						<line number="166" hits="0"/>
+						<line number="169" hits="0"/>
+						<line number="172" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="173,187"/>
+						<line number="173" hits="0"/>
+						<line number="174" hits="0"/>
+						<line number="177" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="178,185"/>
+						<line number="178" hits="0"/>
+						<line number="185" hits="0"/>
+						<line number="187" hits="0"/>
+						<line number="193" hits="1"/>
+						<line number="202" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="203,206"/>
+						<line number="203" hits="0"/>
+						<line number="204" hits="0"/>
+						<line number="206" hits="0"/>
+						<line number="207" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="208,211"/>
+						<line number="208" hits="0"/>
+						<line number="209" hits="0"/>
+						<line number="211" hits="0"/>
+						<line number="219" hits="0"/>
+						<line number="224" hits="0"/>
+						<line number="226" hits="1"/>
+						<line number="235" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="236,239"/>
+						<line number="236" hits="0"/>
+						<line number="237" hits="0"/>
+						<line number="239" hits="0"/>
+						<line number="240" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="241,244"/>
+						<line number="241" hits="0"/>
+						<line number="242" hits="0"/>
+						<line number="244" hits="0"/>
+						<line number="245" hits="0"/>
+						<line number="247" hits="0"/>
+						<line number="254" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="255,259"/>
+						<line number="255" hits="0"/>
+						<line number="259" hits="0"/>
+						<line number="265" hits="0"/>
+						<line number="267" hits="1"/>
+						<line number="273" hits="0"/>
+						<line number="274" hits="0"/>
+						<line number="275" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="276,291"/>
+						<line number="276" hits="0"/>
+						<line number="277" hits="0"/>
+						<line number="278" hits="0"/>
+						<line number="280" hits="0"/>
+						<line number="291" hits="0"/>
+						<line number="292" hits="0"/>
+						<line number="295" hits="1"/>
 						<line number="298" hits="1"/>
-						<line number="300" hits="1"/>
-						<line number="302" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="exit"/>
-						<line number="303" hits="1"/>
-						<line number="304" hits="1"/>
-						<line number="306" hits="1"/>
-						<line number="312" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="313" hits="1"/>
-						<line number="317" hits="1"/>
-						<line number="321" hits="1"/>
+						<line number="305" hits="0"/>
+						<line number="306" hits="0"/>
+						<line number="307" hits="0"/>
+						<line number="308" hits="0"/>
+						<line number="310" hits="1"/>
+						<line number="312" hits="0"/>
+						<line number="313" hits="0"/>
+						<line number="318" hits="0"/>
+						<line number="320" hits="1"/>
+						<line number="327" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,328"/>
+						<line number="328" hits="0"/>
+						<line number="329" hits="0"/>
+						<line number="331" hits="0"/>
+						<line number="337" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="338,342"/>
+						<line number="338" hits="0"/>
+						<line number="342" hits="0"/>
+						<line number="346" hits="0"/>
 					</lines>
 				</class>
-				<class name="output.py" filename="core/output.py" complexity="0" line-rate="0.6368" branch-rate="0.5">
+				<class name="output.py" filename="video_understanding/core/output.py" complexity="0" line-rate="0.3498" branch-rate="0">
 					<methods/>
 					<lines>
 						<line number="6" hits="1"/>
@@ -1222,1068 +1698,3573 @@
 						<line number="158" hits="1"/>
 						<line number="159" hits="1"/>
 						<line number="162" hits="1"/>
-						<line number="171" hits="1"/>
-						<line number="172" hits="1"/>
-						<line number="173" hits="1"/>
-						<line number="174" hits="1"/>
+						<line number="171" hits="0"/>
+						<line number="172" hits="0"/>
+						<line number="173" hits="0"/>
+						<line number="174" hits="0"/>
 						<line number="177" hits="1"/>
-						<line number="186" hits="1"/>
+						<line number="186" hits="0"/>
 						<line number="197" hits="1"/>
-						<line number="206" hits="1"/>
+						<line number="206" hits="0"/>
 						<line number="218" hits="1"/>
-						<line number="227" hits="1"/>
-						<line number="229" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="230" hits="1"/>
-						<line number="233" hits="1"/>
-						<line number="234" hits="1"/>
-						<line number="235" hits="1"/>
-						<line number="236" hits="1"/>
+						<line number="227" hits="0"/>
+						<line number="229" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="230,233"/>
+						<line number="230" hits="0"/>
+						<line number="233" hits="0"/>
+						<line number="234" hits="0"/>
+						<line number="235" hits="0"/>
+						<line number="236" hits="0"/>
 						<line number="237" hits="0"/>
-						<line number="242" hits="1"/>
-						<line number="243" hits="1"/>
-						<line number="250" hits="1"/>
-						<line number="259" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="260" hits="1"/>
-						<line number="265" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="266"/>
-						<line number="266" hits="0"/>
-						<line number="271" hits="1"/>
-						<line number="273" hits="1"/>
-						<line number="274" hits="0"/>
-						<line number="275" hits="0"/>
-						<line number="280" hits="0"/>
-						<line number="281" hits="0"/>
-						<line number="288" hits="1"/>
-						<line number="300" hits="1"/>
-						<line number="302" hits="1"/>
-						<line number="305" hits="1"/>
-						<line number="306" hits="1"/>
+						<line number="240" hits="0"/>
+						<line number="241" hits="0"/>
+						<line number="246" hits="1"/>
+						<line number="255" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="256,260"/>
+						<line number="256" hits="0"/>
+						<line number="260" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="261,265"/>
+						<line number="261" hits="0"/>
+						<line number="265" hits="0"/>
+						<line number="267" hits="0"/>
+						<line number="268" hits="0"/>
+						<line number="269" hits="0"/>
+						<line number="272" hits="0"/>
+						<line number="273" hits="0"/>
+						<line number="278" hits="1"/>
+						<line number="290" hits="0"/>
+						<line number="292" hits="0"/>
+						<line number="295" hits="0"/>
+						<line number="296" hits="0"/>
+						<line number="297" hits="0"/>
+						<line number="298" hits="0"/>
+						<line number="301" hits="0"/>
+						<line number="302" hits="0"/>
+						<line number="303" hits="0"/>
+						<line number="304" hits="0"/>
+						<line number="305" hits="0"/>
 						<line number="307" hits="0"/>
 						<line number="308" hits="0"/>
-						<line number="311" hits="1"/>
-						<line number="312" hits="1"/>
+						<line number="309" hits="0"/>
+						<line number="310" hits="0"/>
 						<line number="313" hits="1"/>
-						<line number="314" hits="0"/>
-						<line number="315" hits="0"/>
-						<line number="317" hits="1"/>
-						<line number="318" hits="0"/>
-						<line number="319" hits="1"/>
-						<line number="320" hits="1"/>
-						<line number="323" hits="1"/>
-						<line number="337" hits="1"/>
-						<line number="339" hits="1"/>
-						<line number="342" hits="1"/>
-						<line number="343" hits="1"/>
-						<line number="344" hits="1"/>
-						<line number="345" hits="1"/>
-						<line number="346" hits="1"/>
-						<line number="347" hits="0"/>
-						<line number="348" hits="0"/>
-						<line number="351" hits="1"/>
-						<line number="353" hits="1"/>
-						<line number="368" hits="1"/>
-						<line number="378" hits="0"/>
-						<line number="379" hits="0"/>
-						<line number="380" hits="0"/>
-						<line number="381" hits="0"/>
-						<line number="382" hits="0"/>
-						<line number="383" hits="0"/>
-						<line number="385" hits="1"/>
-						<line number="386" hits="1"/>
-						<line number="387" hits="1"/>
-						<line number="388" hits="1"/>
-						<line number="391" hits="1"/>
-						<line number="403" hits="1"/>
-						<line number="405" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="406" hits="1"/>
-						<line number="409" hits="1"/>
-						<line number="410" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="411" hits="1"/>
-						<line number="413" hits="1"/>
-						<line number="416" hits="1"/>
-						<line number="417" hits="1"/>
-						<line number="418" hits="1"/>
-						<line number="421" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="422" hits="1"/>
-						<line number="423" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="424" hits="1"/>
-						<line number="425" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="426" hits="1"/>
+						<line number="327" hits="0"/>
+						<line number="329" hits="0"/>
+						<line number="332" hits="0"/>
+						<line number="333" hits="0"/>
+						<line number="334" hits="0"/>
+						<line number="335" hits="0"/>
+						<line number="336" hits="0"/>
+						<line number="337" hits="0"/>
+						<line number="338" hits="0"/>
+						<line number="341" hits="0"/>
+						<line number="343" hits="0"/>
+						<line number="358" hits="0"/>
+						<line number="368" hits="0"/>
+						<line number="369" hits="0"/>
+						<line number="372" hits="0"/>
+						<line number="373" hits="0"/>
+						<line number="374" hits="0"/>
+						<line number="375" hits="0"/>
+						<line number="377" hits="0"/>
+						<line number="378" hits="0"/>
+						<line number="379" hits="0"/>
+						<line number="380" hits="0"/>
+						<line number="383" hits="1"/>
+						<line number="395" hits="0"/>
+						<line number="397" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="398,401"/>
+						<line number="398" hits="0"/>
+						<line number="401" hits="0"/>
+						<line number="402" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="403,405"/>
+						<line number="403" hits="0"/>
+						<line number="405" hits="0"/>
+						<line number="408" hits="0"/>
+						<line number="409" hits="0"/>
+						<line number="410" hits="0"/>
+						<line number="413" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="414,415"/>
+						<line number="414" hits="0"/>
+						<line number="415" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="416,417"/>
+						<line number="416" hits="0"/>
+						<line number="417" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="418,421"/>
+						<line number="418" hits="0"/>
+						<line number="421" hits="0"/>
+						<line number="422" hits="0"/>
+						<line number="424" hits="0"/>
+						<line number="425" hits="0"/>
+						<line number="428" hits="1"/>
 						<line number="429" hits="1"/>
-						<line number="430" hits="1"/>
 						<line number="432" hits="1"/>
 						<line number="433" hits="1"/>
+						<line number="434" hits="1"/>
+						<line number="435" hits="1"/>
 						<line number="436" hits="1"/>
 						<line number="437" hits="1"/>
-						<line number="439" hits="1"/>
 						<line number="440" hits="1"/>
 						<line number="441" hits="1"/>
-						<line number="442" hits="1"/>
-						<line number="443" hits="1"/>
 						<line number="444" hits="1"/>
+						<line number="445" hits="1"/>
+						<line number="446" hits="1"/>
 						<line number="447" hits="1"/>
 						<line number="448" hits="1"/>
-						<line number="450" hits="1"/>
 						<line number="451" hits="1"/>
 						<line number="452" hits="1"/>
-						<line number="453" hits="1"/>
-						<line number="454" hits="1"/>
+						<line number="455" hits="1"/>
+						<line number="456" hits="1"/>
 						<line number="457" hits="1"/>
 						<line number="458" hits="1"/>
-						<line number="460" hits="1"/>
-						<line number="461" hits="1"/>
+						<line number="459" hits="1"/>
 						<line number="462" hits="1"/>
-						<line number="463" hits="1"/>
-						<line number="464" hits="1"/>
-						<line number="467" hits="1"/>
-						<line number="470" hits="1"/>
+						<line number="465" hits="1"/>
+						<line number="466" hits="0"/>
+						<line number="467" hits="0"/>
+						<line number="468" hits="0"/>
+						<line number="469" hits="0"/>
+						<line number="470" hits="0"/>
 						<line number="471" hits="0"/>
 						<line number="472" hits="0"/>
-						<line number="473" hits="0"/>
-						<line number="474" hits="0"/>
-						<line number="475" hits="0"/>
+						<line number="474" hits="1"/>
 						<line number="476" hits="0"/>
-						<line number="477" hits="0"/>
-						<line number="479" hits="1"/>
-						<line number="481" hits="0"/>
-						<line number="483" hits="1"/>
-						<line number="485" hits="0"/>
-						<line number="487" hits="1"/>
-						<line number="489" hits="0"/>
-						<line number="491" hits="1"/>
-						<line number="493" hits="0"/>
-						<line number="495" hits="1"/>
-						<line number="497" hits="0"/>
-						<line number="499" hits="1"/>
-						<line number="501" hits="0"/>
+						<line number="478" hits="1"/>
+						<line number="480" hits="0"/>
+						<line number="482" hits="1"/>
+						<line number="484" hits="0"/>
+						<line number="486" hits="1"/>
+						<line number="488" hits="0"/>
+						<line number="490" hits="1"/>
+						<line number="492" hits="0"/>
+						<line number="494" hits="1"/>
+						<line number="496" hits="0"/>
+						<line number="506" hits="1"/>
+						<line number="508" hits="0"/>
+						<line number="509" hits="0"/>
 						<line number="511" hits="1"/>
-						<line number="513" hits="0"/>
-						<line number="514" hits="0"/>
-						<line number="516" hits="1"/>
+						<line number="523" hits="0"/>
+						<line number="524" hits="0"/>
+						<line number="525" hits="0"/>
+						<line number="526" hits="0"/>
+						<line number="527" hits="0"/>
 						<line number="528" hits="0"/>
 						<line number="529" hits="0"/>
-						<line number="530" hits="0"/>
-						<line number="531" hits="0"/>
-						<line number="532" hits="0"/>
-						<line number="533" hits="0"/>
-						<line number="534" hits="0"/>
-						<line number="537" hits="1"/>
-						<line number="558" hits="0"/>
-						<line number="561" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="562,573"/>
-						<line number="562" hits="0"/>
-						<line number="570" hits="0"/>
-						<line number="573" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="574,584"/>
-						<line number="574" hits="0"/>
-						<line number="581" hits="0"/>
-						<line number="584" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="585,595"/>
-						<line number="585" hits="0"/>
-						<line number="592" hits="0"/>
-						<line number="595" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="596,597"/>
-						<line number="596" hits="0"/>
-						<line number="597" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="598,600"/>
-						<line number="598" hits="0"/>
-						<line number="600" hits="0"/>
-						<line number="603" hits="1"/>
+						<line number="532" hits="1"/>
+						<line number="553" hits="0"/>
+						<line number="556" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="557,568"/>
+						<line number="557" hits="0"/>
+						<line number="565" hits="0"/>
+						<line number="568" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="569,579"/>
+						<line number="569" hits="0"/>
+						<line number="576" hits="0"/>
+						<line number="579" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="580,590"/>
+						<line number="580" hits="0"/>
+						<line number="587" hits="0"/>
+						<line number="590" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="591,592"/>
+						<line number="591" hits="0"/>
+						<line number="592" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="593,595"/>
+						<line number="593" hits="0"/>
+						<line number="595" hits="0"/>
+						<line number="598" hits="1"/>
+						<line number="614" hits="0"/>
+						<line number="615" hits="0"/>
+						<line number="616" hits="0"/>
+						<line number="619" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="620,621"/>
 						<line number="620" hits="0"/>
 						<line number="621" hits="0"/>
-						<line number="622" hits="0"/>
-						<line number="625" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="626,627"/>
-						<line number="626" hits="0"/>
-						<line number="627" hits="0"/>
-						<line number="630" hits="0"/>
+						<line number="624" hits="0"/>
+						<line number="625" hits="0"/>
+						<line number="628" hits="0"/>
+						<line number="629" hits="0"/>
 						<line number="631" hits="0"/>
-						<line number="634" hits="0"/>
-						<line number="635" hits="0"/>
-						<line number="637" hits="0"/>
-						<line number="638" hits="0"/>
-						<line number="639" hits="0"/>
-						<line number="642" hits="1"/>
+						<line number="632" hits="0"/>
+						<line number="633" hits="0"/>
+						<line number="636" hits="1"/>
+						<line number="649" hits="0"/>
+						<line number="650" hits="0"/>
+						<line number="651" hits="0"/>
+						<line number="654" hits="0"/>
+						<line number="655" hits="0"/>
 						<line number="656" hits="0"/>
 						<line number="657" hits="0"/>
-						<line number="658" hits="0"/>
-						<line number="661" hits="0"/>
-						<line number="662" hits="0"/>
-						<line number="663" hits="0"/>
-						<line number="664" hits="0"/>
 					</lines>
 				</class>
-				<class name="processing.py" filename="core/processing.py" complexity="0" line-rate="0" branch-rate="0">
+				<class name="processing.py" filename="video_understanding/core/processing.py" complexity="0" line-rate="0" branch-rate="0">
 					<methods/>
 					<lines>
-						<line number="8" hits="0"/>
+						<line number="6" hits="0"/>
 						<line number="9" hits="0"/>
-						<line number="12" hits="0"/>
+						<line number="10" hits="0"/>
 						<line number="13" hits="0"/>
-						<line number="16" hits="0"/>
-						<line number="17" hits="0"/>
-						<line number="20" hits="0"/>
-						<line number="22" hits="0"/>
-						<line number="23" hits="0"/>
-						<line number="24" hits="0"/>
-						<line number="25" hits="0"/>
-						<line number="28" hits="0"/>
-						<line number="30" hits="0"/>
-						<line number="31" hits="0"/>
-						<line number="32" hits="0"/>
+						<line number="14" hits="0"/>
+						<line number="15" hits="0"/>
 						<line number="33" hits="0"/>
 						<line number="34" hits="0"/>
-						<line number="37" hits="0"/>
-						<line number="39" hits="0"/>
-						<line number="40" hits="0"/>
+						<line number="35" hits="0"/>
+						<line number="38" hits="0"/>
 						<line number="41" hits="0"/>
+						<line number="42" hits="0"/>
+						<line number="43" hits="0"/>
 						<line number="44" hits="0"/>
-						<line number="46" hits="0"/>
 						<line number="47" hits="0"/>
-						<line number="48" hits="0"/>
+						<line number="50" hits="0"/>
 						<line number="51" hits="0"/>
+						<line number="52" hits="0"/>
+						<line number="53" hits="0"/>
 						<line number="54" hits="0"/>
-						<line number="56" hits="0"/>
 						<line number="57" hits="0"/>
-						<line number="59" hits="0"/>
-						<line number="69" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="70,72"/>
+						<line number="60" hits="0"/>
+						<line number="61" hits="0"/>
+						<line number="62" hits="0"/>
+						<line number="65" hits="0"/>
+						<line number="68" hits="0"/>
+						<line number="69" hits="0"/>
 						<line number="70" hits="0"/>
-						<line number="72" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="73,75"/>
 						<line number="73" hits="0"/>
-						<line number="75" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,76"/>
 						<line number="76" hits="0"/>
 						<line number="78" hits="0"/>
-						<line number="92" hits="0"/>
-						<line number="93" hits="0"/>
+						<line number="79" hits="0"/>
+						<line number="81" hits="0"/>
+						<line number="90" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="91,93"/>
+						<line number="91" hits="0"/>
+						<line number="93" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="94,96"/>
 						<line number="94" hits="0"/>
-						<line number="97" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="98,101"/>
-						<line number="98" hits="0"/>
-						<line number="101" hits="0"/>
-						<line number="103" hits="0"/>
-						<line number="109" hits="0"/>
-						<line number="110" hits="0"/>
-						<line number="111" hits="0"/>
+						<line number="96" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,97"/>
+						<line number="97" hits="0"/>
+						<line number="99" hits="0"/>
 						<line number="112" hits="0"/>
+						<line number="113" hits="0"/>
 						<line number="114" hits="0"/>
-						<line number="115" hits="0"/>
-						<line number="116" hits="0"/>
-						<line number="117" hits="0"/>
-						<line number="119" hits="0"/>
-						<line number="129" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="130,132"/>
+						<line number="117" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="118,121"/>
+						<line number="118" hits="0"/>
+						<line number="121" hits="0"/>
+						<line number="123" hits="0"/>
+						<line number="129" hits="0"/>
 						<line number="130" hits="0"/>
-						<line number="132" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,133"/>
-						<line number="133" hits="0"/>
-						<line number="135" hits="0"/>
-						<line number="149" hits="0"/>
-						<line number="150" hits="0"/>
-						<line number="151" hits="0"/>
-						<line number="154" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="155,158"/>
-						<line number="155" hits="0"/>
+						<line number="131" hits="0"/>
+						<line number="132" hits="0"/>
+						<line number="136" hits="0"/>
+						<line number="137" hits="0"/>
+						<line number="138" hits="0"/>
+						<line number="139" hits="0"/>
+						<line number="143" hits="0"/>
+						<line number="152" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="153,155"/>
+						<line number="153" hits="0"/>
+						<line number="155" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,156"/>
+						<line number="156" hits="0"/>
 						<line number="158" hits="0"/>
-						<line number="160" hits="0"/>
-						<line number="167" hits="0"/>
-						<line number="168" hits="0"/>
-						<line number="169" hits="0"/>
-						<line number="170" hits="0"/>
+						<line number="171" hits="0"/>
 						<line number="172" hits="0"/>
 						<line number="173" hits="0"/>
-						<line number="174" hits="0"/>
-						<line number="175" hits="0"/>
-						<line number="178" hits="0"/>
+						<line number="176" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="177,180"/>
+						<line number="177" hits="0"/>
+						<line number="180" hits="0"/>
+						<line number="182" hits="0"/>
+						<line number="189" hits="0"/>
+						<line number="190" hits="0"/>
+						<line number="191" hits="0"/>
+						<line number="192" hits="0"/>
 						<line number="196" hits="0"/>
 						<line number="197" hits="0"/>
 						<line number="198" hits="0"/>
-						<line number="203" hits="0"/>
+						<line number="199" hits="0"/>
 						<line number="204" hits="0"/>
-						<line number="205" hits="0"/>
-						<line number="208" hits="0"/>
+						<line number="214" hits="0"/>
+						<line number="215" hits="0"/>
+						<line number="216" hits="0"/>
+						<line number="222" hits="0"/>
 						<line number="223" hits="0"/>
 						<line number="224" hits="0"/>
-						<line number="225" hits="0"/>
-						<line number="226" hits="0"/>
 						<line number="227" hits="0"/>
-						<line number="229" hits="0"/>
-						<line number="230" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="231,242"/>
-						<line number="231" hits="0"/>
-						<line number="232" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="233,235"/>
-						<line number="233" hits="0"/>
-						<line number="235" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="236,240"/>
-						<line number="236" hits="0"/>
-						<line number="237" hits="0"/>
-						<line number="238" hits="0"/>
-						<line number="240" hits="0"/>
+						<line number="241" hits="0"/>
 						<line number="242" hits="0"/>
 						<line number="243" hits="0"/>
 						<line number="244" hits="0"/>
 						<line number="245" hits="0"/>
-						<line number="248" hits="0"/>
-						<line number="264" hits="0"/>
+						<line number="247" hits="0"/>
+						<line number="248" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="249,260"/>
+						<line number="249" hits="0"/>
+						<line number="250" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="251,253"/>
+						<line number="251" hits="0"/>
+						<line number="253" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="254,258"/>
+						<line number="254" hits="0"/>
+						<line number="255" hits="0"/>
+						<line number="256" hits="0"/>
+						<line number="258" hits="0"/>
+						<line number="260" hits="0"/>
+						<line number="261" hits="0"/>
+						<line number="262" hits="0"/>
+						<line number="263" hits="0"/>
 						<line number="266" hits="0"/>
-						<line number="267" hits="0"/>
-						<line number="268" hits="0"/>
-						<line number="271" hits="0"/>
-						<line number="287" hits="0"/>
-						<line number="289" hits="0"/>
-						<line number="294" hits="0"/>
-						<line number="295" hits="0"/>
+						<line number="281" hits="0"/>
+						<line number="283" hits="0"/>
+						<line number="284" hits="0"/>
+						<line number="285" hits="0"/>
+						<line number="288" hits="0"/>
+						<line number="303" hits="0"/>
+						<line number="305" hits="0"/>
+						<line number="306" hits="0"/>
+						<line number="307" hits="0"/>
+						<line number="310" hits="0"/>
+						<line number="320" hits="0"/>
+						<line number="321" hits="0"/>
+						<line number="322" hits="0"/>
+						<line number="327" hits="0"/>
+						<line number="328" hits="0"/>
+						<line number="329" hits="0"/>
 					</lines>
 				</class>
-				<class name="scene.py" filename="core/scene.py" complexity="0" line-rate="0.3084" branch-rate="0.07692">
+				<class name="scene.py" filename="video_understanding/core/scene.py" complexity="0" line-rate="0.2636" branch-rate="0">
 					<methods/>
 					<lines>
 						<line number="23" hits="1"/>
-						<line number="24" hits="1"/>
 						<line number="25" hits="1"/>
 						<line number="26" hits="1"/>
+						<line number="27" hits="1"/>
 						<line number="28" hits="1"/>
 						<line number="29" hits="1"/>
-						<line number="30" hits="1"/>
+						<line number="31" hits="1"/>
 						<line number="32" hits="1"/>
 						<line number="33" hits="1"/>
+						<line number="35" hits="1"/>
 						<line number="36" hits="1"/>
-						<line number="37" hits="1"/>
-						<line number="48" hits="1"/>
-						<line number="49" hits="1"/>
-						<line number="50" hits="1"/>
-						<line number="51" hits="1"/>
-						<line number="52" hits="1"/>
+						<line number="38" hits="1"/>
+						<line number="41" hits="1"/>
+						<line number="42" hits="1"/>
+						<line number="53" hits="1"/>
+						<line number="54" hits="1"/>
 						<line number="55" hits="1"/>
-						<line number="74" hits="1"/>
-						<line number="87" hits="1"/>
-						<line number="88" hits="1"/>
-						<line number="89" hits="1"/>
-						<line number="91" hits="1"/>
-						<line number="97" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="98,99"/>
-						<line number="98" hits="0"/>
-						<line number="99" hits="0"/>
-						<line number="101" hits="1"/>
-						<line number="113" hits="0"/>
-						<line number="114" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="115,117"/>
-						<line number="115" hits="0"/>
-						<line number="117" hits="0"/>
+						<line number="56" hits="1"/>
+						<line number="57" hits="1"/>
+						<line number="60" hits="1"/>
+						<line number="79" hits="1"/>
+						<line number="92" hits="0"/>
+						<line number="93" hits="0"/>
+						<line number="94" hits="0"/>
+						<line number="96" hits="1"/>
+						<line number="102" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="103,104"/>
+						<line number="103" hits="0"/>
+						<line number="104" hits="0"/>
+						<line number="106" hits="1"/>
 						<line number="118" hits="0"/>
-						<line number="119" hits="0"/>
+						<line number="119" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="120,122"/>
 						<line number="120" hits="0"/>
-						<line number="121" hits="0"/>
 						<line number="122" hits="0"/>
+						<line number="123" hits="0"/>
 						<line number="124" hits="0"/>
-						<line number="133" hits="0"/>
-						<line number="135" hits="1"/>
-						<line number="148" hits="0"/>
-						<line number="149" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="150,152"/>
-						<line number="150" hits="0"/>
-						<line number="152" hits="0"/>
+						<line number="125" hits="0"/>
+						<line number="126" hits="0"/>
+						<line number="127" hits="0"/>
+						<line number="129" hits="0"/>
+						<line number="138" hits="0"/>
+						<line number="140" hits="1"/>
 						<line number="153" hits="0"/>
-						<line number="154" hits="0"/>
+						<line number="154" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="155,157"/>
 						<line number="155" hits="0"/>
 						<line number="157" hits="0"/>
-						<line number="158" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="159,161"/>
+						<line number="158" hits="0"/>
 						<line number="159" hits="0"/>
-						<line number="161" hits="0"/>
-						<line number="163" hits="0"/>
-						<line number="165" hits="1"/>
-						<line number="174" hits="0"/>
-						<line number="175" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="176,178"/>
-						<line number="176" hits="0"/>
-						<line number="178" hits="0"/>
+						<line number="160" hits="0"/>
+						<line number="162" hits="0"/>
+						<line number="163" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="164,166"/>
+						<line number="164" hits="0"/>
+						<line number="166" hits="0"/>
+						<line number="168" hits="0"/>
+						<line number="170" hits="1"/>
 						<line number="179" hits="0"/>
-						<line number="180" hits="0"/>
-						<line number="182" hits="0"/>
-						<line number="184" hits="1"/>
-						<line number="210" hits="1"/>
-						<line number="211" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="212"/>
-						<line number="212" hits="0"/>
-						<line number="214" hits="1"/>
-						<line number="215" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="218"/>
-						<line number="216" hits="1"/>
+						<line number="180" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="181,183"/>
+						<line number="181" hits="0"/>
+						<line number="183" hits="0"/>
+						<line number="184" hits="0"/>
+						<line number="185" hits="0"/>
+						<line number="187" hits="0"/>
+						<line number="189" hits="1"/>
+						<line number="209" hits="0"/>
+						<line number="210" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="211,213"/>
+						<line number="211" hits="0"/>
+						<line number="213" hits="0"/>
+						<line number="214" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="215,217"/>
+						<line number="215" hits="0"/>
+						<line number="217" hits="0"/>
 						<line number="218" hits="0"/>
 						<line number="219" hits="0"/>
 						<line number="220" hits="0"/>
 						<line number="221" hits="0"/>
-						<line number="223" hits="0"/>
-						<line number="224" hits="0"/>
+						<line number="222" hits="0"/>
+						<line number="224" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="225,255"/>
 						<line number="225" hits="0"/>
-						<line number="226" hits="0"/>
+						<line number="226" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="227,229"/>
 						<line number="227" hits="0"/>
-						<line number="229" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="230,261"/>
-						<line number="230" hits="0"/>
-						<line number="231" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="232,235"/>
-						<line number="232" hits="0"/>
-						<line number="235" hits="0"/>
+						<line number="229" hits="0"/>
+						<line number="231" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="233,252"/>
+						<line number="233" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="235,252"/>
+						<line number="235" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="236,252"/>
 						<line number="236" hits="0"/>
-						<line number="238" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="240,257"/>
-						<line number="240" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="241,257"/>
-						<line number="241" hits="0"/>
-						<line number="250" hits="0"/>
-						<line number="251" hits="0"/>
-						<line number="254" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="255,257"/>
-						<line number="255" hits="0"/>
-						<line number="257" hits="0"/>
-						<line number="258" hits="0"/>
-						<line number="261" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="266,277"/>
-						<line number="266" hits="0"/>
-						<line number="275" hits="0"/>
-						<line number="277" hits="0"/>
-						<line number="280" hits="0"/>
-						<line number="282" hits="1"/>
-						<line number="312" hits="0"/>
-						<line number="313" hits="0"/>
-						<line number="316" hits="0"/>
-						<line number="317" hits="0"/>
-						<line number="319" hits="0"/>
-						<line number="321" hits="1"/>
-						<line number="331" hits="0"/>
-						<line number="332" hits="0"/>
-						<line number="335" hits="0"/>
-						<line number="336" hits="0"/>
-						<line number="337" hits="0"/>
-						<line number="339" hits="0"/>
-					</lines>
-				</class>
-				<class name="upload.py" filename="core/upload.py" complexity="0" line-rate="0.4674" branch-rate="0.25">
-					<methods/>
-					<lines>
-						<line number="25" hits="1"/>
-						<line number="26" hits="1"/>
-						<line number="27" hits="1"/>
-						<line number="28" hits="1"/>
-						<line number="30" hits="1"/>
-						<line number="31" hits="1"/>
-						<line number="33" hits="1"/>
-						<line number="34" hits="1"/>
-						<line number="37" hits="1"/>
-						<line number="110" hits="1"/>
-						<line number="115" hits="1"/>
-						<line number="117" hits="1"/>
-						<line number="136" hits="1"/>
-						<line number="137" hits="1"/>
-						<line number="138" hits="1"/>
-						<line number="139" hits="1"/>
-						<line number="141" hits="1"/>
-						<line number="150" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="153"/>
-						<line number="151" hits="1"/>
-						<line number="153" hits="0"/>
-						<line number="154" hits="0"/>
-						<line number="155" hits="0"/>
-						<line number="156" hits="0"/>
-						<line number="157" hits="0"/>
-						<line number="159" hits="1"/>
-						<line number="179" hits="1"/>
-						<line number="180" hits="1"/>
-						<line number="181" hits="1"/>
-						<line number="182" hits="0"/>
-						<line number="183" hits="0"/>
-						<line number="184" hits="1"/>
-						<line number="185" hits="1"/>
-						<line number="187" hits="1"/>
-						<line number="196" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="197"/>
-						<line number="197" hits="0"/>
-						<line number="199" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="200"/>
-						<line number="200" hits="0"/>
-						<line number="202" hits="1"/>
-						<line number="203" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="204"/>
-						<line number="204" hits="0"/>
-						<line number="206" hits="1"/>
-						<line number="215" hits="1"/>
-						<line number="216" hits="1"/>
-						<line number="217" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="221"/>
-						<line number="218" hits="1"/>
-						<line number="221" hits="0"/>
-						<line number="222" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="223,225"/>
-						<line number="223" hits="0"/>
-						<line number="225" hits="0"/>
-						<line number="226" hits="1"/>
-						<line number="227" hits="1"/>
-						<line number="229" hits="1"/>
-						<line number="240" hits="0"/>
-						<line number="241" hits="0"/>
-						<line number="242" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,243"/>
-						<line number="243" hits="0"/>
-						<line number="244" hits="0"/>
 						<line number="245" hits="0"/>
-						<line number="247" hits="1"/>
-						<line number="259" hits="0"/>
-						<line number="261" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="262,265"/>
-						<line number="262" hits="0"/>
+						<line number="246" hits="0"/>
+						<line number="249" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="250,252"/>
+						<line number="250" hits="0"/>
+						<line number="252" hits="0"/>
+						<line number="255" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="256,267"/>
+						<line number="256" hits="0"/>
 						<line number="265" hits="0"/>
-						<line number="266" hits="0"/>
+						<line number="267" hits="0"/>
+						<line number="269" hits="0"/>
 						<line number="270" hits="0"/>
-						<line number="277" hits="0"/>
-						<line number="278" hits="0"/>
-						<line number="279" hits="0"/>
-						<line number="281" hits="1"/>
-						<line number="290" hits="0"/>
-						<line number="291" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,292"/>
-						<line number="292" hits="0"/>
-						<line number="293" hits="0"/>
-						<line number="294" hits="0"/>
-						<line number="296" hits="1"/>
-						<line number="332" hits="1" branch="true" condition-coverage="0% (0/2)" missing-branches="333,335"/>
+						<line number="273" hits="0"/>
+						<line number="275" hits="1"/>
+						<line number="301" hits="0"/>
+						<line number="303" hits="1"/>
 						<line number="333" hits="0"/>
-						<line number="335" hits="0"/>
+						<line number="334" hits="0"/>
 						<line number="337" hits="0"/>
 						<line number="338" hits="0"/>
-						<line number="341" hits="0"/>
-						<line number="342" hits="0"/>
-						<line number="345" hits="0"/>
-						<line number="351" hits="0"/>
+						<line number="340" hits="0"/>
+						<line number="342" hits="1"/>
+						<line number="352" hits="0"/>
+						<line number="353" hits="0"/>
 						<line number="356" hits="0"/>
 						<line number="357" hits="0"/>
-						<line number="359" hits="1"/>
-						<line number="375" hits="0"/>
-						<line number="376" hits="0"/>
-						<line number="377" hits="0"/>
-						<line number="378" hits="0"/>
-						<line number="379" hits="0"/>
+						<line number="358" hits="0"/>
+						<line number="360" hits="0"/>
+					</lines>
+				</class>
+				<class name="utils.py" filename="video_understanding/core/utils.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+			</classes>
+		</package>
+		<package name="video_understanding.core.config" line-rate="0.1864" branch-rate="0" complexity="0">
+			<classes>
+				<class name="api.py" filename="video_understanding/core/config/api.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+				<class name="credentials.py" filename="video_understanding/core/config/credentials.py" complexity="0" line-rate="0.1864" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="15" hits="1"/>
+						<line number="18" hits="1"/>
+						<line number="24" hits="1"/>
+						<line number="34" hits="0"/>
+						<line number="41" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="42,45"/>
+						<line number="42" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="41,43"/>
+						<line number="43" hits="0"/>
+						<line number="45" hits="0"/>
+						<line number="50" hits="1"/>
+						<line number="60" hits="0"/>
+						<line number="61" hits="0"/>
+						<line number="64" hits="0"/>
+						<line number="67" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="68,79"/>
+						<line number="68" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="67,77"/>
+						<line number="77" hits="0"/>
+						<line number="79" hits="0"/>
+						<line number="82" hits="1"/>
+						<line number="92" hits="0"/>
+						<line number="105" hits="0"/>
+						<line number="107" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="108,114"/>
+						<line number="108" hits="0"/>
+						<line number="111" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="107,112"/>
+						<line number="112" hits="0"/>
+						<line number="114" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,115"/>
+						<line number="115" hits="0"/>
+						<line number="116" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="117,121"/>
+						<line number="117" hits="0"/>
+						<line number="121" hits="0"/>
+						<line number="122" hits="0"/>
+						<line number="123" hits="0"/>
+						<line number="124" hits="0"/>
+						<line number="127" hits="1"/>
+						<line number="139" hits="0"/>
+						<line number="142" hits="0"/>
+						<line number="157" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="158,160"/>
+						<line number="158" hits="0"/>
+						<line number="160" hits="0"/>
+						<line number="161" hits="0"/>
+						<line number="163" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="164,171"/>
+						<line number="164" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="165,169"/>
+						<line number="165" hits="0"/>
+						<line number="169" hits="0"/>
+						<line number="171" hits="0"/>
+						<line number="174" hits="1"/>
+						<line number="180" hits="0"/>
+						<line number="183" hits="0"/>
+						<line number="198" hits="0"/>
+						<line number="200" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="201,208"/>
+						<line number="201" hits="0"/>
+						<line number="202" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="203,205"/>
+						<line number="203" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="202,204"/>
+						<line number="204" hits="0"/>
+						<line number="205" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="200,206"/>
+						<line number="206" hits="0"/>
+						<line number="208" hits="0"/>
 					</lines>
 				</class>
+				<class name="factory.py" filename="video_understanding/core/config/factory.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
 			</classes>
 		</package>
-		<package name="core.processing" line-rate="0.09494" branch-rate="0" complexity="0">
+		<package name="video_understanding.core.processing" line-rate="0.09783" branch-rate="0" complexity="0">
 			<classes>
-				<class name="pipeline.py" filename="core/processing/pipeline.py" complexity="0" line-rate="0.1705" branch-rate="0">
+				<class name="pipeline.py" filename="video_understanding/core/processing/pipeline.py" complexity="0" line-rate="0.1856" branch-rate="0">
 					<methods/>
 					<lines>
 						<line number="12" hits="1"/>
 						<line number="13" hits="1"/>
 						<line number="14" hits="1"/>
-						<line number="16" hits="1"/>
+						<line number="15" hits="1"/>
 						<line number="17" hits="1"/>
+						<line number="18" hits="1"/>
 						<line number="19" hits="1"/>
-						<line number="34" hits="1"/>
-						<line number="35" hits="1"/>
-						<line number="37" hits="1"/>
-						<line number="39" hits="0"/>
-						<line number="40" hits="0"/>
-						<line number="41" hits="0"/>
-						<line number="43" hits="1"/>
-						<line number="65" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="66,68"/>
-						<line number="66" hits="0"/>
-						<line number="68" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="69,71"/>
-						<line number="69" hits="0"/>
-						<line number="71" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="72,74"/>
-						<line number="72" hits="0"/>
-						<line number="74" hits="0"/>
-						<line number="75" hits="0"/>
+						<line number="20" hits="1"/>
+						<line number="23" hits="1"/>
+						<line number="38" hits="1"/>
+						<line number="39" hits="1"/>
+						<line number="41" hits="1"/>
+						<line number="43" hits="0"/>
+						<line number="44" hits="0"/>
+						<line number="45" hits="0"/>
+						<line number="47" hits="1"/>
+						<line number="69" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="70,72"/>
+						<line number="70" hits="0"/>
+						<line number="72" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="73,75"/>
+						<line number="73" hits="0"/>
+						<line number="75" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="76,78"/>
 						<line number="76" hits="0"/>
-						<line number="78" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="79,92"/>
-						<line number="79" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="80,82"/>
+						<line number="78" hits="0"/>
+						<line number="79" hits="0"/>
 						<line number="80" hits="0"/>
-						<line number="82" hits="0"/>
-						<line number="87" hits="0"/>
-						<line number="89" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="78,90"/>
-						<line number="90" hits="0"/>
+						<line number="82" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="83,94"/>
+						<line number="83" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="84,86"/>
+						<line number="84" hits="0"/>
+						<line number="86" hits="0"/>
+						<line number="89" hits="0"/>
+						<line number="91" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="82,92"/>
 						<line number="92" hits="0"/>
 						<line number="94" hits="0"/>
-						<line number="95" hits="0"/>
-						<line number="97" hits="1"/>
-						<line number="116" hits="0"/>
+						<line number="96" hits="0"/>
+						<line number="97" hits="0"/>
+						<line number="98" hits="0"/>
+						<line number="99" hits="0"/>
+						<line number="101" hits="1"/>
 						<line number="117" hits="0"/>
 						<line number="118" hits="0"/>
 						<line number="119" hits="0"/>
 						<line number="120" hits="0"/>
-						<line number="122" hits="0"/>
+						<line number="121" hits="0"/>
 						<line number="123" hits="0"/>
+						<line number="124" hits="0"/>
+						<line number="128" hits="0"/>
 						<line number="130" hits="0"/>
 						<line number="132" hits="0"/>
-						<line number="134" hits="0"/>
-						<line number="135" hits="0"/>
+						<line number="133" hits="0"/>
+						<line number="136" hits="0"/>
+						<line number="137" hits="0"/>
 						<line number="138" hits="0"/>
 						<line number="139" hits="0"/>
 						<line number="141" hits="1"/>
-						<line number="153" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="154,162"/>
+						<line number="153" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="154,166"/>
 						<line number="154" hits="0"/>
 						<line number="155" hits="0"/>
 						<line number="156" hits="0"/>
 						<line number="157" hits="0"/>
 						<line number="158" hits="0"/>
+						<line number="161" hits="0"/>
 						<line number="162" hits="0"/>
-						<line number="164" hits="1"/>
-						<line number="173" hits="0"/>
-						<line number="182" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="183,187"/>
-						<line number="183" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="182,184"/>
-						<line number="184" hits="0"/>
-						<line number="187" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="188,191"/>
+						<line number="166" hits="0"/>
+						<line number="168" hits="1"/>
+						<line number="177" hits="0"/>
+						<line number="186" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="187,191"/>
+						<line number="187" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="186,188"/>
 						<line number="188" hits="0"/>
-						<line number="191" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="192,195"/>
+						<line number="191" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="192,197"/>
 						<line number="192" hits="0"/>
-						<line number="195" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="196,198"/>
-						<line number="196" hits="0"/>
+						<line number="197" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="198,201"/>
 						<line number="198" hits="0"/>
-						<line number="200" hits="1"/>
-						<line number="206" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="207,208"/>
-						<line number="207" hits="0"/>
-						<line number="208" hits="0"/>
-						<line number="209" hits="0"/>
-						<line number="211" hits="1"/>
-						<line number="245" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="246,248"/>
-						<line number="246" hits="0"/>
-						<line number="248" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="249,251"/>
-						<line number="249" hits="0"/>
-						<line number="251" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="252,254"/>
-						<line number="252" hits="0"/>
-						<line number="254" hits="0"/>
-						<line number="256" hits="0"/>
-						<line number="257" hits="0"/>
+						<line number="201" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="202,206"/>
+						<line number="202" hits="0"/>
+						<line number="206" hits="0"/>
+						<line number="208" hits="1"/>
+						<line number="214" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="215,216"/>
+						<line number="215" hits="0"/>
+						<line number="216" hits="0"/>
+						<line number="217" hits="0"/>
+						<line number="220" hits="1"/>
+						<line number="254" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="255,257"/>
+						<line number="255" hits="0"/>
+						<line number="257" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="258,260"/>
 						<line number="258" hits="0"/>
+						<line number="260" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="261,263"/>
 						<line number="261" hits="0"/>
-						<line number="282" hits="0"/>
-						<line number="283" hits="0"/>
-						<line number="285" hits="0"/>
+						<line number="263" hits="0"/>
+						<line number="265" hits="0"/>
+						<line number="266" hits="0"/>
+						<line number="267" hits="0"/>
+						<line number="270" hits="0"/>
 						<line number="297" hits="0"/>
 						<line number="298" hits="0"/>
+						<line number="300" hits="0"/>
+						<line number="312" hits="0"/>
+						<line number="313" hits="0"/>
 					</lines>
 				</class>
-				<class name="video.py" filename="core/processing/video.py" complexity="0" line-rate="0" branch-rate="0">
+				<class name="video.py" filename="video_understanding/core/processing/video.py" complexity="0" line-rate="0" branch-rate="0">
 					<methods/>
 					<lines>
 						<line number="10" hits="0"/>
 						<line number="11" hits="0"/>
-						<line number="12" hits="0"/>
 						<line number="13" hits="0"/>
 						<line number="14" hits="0"/>
+						<line number="15" hits="0"/>
 						<line number="16" hits="0"/>
 						<line number="17" hits="0"/>
 						<line number="19" hits="0"/>
-						<line number="31" hits="0"/>
-						<line number="37" hits="0"/>
-						<line number="38" hits="0"/>
-						<line number="39" hits="0"/>
-						<line number="41" hits="0"/>
-						<line number="53" hits="0"/>
-						<line number="55" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="56,58"/>
-						<line number="56" hits="0"/>
-						<line number="58" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="59,63"/>
-						<line number="59" hits="0"/>
-						<line number="63" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="64,66"/>
-						<line number="64" hits="0"/>
-						<line number="66" hits="0"/>
-						<line number="68" hits="0"/>
+						<line number="25" hits="0"/>
+						<line number="28" hits="0"/>
+						<line number="42" hits="0"/>
+						<line number="48" hits="0"/>
+						<line number="49" hits="0"/>
+						<line number="50" hits="0"/>
+						<line number="51" hits="0"/>
+						<line number="52" hits="0"/>
+						<line number="54" hits="0"/>
+						<line number="65" hits="0"/>
+						<line number="66" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="67,72"/>
+						<line number="67" hits="0"/>
+						<line number="72" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="73,79"/>
+						<line number="73" hits="0"/>
+						<line number="74" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="75,79"/>
+						<line number="75" hits="0"/>
+						<line number="79" hits="0"/>
 						<line number="81" hits="0"/>
-						<line number="82" hits="0"/>
-						<line number="84" hits="0"/>
-						<line number="87" hits="0"/>
-						<line number="90" hits="0"/>
 						<line number="93" hits="0"/>
-						<line number="95" hits="0"/>
-						<line number="101" hits="0"/>
-						<line number="102" hits="0"/>
-						<line number="107" hits="0"/>
-						<line number="120" hits="0"/>
-						<line number="121" hits="0"/>
-						<line number="122" hits="0"/>
+						<line number="95" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="96,98"/>
+						<line number="96" hits="0"/>
+						<line number="98" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="99,103"/>
+						<line number="99" hits="0"/>
+						<line number="103" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="104,106"/>
+						<line number="104" hits="0"/>
+						<line number="106" hits="0"/>
+						<line number="108" hits="0"/>
 						<line number="123" hits="0"/>
 						<line number="125" hits="0"/>
-						<line number="126" hits="0"/>
-						<line number="127" hits="0"/>
-						<line number="129" hits="0"/>
+						<line number="128" hits="0"/>
 						<line number="130" hits="0"/>
-						<line number="132" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="133,142"/>
-						<line number="133" hits="0"/>
-						<line number="134" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="135,137"/>
+						<line number="132" hits="0"/>
 						<line number="135" hits="0"/>
-						<line number="137" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="138,140"/>
 						<line number="138" hits="0"/>
-						<line number="140" hits="0"/>
-						<line number="142" hits="0"/>
+						<line number="141" hits="0"/>
 						<line number="143" hits="0"/>
-						<line number="145" hits="0"/>
-						<line number="146" hits="0"/>
-						<line number="151" hits="0"/>
-						<line number="163" hits="0"/>
-						<line number="164" hits="0"/>
-						<line number="165" hits="0"/>
-						<line number="167" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="169,181"/>
-						<line number="169" hits="0"/>
+						<line number="149" hits="0"/>
+						<line number="150" hits="0"/>
+						<line number="155" hits="0"/>
+						<line number="156" hits="0"/>
+						<line number="158" hits="0"/>
 						<line number="173" hits="0"/>
+						<line number="174" hits="0"/>
+						<line number="175" hits="0"/>
+						<line number="176" hits="0"/>
+						<line number="178" hits="0"/>
 						<line number="179" hits="0"/>
-						<line number="181" hits="0"/>
+						<line number="180" hits="0"/>
+						<line number="182" hits="0"/>
 						<line number="183" hits="0"/>
-						<line number="184" hits="0"/>
+						<line number="185" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="186,195"/>
 						<line number="186" hits="0"/>
+						<line number="187" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="188,190"/>
+						<line number="188" hits="0"/>
+						<line number="190" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="191,193"/>
+						<line number="191" hits="0"/>
+						<line number="193" hits="0"/>
+						<line number="195" hits="0"/>
+						<line number="196" hits="0"/>
 						<line number="198" hits="0"/>
 						<line number="199" hits="0"/>
-						<line number="202" hits="0"/>
-						<line number="209" hits="0"/>
-						<line number="211" hits="0"/>
-						<line number="212" hits="0"/>
+						<line number="203" hits="0"/>
+						<line number="215" hits="0"/>
+						<line number="216" hits="0"/>
+						<line number="217" hits="0"/>
+						<line number="219" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="221,233"/>
+						<line number="221" hits="0"/>
+						<line number="225" hits="0"/>
+						<line number="231" hits="0"/>
+						<line number="233" hits="0"/>
+						<line number="235" hits="0"/>
+						<line number="236" hits="0"/>
+						<line number="238" hits="0"/>
+						<line number="250" hits="0"/>
+						<line number="251" hits="0"/>
+						<line number="254" hits="0"/>
+						<line number="261" hits="0"/>
+						<line number="263" hits="0"/>
+						<line number="264" hits="0"/>
 					</lines>
 				</class>
 			</classes>
 		</package>
-		<package name="models" line-rate="0.9" branch-rate="0.7692" complexity="0">
+		<package name="video_understanding.core.types" line-rate="0" branch-rate="0" complexity="0">
 			<classes>
-				<class name="scene.py" filename="models/scene.py" complexity="0" line-rate="1" branch-rate="0.8889">
+				<class name="config.py" filename="video_understanding/core/types/config.py" complexity="0" line-rate="0" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="1" hits="0"/>
+						<line number="4" hits="0"/>
+						<line number="7" hits="0"/>
+						<line number="8" hits="0"/>
+						<line number="9" hits="0"/>
+						<line number="10" hits="0"/>
+						<line number="11" hits="0"/>
+						<line number="12" hits="0"/>
+						<line number="13" hits="0"/>
+						<line number="14" hits="0"/>
+						<line number="15" hits="0"/>
+						<line number="17" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,30"/>
+						<line number="30" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,31"/>
+						<line number="31" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,exit"/>
+					</lines>
+				</class>
+			</classes>
+		</package>
+		<package name="video_understanding.core.upload" line-rate="0.2783" branch-rate="0" complexity="0">
+			<classes>
+				<class name="config.py" filename="video_understanding/core/upload/config.py" complexity="0" line-rate="0.5431" branch-rate="0">
 					<methods/>
 					<lines>
-						<line number="3" hits="1"/>
-						<line number="4" hits="1"/>
-						<line number="5" hits="1"/>
-						<line number="6" hits="1"/>
 						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
 						<line number="10" hits="1"/>
-						<line number="11" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="13" hits="1"/>
+						<line number="16" hits="1"/>
+						<line number="17" hits="1"/>
 						<line number="44" hits="1"/>
 						<line number="45" hits="1"/>
 						<line number="46" hits="1"/>
 						<line number="47" hits="1"/>
-						<line number="48" hits="1"/>
-						<line number="49" hits="1"/>
 						<line number="50" hits="1"/>
 						<line number="51" hits="1"/>
-						<line number="53" hits="1"/>
-						<line number="65" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="66" hits="1"/>
-						<line number="67" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="68" hits="1"/>
-						<line number="71" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="72" hits="1"/>
-						<line number="73" hits="1" branch="true" condition-coverage="100% (2/2)"/>
+						<line number="54" hits="1"/>
+						<line number="57" hits="1"/>
+						<line number="58" hits="1"/>
+						<line number="61" hits="1"/>
 						<line number="74" hits="1"/>
+						<line number="75" hits="1"/>
 						<line number="76" hits="1"/>
 						<line number="77" hits="1"/>
+						<line number="78" hits="1"/>
+						<line number="79" hits="1"/>
+						<line number="82" hits="1"/>
 						<line number="83" hits="1"/>
-						<line number="85" hits="1"/>
-						<line number="86" hits="1"/>
+						<line number="84" hits="1"/>
+						<line number="87" hits="1"/>
+						<line number="88" hits="1"/>
+						<line number="89" hits="1"/>
+						<line number="90" hits="1"/>
 						<line number="92" hits="1"/>
-						<line number="94" hits="1"/>
-						<line number="96" hits="1"/>
+						<line number="94" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="95,96"/>
+						<line number="95" hits="0"/>
+						<line number="96" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="97,98"/>
+						<line number="97" hits="0"/>
+						<line number="98" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="99,100"/>
+						<line number="99" hits="0"/>
+						<line number="100" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="101,102"/>
+						<line number="101" hits="0"/>
+						<line number="102" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="103,104"/>
+						<line number="103" hits="0"/>
+						<line number="104" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="105,106"/>
+						<line number="105" hits="0"/>
+						<line number="106" hits="0"/>
 						<line number="108" hits="1"/>
-						<line number="109" hits="1"/>
-						<line number="112" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="116"/>
-						<line number="113" hits="1"/>
-						<line number="116" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="119"/>
-						<line number="117" hits="1"/>
-						<line number="119" hits="1"/>
-						<line number="121" hits="1"/>
-						<line number="123" hits="1"/>
-						<line number="125" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="126" hits="1"/>
-						<line number="129" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="130" hits="1"/>
-						<line number="133" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="134" hits="1"/>
-						<line number="136" hits="1"/>
-						<line number="137" hits="1"/>
+						<line number="114" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="115,116"/>
+						<line number="115" hits="0"/>
+						<line number="116" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="117,118"/>
+						<line number="117" hits="0"/>
+						<line number="118" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="119,120"/>
+						<line number="119" hits="0"/>
+						<line number="120" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="121,122"/>
+						<line number="121" hits="0"/>
+						<line number="122" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="123,124"/>
+						<line number="123" hits="0"/>
+						<line number="124" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="125,126"/>
+						<line number="125" hits="0"/>
+						<line number="126" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="127,128"/>
+						<line number="127" hits="0"/>
+						<line number="128" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="132,133"/>
+						<line number="132" hits="0"/>
+						<line number="133" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="134,135"/>
+						<line number="134" hits="0"/>
+						<line number="135" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,136"/>
+						<line number="136" hits="0"/>
 						<line number="138" hits="1"/>
+						<line number="149" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="150,151"/>
+						<line number="150" hits="0"/>
+						<line number="151" hits="0"/>
+						<line number="153" hits="1"/>
+						<line number="162" hits="0"/>
+						<line number="164" hits="1"/>
+						<line number="173" hits="0"/>
+						<line number="175" hits="1"/>
+						<line number="187" hits="0"/>
+						<line number="190" hits="1"/>
+						<line number="191" hits="1"/>
+						<line number="202" hits="1"/>
+						<line number="203" hits="1"/>
+						<line number="204" hits="1"/>
+						<line number="205" hits="1"/>
+						<line number="206" hits="1"/>
+						<line number="208" hits="1"/>
+						<line number="210" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="211,212"/>
+						<line number="211" hits="0"/>
+						<line number="212" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="213,214"/>
+						<line number="213" hits="0"/>
+						<line number="214" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="215,216"/>
+						<line number="215" hits="0"/>
+						<line number="216" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,217"/>
+						<line number="217" hits="0"/>
+						<line number="219" hits="1"/>
+						<line number="228" hits="0"/>
+						<line number="229" hits="0"/>
+						<line number="232" hits="1"/>
+						<line number="233" hits="1"/>
+						<line number="237" hits="1"/>
+						<line number="238" hits="1"/>
+						<line number="241" hits="1"/>
+						<line number="242" hits="1"/>
+						<line number="243" hits="1"/>
+						<line number="246" hits="1"/>
+						<line number="247" hits="1"/>
+						<line number="250" hits="1"/>
+						<line number="251" hits="1"/>
+						<line number="252" hits="1"/>
+						<line number="255" hits="1"/>
+						<line number="256" hits="1"/>
+						<line number="259" hits="1"/>
+						<line number="260" hits="1"/>
+						<line number="262" hits="1"/>
+						<line number="264" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="265,266"/>
+						<line number="265" hits="0"/>
+						<line number="266" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,267"/>
+						<line number="267" hits="0"/>
+					</lines>
+				</class>
+				<class name="context.py" filename="video_understanding/core/upload/context.py" complexity="0" line-rate="0.3084" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="13" hits="1"/>
+						<line number="15" hits="1"/>
+						<line number="16" hits="1"/>
+						<line number="17" hits="1"/>
+						<line number="19" hits="1"/>
+						<line number="21" hits="1"/>
+						<line number="24" hits="1"/>
+						<line number="27" hits="1"/>
+						<line number="34" hits="0"/>
+						<line number="35" hits="0"/>
+						<line number="36" hits="0"/>
+						<line number="37" hits="0"/>
+						<line number="38" hits="0"/>
+						<line number="39" hits="0"/>
+						<line number="40" hits="0"/>
+						<line number="45" hits="0"/>
+						<line number="46" hits="0"/>
+						<line number="47" hits="0"/>
+						<line number="49" hits="1"/>
+						<line number="55" hits="0"/>
+						<line number="56" hits="0"/>
+						<line number="58" hits="1"/>
+						<line number="64" hits="0"/>
+						<line number="65" hits="0"/>
+						<line number="67" hits="1"/>
+						<line number="73" hits="0"/>
+						<line number="74" hits="0"/>
+						<line number="76" hits="0"/>
+						<line number="83" hits="1"/>
+						<line number="89" hits="0"/>
+						<line number="91" hits="1"/>
+						<line number="99" hits="0"/>
+						<line number="100" hits="0"/>
+						<line number="101" hits="0"/>
+						<line number="102" hits="0"/>
+						<line number="104" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,106"/>
+						<line number="106" hits="0"/>
+						<line number="112" hits="1"/>
+						<line number="118" hits="0"/>
+						<line number="119" hits="0"/>
+						<line number="121" hits="1"/>
+						<line number="127" hits="0"/>
+						<line number="128" hits="0"/>
+						<line number="130" hits="1"/>
+						<line number="133" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="134,142"/>
+						<line number="134" hits="0"/>
+						<line number="135" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="133,136"/>
+						<line number="136" hits="0"/>
+						<line number="137" hits="0"/>
+						<line number="138" hits="0"/>
+						<line number="139" hits="0"/>
+						<line number="142" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="143,151"/>
+						<line number="143" hits="0"/>
+						<line number="144" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="142,145"/>
+						<line number="145" hits="0"/>
+						<line number="146" hits="0"/>
+						<line number="147" hits="0"/>
+						<line number="148" hits="0"/>
+						<line number="151" hits="0"/>
+						<line number="152" hits="0"/>
+						<line number="154" hits="1"/>
+						<line number="163" hits="0"/>
+						<line number="164" hits="0"/>
+						<line number="165" hits="0"/>
+						<line number="166" hits="0"/>
+						<line number="168" hits="1"/>
+						<line number="174" hits="0"/>
+						<line number="175" hits="0"/>
+						<line number="176" hits="0"/>
+						<line number="177" hits="0"/>
+						<line number="179" hits="1"/>
+						<line number="180" hits="1"/>
+						<line number="195" hits="0"/>
+						<line number="196" hits="0"/>
+						<line number="197" hits="0"/>
+						<line number="198" hits="0"/>
+						<line number="200" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,201"/>
+						<line number="201" hits="0"/>
+						<line number="202" hits="0"/>
+						<line number="203" hits="0"/>
+						<line number="204" hits="0"/>
+						<line number="206" hits="1"/>
+						<line number="207" hits="1"/>
+						<line number="221" hits="0"/>
+						<line number="222" hits="0"/>
+						<line number="223" hits="0"/>
+						<line number="224" hits="0"/>
+						<line number="226" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,227"/>
+						<line number="227" hits="0"/>
+						<line number="228" hits="0"/>
+						<line number="229" hits="0"/>
+						<line number="230" hits="0"/>
+						<line number="232" hits="1"/>
+						<line number="239" hits="0"/>
+						<line number="241" hits="1"/>
+						<line number="250" hits="0"/>
+						<line number="252" hits="1"/>
+						<line number="258" hits="0"/>
+						<line number="260" hits="1"/>
+						<line number="261" hits="1"/>
+						<line number="267" hits="0"/>
+					</lines>
+				</class>
+				<class name="detection.py" filename="video_understanding/core/upload/detection.py" complexity="0" line-rate="0.4474" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="6" hits="1"/>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="13" hits="1"/>
+						<line number="16" hits="1"/>
+						<line number="17" hits="1"/>
+						<line number="27" hits="1"/>
+						<line number="28" hits="1"/>
+						<line number="29" hits="1"/>
+						<line number="30" hits="1"/>
+						<line number="32" hits="1"/>
+						<line number="38" hits="0"/>
+						<line number="46" hits="1"/>
+						<line number="60" hits="1"/>
+						<line number="74" hits="0"/>
+						<line number="75" hits="0"/>
+						<line number="76" hits="0"/>
+						<line number="77" hits="0"/>
+						<line number="78" hits="0"/>
+						<line number="80" hits="1"/>
+						<line number="97" hits="0"/>
+						<line number="99" hits="0"/>
+						<line number="100" hits="0"/>
+						<line number="103" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="104,121"/>
+						<line number="104" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="105,108"/>
+						<line number="105" hits="0"/>
+						<line number="108" hits="0"/>
+						<line number="109" hits="0"/>
+						<line number="110" hits="0"/>
+						<line number="113" hits="0"/>
+						<line number="119" hits="0"/>
+						<line number="121" hits="0"/>
+						<line number="123" hits="0"/>
+						<line number="124" hits="0"/>
+						<line number="126" hits="1"/>
+						<line number="140" hits="0"/>
+					</lines>
+				</class>
+				<class name="directory.py" filename="video_understanding/core/upload/directory.py" complexity="0" line-rate="0.1828" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="13" hits="1"/>
+						<line number="18" hits="1"/>
+						<line number="20" hits="1"/>
+						<line number="23" hits="1"/>
+						<line number="40" hits="1"/>
+						<line number="54" hits="0"/>
+						<line number="55" hits="0"/>
+						<line number="56" hits="0"/>
+						<line number="58" hits="1"/>
+						<line number="66" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="67,69"/>
+						<line number="67" hits="0"/>
+						<line number="69" hits="0"/>
+						<line number="70" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="71,73"/>
+						<line number="71" hits="0"/>
+						<line number="73" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="74,77"/>
+						<line number="74" hits="0"/>
+						<line number="77" hits="0"/>
+						<line number="79" hits="0"/>
+						<line number="80" hits="0"/>
+						<line number="82" hits="1"/>
+						<line number="90" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="91,93"/>
+						<line number="91" hits="0"/>
+						<line number="93" hits="0"/>
+						<line number="94" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="95,97"/>
+						<line number="95" hits="0"/>
+						<line number="97" hits="0"/>
+						<line number="99" hits="0"/>
+						<line number="100" hits="0"/>
+						<line number="102" hits="1"/>
+						<line number="114" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="115,117"/>
+						<line number="115" hits="0"/>
+						<line number="117" hits="0"/>
+						<line number="118" hits="0"/>
+						<line number="119" hits="0"/>
+						<line number="120" hits="0"/>
+						<line number="122" hits="0"/>
+						<line number="123" hits="0"/>
+						<line number="125" hits="0"/>
+						<line number="126" hits="0"/>
+						<line number="128" hits="1"/>
+						<line number="141" hits="0"/>
+						<line number="142" hits="0"/>
+						<line number="143" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="144,147"/>
+						<line number="144" hits="0"/>
+						<line number="147" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="148,150"/>
+						<line number="148" hits="0"/>
+						<line number="150" hits="0"/>
+						<line number="152" hits="0"/>
+						<line number="153" hits="0"/>
+						<line number="155" hits="1"/>
+						<line number="174" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="175,177"/>
+						<line number="175" hits="0"/>
+						<line number="177" hits="0"/>
+						<line number="179" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="180,183"/>
+						<line number="180" hits="0"/>
+						<line number="183" hits="0"/>
+						<line number="184" hits="0"/>
+						<line number="187" hits="0"/>
+						<line number="188" hits="0"/>
+						<line number="190" hits="0"/>
+						<line number="191" hits="0"/>
+						<line number="193" hits="0"/>
+						<line number="194" hits="0"/>
+						<line number="196" hits="1"/>
+						<line number="205" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="206,208"/>
+						<line number="206" hits="0"/>
+						<line number="208" hits="0"/>
+						<line number="209" hits="0"/>
+						<line number="210" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="211,214"/>
+						<line number="211" hits="0"/>
+						<line number="214" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,215"/>
+						<line number="215" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="214,216"/>
+						<line number="216" hits="0"/>
+						<line number="217" hits="0"/>
+						<line number="218" hits="0"/>
+						<line number="219" hits="0"/>
+						<line number="222" hits="0"/>
+						<line number="223" hits="0"/>
+						<line number="225" hits="1"/>
+						<line number="235" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="236,238"/>
+						<line number="236" hits="0"/>
+						<line number="238" hits="0"/>
+						<line number="239" hits="0"/>
+						<line number="240" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,241"/>
+						<line number="241" hits="0"/>
+						<line number="242" hits="0"/>
+						<line number="244" hits="0"/>
+						<line number="245" hits="0"/>
+					</lines>
+				</class>
+				<class name="integrity.py" filename="video_understanding/core/upload/integrity.py" complexity="0" line-rate="0.1888" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="13" hits="1"/>
+						<line number="14" hits="1"/>
+						<line number="15" hits="1"/>
+						<line number="17" hits="1"/>
+						<line number="22" hits="1"/>
+						<line number="23" hits="1"/>
+						<line number="24" hits="1"/>
+						<line number="26" hits="1"/>
+						<line number="29" hits="1"/>
+						<line number="47" hits="1"/>
+						<line number="53" hits="0"/>
+						<line number="55" hits="1"/>
+						<line number="68" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="70,79"/>
+						<line number="70" hits="0"/>
+						<line number="79" hits="0"/>
+						<line number="81" hits="0"/>
+						<line number="84" hits="0"/>
+						<line number="87" hits="0"/>
+						<line number="89" hits="0"/>
+						<line number="91" hits="0"/>
+						<line number="92" hits="0"/>
+						<line number="93" hits="0"/>
+						<line number="94" hits="0"/>
+						<line number="96" hits="1"/>
+						<line number="105" hits="0"/>
+						<line number="106" hits="0"/>
+						<line number="107" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="108,114"/>
+						<line number="108" hits="0"/>
+						<line number="114" hits="0"/>
+						<line number="115" hits="0"/>
+						<line number="116" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,117"/>
+						<line number="117" hits="0"/>
+						<line number="121" hits="0"/>
+						<line number="122" hits="0"/>
+						<line number="123" hits="0"/>
+						<line number="124" hits="0"/>
+						<line number="126" hits="1"/>
+						<line number="138" hits="0"/>
+						<line number="139" hits="0"/>
+						<line number="140" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="141,143"/>
+						<line number="141" hits="0"/>
+						<line number="143" hits="0"/>
+						<line number="145" hits="0"/>
+						<line number="146" hits="0"/>
+						<line number="147" hits="0"/>
+						<line number="148" hits="0"/>
+						<line number="149" hits="0"/>
+						<line number="152" hits="0"/>
+						<line number="158" hits="0"/>
+						<line number="160" hits="0"/>
+						<line number="170" hits="0"/>
+						<line number="172" hits="0"/>
+						<line number="173" hits="0"/>
+						<line number="174" hits="0"/>
+						<line number="175" hits="0"/>
+						<line number="177" hits="1"/>
+						<line number="186" hits="0"/>
+						<line number="188" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="189,190"/>
+						<line number="189" hits="0"/>
+						<line number="190" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="191,192"/>
+						<line number="191" hits="0"/>
+						<line number="192" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="193,194"/>
+						<line number="193" hits="0"/>
+						<line number="194" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="195,196"/>
+						<line number="195" hits="0"/>
+						<line number="196" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="197,200"/>
+						<line number="197" hits="0"/>
+						<line number="200" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="201,206"/>
+						<line number="201" hits="0"/>
+						<line number="206" hits="0"/>
+						<line number="207" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,208"/>
+						<line number="208" hits="0"/>
+						<line number="213" hits="0"/>
+						<line number="214" hits="0"/>
+						<line number="215" hits="0"/>
+						<line number="216" hits="0"/>
+						<line number="218" hits="1"/>
+						<line number="232" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="233,235"/>
+						<line number="233" hits="0"/>
+						<line number="235" hits="0"/>
+						<line number="236" hits="0"/>
+						<line number="237" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="238,240"/>
+						<line number="238" hits="0"/>
+						<line number="240" hits="0"/>
+						<line number="241" hits="0"/>
+						<line number="242" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="243,246"/>
+						<line number="243" hits="0"/>
+						<line number="246" hits="0"/>
+						<line number="252" hits="0"/>
+						<line number="253" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="254,256"/>
+						<line number="254" hits="0"/>
+						<line number="256" hits="0"/>
+						<line number="259" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="260,273"/>
+						<line number="260" hits="0"/>
+						<line number="261" hits="0"/>
+						<line number="263" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="264,267"/>
+						<line number="264" hits="0"/>
+						<line number="267" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="259,268"/>
+						<line number="268" hits="0"/>
+						<line number="273" hits="0"/>
+						<line number="275" hits="0"/>
+						<line number="276" hits="0"/>
+						<line number="277" hits="0"/>
+						<line number="278" hits="0"/>
+						<line number="280" hits="1"/>
+						<line number="292" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="293,295"/>
+						<line number="293" hits="0"/>
+						<line number="295" hits="0"/>
+						<line number="297" hits="0"/>
+						<line number="300" hits="0"/>
+						<line number="301" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="302,305"/>
+						<line number="302" hits="0"/>
+						<line number="305" hits="0"/>
+						<line number="307" hits="0"/>
+						<line number="308" hits="0"/>
+						<line number="311" hits="1"/>
+						<line number="314" hits="1"/>
+						<line number="316" hits="0"/>
+						<line number="318" hits="1"/>
+						<line number="327" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="328,330"/>
+						<line number="328" hits="0"/>
+						<line number="330" hits="0"/>
+						<line number="336" hits="0"/>
+						<line number="338" hits="1"/>
+						<line number="340" hits="0"/>
+						<line number="341" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,342"/>
+						<line number="342" hits="0"/>
+						<line number="344" hits="1"/>
+						<line number="346" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,347"/>
+						<line number="347" hits="0"/>
+						<line number="349" hits="1"/>
+						<line number="351" hits="0"/>
+						<line number="352" hits="0"/>
+						<line number="354" hits="0"/>
+						<line number="355" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="356,359"/>
+						<line number="356" hits="0"/>
+						<line number="357" hits="0"/>
+						<line number="359" hits="0"/>
+					</lines>
+				</class>
+				<class name="ocr.py" filename="video_understanding/core/upload/ocr.py" complexity="0" line-rate="0.3898" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="6" hits="1"/>
+						<line number="7" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="13" hits="1"/>
+						<line number="15" hits="1"/>
+						<line number="17" hits="1"/>
+						<line number="20" hits="1"/>
+						<line number="21" hits="1"/>
+						<line number="30" hits="1"/>
+						<line number="31" hits="1"/>
+						<line number="32" hits="1"/>
+						<line number="34" hits="1"/>
+						<line number="40" hits="0"/>
+						<line number="47" hits="1"/>
+						<line number="50" hits="1"/>
+						<line number="63" hits="0"/>
+						<line number="64" hits="0"/>
+						<line number="65" hits="0"/>
+						<line number="66" hits="0"/>
+						<line number="67" hits="0"/>
+						<line number="69" hits="1"/>
+						<line number="81" hits="0"/>
+						<line number="82" hits="0"/>
+						<line number="83" hits="0"/>
+						<line number="84" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="85,93"/>
+						<line number="85" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="84,86"/>
+						<line number="86" hits="0"/>
+						<line number="93" hits="0"/>
+						<line number="94" hits="0"/>
+						<line number="95" hits="0"/>
+						<line number="98" hits="1"/>
+						<line number="101" hits="1"/>
+						<line number="107" hits="0"/>
+						<line number="108" hits="0"/>
+						<line number="110" hits="1"/>
+						<line number="123" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="124,126"/>
+						<line number="124" hits="0"/>
+						<line number="126" hits="0"/>
+						<line number="127" hits="0"/>
+						<line number="129" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="130,133"/>
+						<line number="130" hits="0"/>
+						<line number="131" hits="0"/>
+						<line number="133" hits="0"/>
+						<line number="134" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="135,145"/>
+						<line number="135" hits="0"/>
+						<line number="136" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="137,140"/>
+						<line number="137" hits="0"/>
+						<line number="140" hits="0"/>
+						<line number="141" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="134,142"/>
+						<line number="142" hits="0"/>
+						<line number="145" hits="0"/>
+						<line number="147" hits="0"/>
+						<line number="149" hits="1"/>
+						<line number="160" hits="0"/>
+						<line number="162" hits="1"/>
+						<line number="168" hits="0"/>
+					</lines>
+				</class>
+				<class name="processor.py" filename="video_understanding/core/upload/processor.py" complexity="0" line-rate="0.2103" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="14" hits="1"/>
+						<line number="15" hits="1"/>
+						<line number="17" hits="1"/>
+						<line number="22" hits="1"/>
+						<line number="29" hits="1"/>
+						<line number="30" hits="1"/>
+						<line number="31" hits="1"/>
+						<line number="32" hits="1"/>
+						<line number="33" hits="1"/>
+						<line number="34" hits="1"/>
+						<line number="35" hits="1"/>
+						<line number="36" hits="1"/>
+						<line number="37" hits="1"/>
+						<line number="38" hits="1"/>
+						<line number="39" hits="1"/>
+						<line number="40" hits="1"/>
+						<line number="41" hits="1"/>
+						<line number="43" hits="1"/>
+						<line number="46" hits="1"/>
+						<line number="65" hits="1"/>
+						<line number="76" hits="0"/>
+						<line number="77" hits="0"/>
+						<line number="78" hits="0"/>
+						<line number="79" hits="0"/>
+						<line number="80" hits="0"/>
+						<line number="82" hits="1"/>
+						<line number="101" hits="0"/>
+						<line number="103" hits="0"/>
+						<line number="104" hits="0"/>
+						<line number="107" hits="0"/>
+						<line number="109" hits="0"/>
+						<line number="111" hits="0"/>
+						<line number="112" hits="0"/>
+						<line number="115" hits="0"/>
+						<line number="116" hits="0"/>
+						<line number="119" hits="0"/>
+						<line number="120" hits="0"/>
+						<line number="123" hits="0"/>
+						<line number="126" hits="0"/>
+						<line number="129" hits="0"/>
+						<line number="130" hits="0"/>
+						<line number="132" hits="0"/>
+						<line number="134" hits="0"/>
+						<line number="136" hits="0"/>
+						<line number="137" hits="0"/>
+						<line number="139" hits="0"/>
+						<line number="141" hits="0"/>
+						<line number="142" hits="0"/>
+						<line number="144" hits="0"/>
+						<line number="145" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="146,147"/>
+						<line number="146" hits="0"/>
+						<line number="147" hits="0"/>
+						<line number="149" hits="1"/>
+						<line number="159" hits="0"/>
+						<line number="165" hits="0"/>
+						<line number="169" hits="0"/>
+						<line number="175" hits="1"/>
+						<line number="190" hits="0"/>
+						<line number="191" hits="0"/>
+						<line number="192" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="193,195"/>
+						<line number="193" hits="0"/>
+						<line number="194" hits="0"/>
+						<line number="195" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="196,199"/>
+						<line number="196" hits="0"/>
+						<line number="197" hits="0"/>
+						<line number="199" hits="0"/>
+						<line number="204" hits="1"/>
+						<line number="216" hits="0"/>
+						<line number="217" hits="0"/>
+						<line number="218" hits="0"/>
+						<line number="219" hits="0"/>
+						<line number="221" hits="1"/>
+						<line number="230" hits="0"/>
+						<line number="232" hits="1"/>
+						<line number="245" hits="0"/>
+						<line number="248" hits="0"/>
+						<line number="250" hits="0"/>
+						<line number="252" hits="1"/>
+						<line number="264" hits="0"/>
+						<line number="265" hits="0"/>
+						<line number="266" hits="0"/>
+						<line number="267" hits="0"/>
+						<line number="269" hits="1"/>
+						<line number="284" hits="0"/>
+						<line number="286" hits="1"/>
+						<line number="299" hits="0"/>
+						<line number="301" hits="0"/>
+						<line number="304" hits="0"/>
+						<line number="308" hits="0"/>
+						<line number="309" hits="0"/>
+						<line number="311" hits="1"/>
+						<line number="324" hits="0"/>
+						<line number="325" hits="0"/>
+						<line number="334" hits="0"/>
+						<line number="339" hits="0"/>
+						<line number="340" hits="0"/>
+						<line number="341" hits="0"/>
+						<line number="343" hits="1"/>
+						<line number="356" hits="0"/>
+						<line number="357" hits="0"/>
+						<line number="358" hits="0"/>
+						<line number="363" hits="0"/>
+						<line number="364" hits="0"/>
+						<line number="366" hits="1"/>
+						<line number="376" hits="0"/>
+						<line number="382" hits="1"/>
+						<line number="405" hits="1"/>
+						<line number="415" hits="0"/>
+						<line number="417" hits="0"/>
+						<line number="418" hits="0"/>
+						<line number="419" hits="0"/>
+						<line number="420" hits="0"/>
+						<line number="421" hits="0"/>
+						<line number="425" hits="0"/>
+						<line number="431" hits="1"/>
+						<line number="448" hits="0"/>
+						<line number="449" hits="0"/>
+						<line number="452" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="453,456"/>
+						<line number="453" hits="0"/>
+						<line number="456" hits="0"/>
+						<line number="458" hits="1"/>
+						<line number="475" hits="0"/>
+						<line number="477" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="478,485"/>
+						<line number="478" hits="0"/>
+						<line number="485" hits="0"/>
+						<line number="486" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="487,489"/>
+						<line number="487" hits="0"/>
+						<line number="489" hits="0"/>
+						<line number="491" hits="0"/>
+						<line number="492" hits="0"/>
+						<line number="493" hits="0"/>
+						<line number="494" hits="0"/>
+						<line number="495" hits="0"/>
+						<line number="498" hits="0"/>
+						<line number="501" hits="0"/>
+						<line number="510" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="511,518"/>
+						<line number="511" hits="0"/>
+						<line number="518" hits="0"/>
+						<line number="521" hits="0"/>
+						<line number="523" hits="0"/>
+						<line number="524" hits="0"/>
+						<line number="526" hits="1"/>
+						<line number="550" hits="0"/>
+						<line number="552" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="553,560"/>
+						<line number="553" hits="0"/>
+						<line number="560" hits="0"/>
+						<line number="561" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="562,564"/>
+						<line number="562" hits="0"/>
+						<line number="564" hits="0"/>
+						<line number="566" hits="0"/>
+						<line number="567" hits="0"/>
+						<line number="568" hits="0"/>
+						<line number="576" hits="0"/>
+						<line number="578" hits="0"/>
+						<line number="579" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="580,583"/>
+						<line number="580" hits="0"/>
+						<line number="583" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="584,588"/>
+						<line number="584" hits="0"/>
+						<line number="585" hits="0"/>
+						<line number="588" hits="0"/>
+						<line number="589" hits="0"/>
+						<line number="592" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="593,601"/>
+						<line number="593" hits="0"/>
+						<line number="594" hits="0"/>
+						<line number="601" hits="0"/>
+						<line number="604" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="605,612"/>
+						<line number="605" hits="0"/>
+						<line number="612" hits="0"/>
+						<line number="615" hits="0"/>
+						<line number="617" hits="0"/>
+						<line number="618" hits="0"/>
+						<line number="620" hits="1"/>
+						<line number="634" hits="0"/>
+						<line number="640" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="641,649"/>
+						<line number="641" hits="0"/>
+						<line number="642" hits="0"/>
+						<line number="643" hits="0"/>
+						<line number="644" hits="0"/>
+						<line number="645" hits="0"/>
+						<line number="646" hits="0"/>
+						<line number="649" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="650,658"/>
+						<line number="650" hits="0"/>
+						<line number="651" hits="0"/>
+						<line number="652" hits="0"/>
+						<line number="653" hits="0"/>
+						<line number="654" hits="0"/>
+						<line number="655" hits="0"/>
+						<line number="658" hits="0"/>
+						<line number="660" hits="0"/>
+						<line number="662" hits="1"/>
+						<line number="671" hits="0"/>
+						<line number="677" hits="0"/>
+						<line number="682" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="683,689"/>
+						<line number="683" hits="0"/>
+						<line number="689" hits="0"/>
+						<line number="691" hits="0"/>
+						<line number="693" hits="1"/>
+						<line number="704" hits="0"/>
+						<line number="707" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="708,716"/>
+						<line number="708" hits="0"/>
+						<line number="716" hits="0"/>
+						<line number="719" hits="0"/>
+						<line number="721" hits="1"/>
+						<line number="732" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,733"/>
+						<line number="733" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,734"/>
+						<line number="734" hits="0"/>
+						<line number="735" hits="0"/>
+						<line number="736" hits="0"/>
+						<line number="737" hits="0"/>
+						<line number="739" hits="1"/>
+						<line number="748" hits="0"/>
+						<line number="750" hits="1"/>
+						<line number="756" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="757,759"/>
+						<line number="757" hits="0"/>
+						<line number="759" hits="0"/>
+						<line number="760" hits="0"/>
+						<line number="761" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="762,764"/>
+						<line number="762" hits="0"/>
+						<line number="764" hits="0"/>
+						<line number="765" hits="0"/>
+						<line number="767" hits="0"/>
+						<line number="768" hits="0"/>
+						<line number="769" hits="0"/>
+						<line number="772" hits="1"/>
+						<line number="775" hits="1"/>
+						<line number="777" hits="0"/>
+						<line number="778" hits="0"/>
+						<line number="779" hits="0"/>
+						<line number="780" hits="0"/>
+						<line number="781" hits="0"/>
+						<line number="783" hits="1"/>
+						<line number="795" hits="0"/>
+						<line number="797" hits="0"/>
+						<line number="800" hits="0"/>
+						<line number="803" hits="0"/>
+						<line number="806" hits="0"/>
+						<line number="807" hits="0"/>
+						<line number="810" hits="0"/>
+						<line number="811" hits="0"/>
+						<line number="813" hits="0"/>
+						<line number="815" hits="0"/>
+						<line number="816" hits="0"/>
+						<line number="817" hits="0"/>
+						<line number="819" hits="1"/>
+						<line number="828" hits="0"/>
+						<line number="829" hits="0"/>
+					</lines>
+				</class>
+				<class name="progress.py" filename="video_understanding/core/upload/progress.py" complexity="0" line-rate="0.3636" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="13" hits="1"/>
+						<line number="15" hits="1"/>
+						<line number="18" hits="1"/>
+						<line number="19" hits="1"/>
+						<line number="29" hits="1"/>
+						<line number="30" hits="1"/>
+						<line number="31" hits="1"/>
+						<line number="32" hits="1"/>
+						<line number="33" hits="1"/>
+						<line number="35" hits="1"/>
+						<line number="37" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="38,39"/>
+						<line number="38" hits="0"/>
+						<line number="39" hits="0"/>
+						<line number="42" hits="1"/>
+						<line number="58" hits="1"/>
+						<line number="64" hits="0"/>
+						<line number="65" hits="0"/>
+						<line number="66" hits="0"/>
+						<line number="67" hits="0"/>
+						<line number="68" hits="0"/>
+						<line number="70" hits="1"/>
+						<line number="83" hits="0"/>
+						<line number="85" hits="0"/>
+						<line number="94" hits="0"/>
+						<line number="95" hits="0"/>
+						<line number="98" hits="0"/>
+						<line number="100" hits="0"/>
+						<line number="105" hits="0"/>
+						<line number="106" hits="0"/>
+						<line number="108" hits="1"/>
+						<line number="121" hits="0"/>
+						<line number="123" hits="0"/>
+						<line number="133" hits="0"/>
+						<line number="134" hits="0"/>
+						<line number="137" hits="0"/>
+						<line number="139" hits="0"/>
+						<line number="144" hits="0"/>
+						<line number="145" hits="0"/>
+						<line number="147" hits="1"/>
+						<line number="156" hits="0"/>
+						<line number="158" hits="1"/>
+						<line number="167" hits="0"/>
+						<line number="168" hits="0"/>
+						<line number="169" hits="0"/>
+						<line number="172" hits="1"/>
+						<line number="184" hits="0"/>
+						<line number="186" hits="1"/>
+						<line number="192" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="193,196"/>
+						<line number="193" hits="0"/>
+						<line number="196" hits="0"/>
+						<line number="207" hits="0"/>
+						<line number="211" hits="0"/>
+						<line number="212" hits="0"/>
+						<line number="215" hits="0"/>
+						<line number="220" hits="1"/>
+						<line number="226" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,227"/>
+						<line number="227" hits="0"/>
+						<line number="228" hits="0"/>
+						<line number="229" hits="0"/>
+						<line number="230" hits="0"/>
+						<line number="232" hits="0"/>
+					</lines>
+				</class>
+				<class name="quarantine.py" filename="video_understanding/core/upload/quarantine.py" complexity="0" line-rate="0.1727" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="13" hits="1"/>
+						<line number="15" hits="1"/>
+						<line number="16" hits="1"/>
+						<line number="17" hits="1"/>
+						<line number="19" hits="1"/>
+						<line number="22" hits="1"/>
+						<line number="40" hits="1"/>
+						<line number="51" hits="0"/>
+						<line number="52" hits="0"/>
+						<line number="53" hits="0"/>
+						<line number="55" hits="1"/>
+						<line number="61" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="62,64"/>
+						<line number="62" hits="0"/>
+						<line number="64" hits="0"/>
+						<line number="65" hits="0"/>
+						<line number="66" hits="0"/>
+						<line number="67" hits="0"/>
+						<line number="69" hits="1"/>
+						<line number="88" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="89,93"/>
+						<line number="89" hits="0"/>
+						<line number="93" hits="0"/>
+						<line number="95" hits="0"/>
+						<line number="96" hits="0"/>
+						<line number="99" hits="0"/>
+						<line number="104" hits="0"/>
+						<line number="107" hits="0"/>
+						<line number="113" hits="0"/>
+						<line number="118" hits="0"/>
+						<line number="120" hits="0"/>
+						<line number="121" hits="0"/>
+						<line number="123" hits="1"/>
+						<line number="139" hits="0"/>
+						<line number="141" hits="0"/>
+						<line number="144" hits="0"/>
+						<line number="157" hits="0"/>
+						<line number="158" hits="0"/>
+						<line number="161" hits="0"/>
+						<line number="163" hits="0"/>
+						<line number="165" hits="0"/>
+						<line number="166" hits="0"/>
+						<line number="168" hits="1"/>
+						<line number="180" hits="0"/>
+						<line number="181" hits="0"/>
+						<line number="182" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="183,185"/>
+						<line number="183" hits="0"/>
+						<line number="185" hits="0"/>
+						<line number="186" hits="0"/>
+						<line number="188" hits="0"/>
+						<line number="189" hits="0"/>
+						<line number="191" hits="1"/>
+						<line number="206" hits="0"/>
+						<line number="207" hits="0"/>
+						<line number="208" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="209,211"/>
+						<line number="209" hits="0"/>
+						<line number="211" hits="0"/>
+						<line number="212" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="213,226"/>
+						<line number="213" hits="0"/>
+						<line number="214" hits="0"/>
+						<line number="215" hits="0"/>
+						<line number="216" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="217,219"/>
+						<line number="217" hits="0"/>
+						<line number="219" hits="0"/>
+						<line number="223" hits="0"/>
+						<line number="224" hits="0"/>
+						<line number="226" hits="0"/>
+						<line number="228" hits="0"/>
+						<line number="229" hits="0"/>
+						<line number="231" hits="1"/>
+						<line number="240" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="241,243"/>
+						<line number="241" hits="0"/>
+						<line number="243" hits="0"/>
+						<line number="244" hits="0"/>
+						<line number="245" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="246,248"/>
+						<line number="246" hits="0"/>
+						<line number="248" hits="0"/>
+						<line number="249" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,250"/>
+						<line number="250" hits="0"/>
+						<line number="252" hits="0"/>
+						<line number="253" hits="0"/>
+						<line number="256" hits="0"/>
+						<line number="259" hits="0"/>
+						<line number="261" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="249,263"/>
+						<line number="263" hits="0"/>
+						<line number="264" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="265,268"/>
+						<line number="265" hits="0"/>
+						<line number="268" hits="0"/>
+						<line number="270" hits="0"/>
+						<line number="275" hits="0"/>
+						<line number="276" hits="0"/>
+						<line number="280" hits="0"/>
+						<line number="281" hits="0"/>
+						<line number="283" hits="1"/>
+						<line number="300" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="301,303"/>
+						<line number="301" hits="0"/>
+						<line number="303" hits="0"/>
+						<line number="305" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="308,313"/>
+						<line number="308" hits="0"/>
+						<line number="313" hits="0"/>
+						<line number="320" hits="0"/>
+						<line number="321" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="322,324"/>
+						<line number="322" hits="0"/>
+						<line number="324" hits="0"/>
+						<line number="328" hits="0"/>
+						<line number="330" hits="0"/>
+						<line number="331" hits="0"/>
+					</lines>
+				</class>
+				<class name="scene.py" filename="video_understanding/core/upload/scene.py" complexity="0" line-rate="0.3553" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="6" hits="1"/>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="13" hits="1"/>
+						<line number="14" hits="1"/>
+						<line number="16" hits="1"/>
+						<line number="18" hits="1"/>
+						<line number="21" hits="1"/>
+						<line number="22" hits="1"/>
+						<line number="23" hits="1"/>
+						<line number="26" hits="1"/>
+						<line number="27" hits="1"/>
+						<line number="37" hits="1"/>
+						<line number="38" hits="1"/>
+						<line number="39" hits="1"/>
+						<line number="40" hits="1"/>
+						<line number="43" hits="1"/>
+						<line number="46" hits="1"/>
+						<line number="48" hits="0"/>
+						<line number="49" hits="0"/>
+						<line number="50" hits="0"/>
+						<line number="52" hits="1"/>
+						<line number="64" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="65,67"/>
+						<line number="65" hits="0"/>
+						<line number="67" hits="0"/>
+						<line number="68" hits="0"/>
+						<line number="70" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="71,74"/>
+						<line number="71" hits="0"/>
+						<line number="72" hits="0"/>
+						<line number="74" hits="0"/>
+						<line number="75" hits="0"/>
+						<line number="76" hits="0"/>
+						<line number="77" hits="0"/>
+						<line number="79" hits="0"/>
+						<line number="80" hits="0"/>
+						<line number="81" hits="0"/>
+						<line number="83" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="84,111"/>
+						<line number="84" hits="0"/>
+						<line number="85" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="86,88"/>
+						<line number="86" hits="0"/>
+						<line number="88" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="90,107"/>
+						<line number="90" hits="0"/>
+						<line number="93" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="94,107"/>
+						<line number="94" hits="0"/>
+						<line number="101" hits="0"/>
+						<line number="104" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="105,107"/>
+						<line number="105" hits="0"/>
+						<line number="107" hits="0"/>
+						<line number="108" hits="0"/>
+						<line number="111" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="112,121"/>
+						<line number="112" hits="0"/>
+						<line number="121" hits="0"/>
+						<line number="123" hits="0"/>
+						<line number="125" hits="1"/>
+						<line number="136" hits="0"/>
+						<line number="137" hits="0"/>
+						<line number="140" hits="0"/>
+						<line number="143" hits="0"/>
+						<line number="145" hits="1"/>
+						<line number="151" hits="0"/>
+						<line number="153" hits="1"/>
+						<line number="159" hits="0"/>
+						<line number="161" hits="1"/>
+						<line number="167" hits="0"/>
+						<line number="169" hits="1"/>
+						<line number="185" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="186,190"/>
+						<line number="186" hits="0"/>
+						<line number="187" hits="0"/>
+						<line number="190" hits="0"/>
+						<line number="193" hits="0"/>
+						<line number="196" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="197,204"/>
+						<line number="197" hits="0"/>
+						<line number="204" hits="0"/>
+					</lines>
+				</class>
+				<class name="security.py" filename="video_understanding/core/upload/security.py" complexity="0" line-rate="0.2131" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="14" hits="1"/>
+						<line number="18" hits="1"/>
+						<line number="19" hits="1"/>
+						<line number="21" hits="1"/>
+						<line number="24" hits="1"/>
+						<line number="42" hits="1"/>
+						<line number="53" hits="0"/>
+						<line number="54" hits="0"/>
+						<line number="56" hits="1"/>
+						<line number="65" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="66,68"/>
+						<line number="66" hits="0"/>
+						<line number="68" hits="0"/>
+						<line number="70" hits="0"/>
+						<line number="73" hits="0"/>
+						<line number="76" hits="0"/>
+						<line number="79" hits="0"/>
+						<line number="82" hits="0"/>
+						<line number="86" hits="0"/>
+						<line number="87" hits="0"/>
+						<line number="88" hits="0"/>
+						<line number="89" hits="0"/>
+						<line number="91" hits="1"/>
+						<line number="100" hits="0"/>
+						<line number="101" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="102,104"/>
+						<line number="102" hits="0"/>
+						<line number="104" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="105,107"/>
+						<line number="105" hits="0"/>
+						<line number="107" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,108"/>
+						<line number="108" hits="0"/>
+						<line number="110" hits="0"/>
+						<line number="111" hits="0"/>
+						<line number="112" hits="0"/>
+						<line number="113" hits="0"/>
+						<line number="115" hits="1"/>
+						<line number="124" hits="0"/>
+						<line number="126" hits="0"/>
+						<line number="127" hits="0"/>
+						<line number="130" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="131,136"/>
+						<line number="131" hits="0"/>
+						<line number="136" hits="0"/>
+						<line number="137" hits="0"/>
+						<line number="140" hits="0"/>
+						<line number="141" hits="0"/>
+						<line number="150" hits="0"/>
+						<line number="151" hits="0"/>
+						<line number="152" hits="0"/>
+						<line number="153" hits="0"/>
+						<line number="155" hits="1"/>
+						<line number="164" hits="0"/>
+						<line number="166" hits="0"/>
+						<line number="167" hits="0"/>
+						<line number="168" hits="0"/>
+						<line number="171" hits="0"/>
+						<line number="172" hits="0"/>
+						<line number="175" hits="0"/>
+						<line number="176" hits="0"/>
+						<line number="185" hits="0"/>
+						<line number="186" hits="0"/>
+						<line number="187" hits="0"/>
+						<line number="188" hits="0"/>
+						<line number="190" hits="1"/>
+						<line number="199" hits="0"/>
+						<line number="201" hits="0"/>
+						<line number="204" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="207,212"/>
+						<line number="207" hits="0"/>
+						<line number="212" hits="0"/>
+						<line number="213" hits="0"/>
+						<line number="214" hits="0"/>
+						<line number="215" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="214,216"/>
+						<line number="216" hits="0"/>
+						<line number="222" hits="0"/>
+						<line number="223" hits="0"/>
+						<line number="224" hits="0"/>
+						<line number="225" hits="0"/>
+						<line number="227" hits="1"/>
+						<line number="236" hits="0"/>
+						<line number="241" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="242,245"/>
+						<line number="242" hits="0"/>
+						<line number="245" hits="0"/>
+						<line number="246" hits="0"/>
+						<line number="250" hits="0"/>
+						<line number="251" hits="0"/>
+						<line number="252" hits="0"/>
+						<line number="253" hits="0"/>
+						<line number="255" hits="1"/>
+						<line number="264" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="265,267"/>
+						<line number="265" hits="0"/>
+						<line number="267" hits="0"/>
+						<line number="269" hits="0"/>
+						<line number="272" hits="0"/>
+						<line number="274" hits="0"/>
+						<line number="276" hits="0"/>
+						<line number="277" hits="0"/>
+						<line number="279" hits="1"/>
+						<line number="288" hits="0"/>
+						<line number="289" hits="0"/>
+						<line number="292" hits="1"/>
+						<line number="295" hits="1"/>
+						<line number="297" hits="0"/>
+						<line number="298" hits="0"/>
+						<line number="300" hits="1"/>
+						<line number="309" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="310,312"/>
+						<line number="310" hits="0"/>
+						<line number="312" hits="0"/>
+						<line number="313" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="314,315"/>
+						<line number="314" hits="0"/>
+						<line number="315" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="316,318"/>
+						<line number="316" hits="0"/>
+						<line number="318" hits="0"/>
+						<line number="320" hits="1"/>
+						<line number="323" hits="0"/>
+						<line number="325" hits="1"/>
+						<line number="328" hits="0"/>
+						<line number="330" hits="1"/>
+						<line number="332" hits="0"/>
+						<line number="334" hits="1"/>
+						<line number="336" hits="0"/>
+					</lines>
+				</class>
+			</classes>
+		</package>
+		<package name="video_understanding.models" line-rate="0.6216" branch-rate="0" complexity="0">
+			<classes>
+				<class name="scene.py" filename="video_understanding/models/scene.py" complexity="0" line-rate="0.4694" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="3" hits="1"/>
+						<line number="4" hits="1"/>
+						<line number="5" hits="1"/>
+						<line number="6" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="44" hits="1"/>
+						<line number="45" hits="1"/>
+						<line number="46" hits="1"/>
+						<line number="47" hits="1"/>
+						<line number="48" hits="1"/>
+						<line number="49" hits="1"/>
+						<line number="50" hits="1"/>
+						<line number="51" hits="1"/>
+						<line number="53" hits="1"/>
+						<line number="65" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="66,67"/>
+						<line number="66" hits="0"/>
+						<line number="67" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="68,71"/>
+						<line number="68" hits="0"/>
+						<line number="71" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="72,73"/>
+						<line number="72" hits="0"/>
+						<line number="73" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,74"/>
+						<line number="74" hits="0"/>
+						<line number="76" hits="1"/>
+						<line number="77" hits="1"/>
+						<line number="83" hits="0"/>
+						<line number="85" hits="1"/>
+						<line number="86" hits="1"/>
+						<line number="92" hits="0"/>
+						<line number="94" hits="1"/>
+						<line number="96" hits="0"/>
+						<line number="108" hits="1"/>
+						<line number="109" hits="1"/>
+						<line number="112" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="113,116"/>
+						<line number="113" hits="0"/>
+						<line number="116" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="117,119"/>
+						<line number="117" hits="0"/>
+						<line number="119" hits="0"/>
+						<line number="121" hits="1"/>
+						<line number="123" hits="0"/>
+						<line number="125" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="126,129"/>
+						<line number="126" hits="0"/>
+						<line number="129" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="130,133"/>
+						<line number="130" hits="0"/>
+						<line number="133" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="134,136"/>
+						<line number="134" hits="0"/>
+						<line number="136" hits="0"/>
+						<line number="137" hits="0"/>
+						<line number="138" hits="0"/>
+					</lines>
+				</class>
+				<class name="video.py" filename="video_understanding/models/video.py" complexity="0" line-rate="0.6765" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="15" hits="1"/>
+						<line number="17" hits="1"/>
+						<line number="18" hits="1"/>
+						<line number="19" hits="1"/>
+						<line number="20" hits="1"/>
+						<line number="21" hits="1"/>
+						<line number="22" hits="1"/>
+						<line number="23" hits="1"/>
+						<line number="26" hits="1"/>
+						<line number="28" hits="1"/>
+						<line number="29" hits="1"/>
+						<line number="30" hits="1"/>
+						<line number="31" hits="1"/>
+						<line number="32" hits="1"/>
+						<line number="35" hits="1"/>
+						<line number="36" hits="1"/>
+						<line number="53" hits="1"/>
+						<line number="54" hits="1"/>
+						<line number="55" hits="1"/>
+						<line number="56" hits="1"/>
+						<line number="57" hits="1"/>
+						<line number="58" hits="1"/>
+						<line number="59" hits="1"/>
+						<line number="60" hits="1"/>
+						<line number="61" hits="1"/>
+						<line number="62" hits="1"/>
+						<line number="63" hits="1"/>
+						<line number="64" hits="1"/>
+						<line number="66" hits="1"/>
+						<line number="68" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="69,70"/>
+						<line number="69" hits="0"/>
+						<line number="70" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="71,72"/>
+						<line number="71" hits="0"/>
+						<line number="72" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,73"/>
+						<line number="73" hits="0"/>
+						<line number="76" hits="1"/>
+						<line number="77" hits="1"/>
+						<line number="87" hits="1"/>
+						<line number="88" hits="1"/>
+						<line number="89" hits="1"/>
+						<line number="90" hits="1"/>
+						<line number="91" hits="1"/>
+						<line number="93" hits="1"/>
+						<line number="99" hits="0"/>
+						<line number="101" hits="1"/>
+						<line number="103" hits="0"/>
+						<line number="104" hits="0"/>
+						<line number="105" hits="0"/>
+						<line number="107" hits="1"/>
+						<line number="113" hits="0"/>
+						<line number="114" hits="0"/>
+						<line number="115" hits="0"/>
+						<line number="117" hits="1"/>
+						<line number="118" hits="1"/>
+						<line number="120" hits="0"/>
+						<line number="122" hits="1"/>
+						<line number="123" hits="1"/>
+						<line number="125" hits="0"/>
+						<line number="128" hits="1"/>
+						<line number="129" hits="1"/>
+						<line number="140" hits="1"/>
+						<line number="141" hits="1"/>
+						<line number="142" hits="1"/>
+						<line number="143" hits="1"/>
+						<line number="144" hits="1"/>
+						<line number="145" hits="1"/>
+						<line number="147" hits="1"/>
+						<line number="149" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="150,151"/>
+						<line number="150" hits="0"/>
+						<line number="151" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="152,153"/>
+						<line number="152" hits="0"/>
+						<line number="153" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="154,155"/>
+						<line number="154" hits="0"/>
+						<line number="155" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,156"/>
+						<line number="156" hits="0"/>
+						<line number="159" hits="1"/>
+						<line number="160" hits="1"/>
+						<line number="175" hits="1"/>
+						<line number="176" hits="1"/>
+						<line number="177" hits="1"/>
+						<line number="178" hits="1"/>
+						<line number="179" hits="1"/>
+						<line number="180" hits="1"/>
+						<line number="181" hits="1"/>
+						<line number="183" hits="1"/>
+						<line number="185" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="186,187"/>
+						<line number="186" hits="0"/>
+						<line number="187" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="188,189"/>
+						<line number="188" hits="0"/>
+						<line number="189" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="190,191"/>
+						<line number="190" hits="0"/>
+						<line number="191" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,192"/>
+						<line number="192" hits="0"/>
+						<line number="194" hits="1"/>
+						<line number="195" hits="1"/>
+						<line number="205" hits="0"/>
+						<line number="214" hits="1"/>
+						<line number="215" hits="1"/>
+						<line number="228" hits="1"/>
+						<line number="229" hits="1"/>
+						<line number="230" hits="1"/>
+						<line number="231" hits="1"/>
+						<line number="232" hits="1"/>
+						<line number="233" hits="1"/>
+						<line number="234" hits="1"/>
+						<line number="235" hits="1"/>
+						<line number="237" hits="1"/>
+						<line number="239" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,240"/>
+						<line number="240" hits="0"/>
+						<line number="242" hits="1"/>
+						<line number="251" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="252,253"/>
+						<line number="252" hits="0"/>
+						<line number="253" hits="0"/>
+						<line number="255" hits="1"/>
+						<line number="256" hits="1"/>
+						<line number="258" hits="0"/>
+						<line number="260" hits="1"/>
+						<line number="261" hits="1"/>
+						<line number="263" hits="0"/>
+						<line number="265" hits="1"/>
+						<line number="266" hits="1"/>
+						<line number="268" hits="0"/>
+						<line number="270" hits="1"/>
+						<line number="271" hits="1"/>
+						<line number="273" hits="0"/>
+						<line number="275" hits="1"/>
+						<line number="276" hits="1"/>
+						<line number="292" hits="0"/>
+						<line number="298" hits="0"/>
+						<line number="299" hits="0"/>
+					</lines>
+				</class>
+			</classes>
+		</package>
+		<package name="video_understanding.storage" line-rate="0" branch-rate="0" complexity="0">
+			<classes>
+				<class name="metadata.py" filename="video_understanding/storage/metadata.py" complexity="0" line-rate="0" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="6" hits="0"/>
+						<line number="9" hits="0"/>
+						<line number="10" hits="0"/>
+						<line number="11" hits="0"/>
+						<line number="12" hits="0"/>
+						<line number="15" hits="0"/>
+						<line number="18" hits="0"/>
+						<line number="19" hits="0"/>
+						<line number="28" hits="0"/>
+						<line number="29" hits="0"/>
+						<line number="30" hits="0"/>
+						<line number="33" hits="0"/>
+						<line number="34" hits="0"/>
+						<line number="42" hits="0"/>
+						<line number="43" hits="0"/>
+						<line number="46" hits="0"/>
+						<line number="47" hits="0"/>
+						<line number="58" hits="0"/>
+						<line number="59" hits="0"/>
+						<line number="60" hits="0"/>
+						<line number="62" hits="0"/>
+						<line number="68" hits="0"/>
+						<line number="76" hits="0"/>
+						<line number="78" hits="0"/>
+						<line number="79" hits="0"/>
+						<line number="88" hits="0"/>
+						<line number="93" hits="0"/>
+						<line number="97" hits="0"/>
+						<line number="102" hits="0"/>
+						<line number="109" hits="0"/>
+						<line number="118" hits="0"/>
+						<line number="119" hits="0"/>
+						<line number="121" hits="0"/>
+						<line number="127" hits="0"/>
+						<line number="128" hits="0"/>
+						<line number="129" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,130"/>
+						<line number="130" hits="0"/>
+						<line number="131" hits="0"/>
+						<line number="132" hits="0"/>
+						<line number="133" hits="0"/>
+						<line number="135" hits="0"/>
+						<line number="144" hits="0"/>
+						<line number="145" hits="0"/>
+						<line number="146" hits="0"/>
+						<line number="147" hits="0"/>
+						<line number="148" hits="0"/>
+						<line number="150" hits="0"/>
+						<line number="159" hits="0"/>
+						<line number="160" hits="0"/>
+						<line number="161" hits="0"/>
+						<line number="162" hits="0"/>
+						<line number="163" hits="0"/>
+						<line number="165" hits="0"/>
+						<line number="174" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="175,177"/>
+						<line number="175" hits="0"/>
+						<line number="177" hits="0"/>
+						<line number="178" hits="0"/>
+						<line number="179" hits="0"/>
+						<line number="180" hits="0"/>
+						<line number="181" hits="0"/>
+						<line number="182" hits="0"/>
+						<line number="184" hits="0"/>
+						<line number="196" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="197,199"/>
+						<line number="197" hits="0"/>
+						<line number="199" hits="0"/>
+						<line number="200" hits="0"/>
+						<line number="201" hits="0"/>
+						<line number="202" hits="0"/>
+						<line number="203" hits="0"/>
+						<line number="204" hits="0"/>
+						<line number="206" hits="0"/>
+						<line number="216" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="217,218"/>
+						<line number="217" hits="0"/>
+						<line number="218" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="219,221"/>
+						<line number="219" hits="0"/>
+						<line number="221" hits="0"/>
+						<line number="222" hits="0"/>
+						<line number="223" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="224,226"/>
+						<line number="224" hits="0"/>
+						<line number="226" hits="0"/>
+						<line number="227" hits="0"/>
+						<line number="228" hits="0"/>
+						<line number="229" hits="0"/>
+						<line number="230" hits="0"/>
+						<line number="231" hits="0"/>
+						<line number="234" hits="0"/>
+						<line number="244" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="245,246"/>
+						<line number="245" hits="0"/>
+						<line number="246" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="247,249"/>
+						<line number="247" hits="0"/>
+						<line number="249" hits="0"/>
+						<line number="250" hits="0"/>
+						<line number="251" hits="0"/>
+						<line number="264" hits="0"/>
+						<line number="265" hits="0"/>
+						<line number="268" hits="0"/>
+						<line number="280" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="281,283"/>
+						<line number="281" hits="0"/>
+						<line number="283" hits="0"/>
+						<line number="284" hits="0"/>
+						<line number="285" hits="0"/>
+						<line number="286" hits="0"/>
+						<line number="287" hits="0"/>
+						<line number="288" hits="0"/>
+						<line number="291" hits="0"/>
+						<line number="301" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="302,303"/>
+						<line number="302" hits="0"/>
+						<line number="303" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="304,306"/>
+						<line number="304" hits="0"/>
+						<line number="306" hits="0"/>
+						<line number="307" hits="0"/>
+						<line number="308" hits="0"/>
+						<line number="309" hits="0"/>
+						<line number="310" hits="0"/>
+					</lines>
+				</class>
+				<class name="types.py" filename="video_understanding/storage/types.py" complexity="0" line-rate="0" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="3" hits="0"/>
+						<line number="4" hits="0"/>
+						<line number="6" hits="0"/>
+						<line number="7" hits="0"/>
+						<line number="10" hits="0"/>
+						<line number="11" hits="0"/>
+						<line number="14" hits="0"/>
+						<line number="15" hits="0"/>
+						<line number="16" hits="0"/>
+						<line number="17" hits="0"/>
+						<line number="18" hits="0"/>
+						<line number="21" hits="0"/>
+						<line number="22" hits="0"/>
+						<line number="25" hits="0"/>
+						<line number="26" hits="0"/>
+						<line number="27" hits="0"/>
+						<line number="28" hits="0"/>
+						<line number="29" hits="0"/>
+						<line number="32" hits="0"/>
+						<line number="35" hits="0"/>
+						<line number="36" hits="0"/>
+						<line number="37" hits="0"/>
+						<line number="38" hits="0"/>
+						<line number="40" hits="0"/>
+						<line number="44" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="45,50"/>
+						<line number="45" hits="0"/>
+						<line number="50" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="51,53"/>
+						<line number="51" hits="0"/>
+						<line number="53" hits="0"/>
+						<line number="54" hits="0"/>
+						<line number="56" hits="0"/>
+						<line number="58" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="59,61"/>
+						<line number="59" hits="0"/>
+						<line number="61" hits="0"/>
+						<line number="63" hits="0"/>
+						<line number="65" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,66"/>
+						<line number="66" hits="0"/>
+						<line number="67" hits="0"/>
+						<line number="69" hits="0"/>
+						<line number="76" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="77,82"/>
+						<line number="77" hits="0"/>
+						<line number="82" hits="0"/>
+						<line number="83" hits="0"/>
+						<line number="85" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="86,91"/>
+						<line number="86" hits="0"/>
+						<line number="87" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="85,88"/>
+						<line number="88" hits="0"/>
+						<line number="91" hits="0"/>
+						<line number="92" hits="0"/>
+						<line number="94" hits="0"/>
+						<line number="98" hits="0"/>
+						<line number="99" hits="0"/>
+						<line number="100" hits="0"/>
+						<line number="102" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="103,105"/>
+						<line number="103" hits="0"/>
+						<line number="105" hits="0"/>
+						<line number="107" hits="0"/>
+						<line number="109" hits="0"/>
+						<line number="110" hits="0"/>
+						<line number="112" hits="0"/>
+						<line number="113" hits="0"/>
+						<line number="115" hits="0"/>
+					</lines>
+				</class>
+				<class name="vector.py" filename="video_understanding/storage/vector.py" complexity="0" line-rate="0" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="30" hits="0"/>
+						<line number="31" hits="0"/>
+						<line number="32" hits="0"/>
+						<line number="33" hits="0"/>
+						<line number="40" hits="0"/>
+						<line number="41" hits="0"/>
+						<line number="42" hits="0"/>
+						<line number="44" hits="0"/>
+						<line number="45" hits="0"/>
+						<line number="46" hits="0"/>
+						<line number="48" hits="0"/>
+						<line number="50" hits="0"/>
+						<line number="53" hits="0"/>
+						<line number="65" hits="0"/>
+						<line number="66" hits="0"/>
+						<line number="67" hits="0"/>
+						<line number="68" hits="0"/>
+						<line number="69" hits="0"/>
+						<line number="70" hits="0"/>
+						<line number="73" hits="0"/>
+						<line number="83" hits="0"/>
+						<line number="84" hits="0"/>
+						<line number="85" hits="0"/>
+						<line number="86" hits="0"/>
+						<line number="89" hits="0"/>
+						<line number="90" hits="0"/>
+						<line number="105" hits="0"/>
+						<line number="106" hits="0"/>
+						<line number="107" hits="0"/>
+						<line number="108" hits="0"/>
+						<line number="111" hits="0"/>
+						<line number="115" hits="0"/>
+						<line number="125" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="126,128"/>
+						<line number="126" hits="0"/>
+						<line number="128" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="129,133"/>
+						<line number="129" hits="0"/>
+						<line number="133" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="134,138"/>
+						<line number="134" hits="0"/>
+						<line number="138" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,139"/>
+						<line number="139" hits="0"/>
+						<line number="142" hits="0"/>
+						<line number="151" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="152,154"/>
+						<line number="152" hits="0"/>
+						<line number="154" hits="0"/>
+						<line number="155" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="156,159"/>
+						<line number="156" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="155,157"/>
+						<line number="157" hits="0"/>
+						<line number="159" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="160,162"/>
+						<line number="160" hits="0"/>
+						<line number="162" hits="0"/>
+						<line number="163" hits="0"/>
+						<line number="164" hits="0"/>
+						<line number="165" hits="0"/>
+						<line number="167" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,168"/>
+						<line number="168" hits="0"/>
+						<line number="171" hits="0"/>
+						<line number="180" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="181,186"/>
+						<line number="181" hits="0"/>
+						<line number="182" hits="0"/>
+						<line number="183" hits="0"/>
+						<line number="184" hits="0"/>
+						<line number="186" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,187"/>
+						<line number="187" hits="0"/>
+						<line number="190" hits="0"/>
+						<line number="201" hits="0"/>
+						<line number="218" hits="0"/>
+						<line number="219" hits="0"/>
+						<line number="220" hits="0"/>
+						<line number="221" hits="0"/>
+						<line number="222" hits="0"/>
+						<line number="223" hits="0"/>
+						<line number="225" hits="0"/>
+						<line number="227" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="228,229"/>
+						<line number="228" hits="0"/>
+						<line number="229" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="230,231"/>
+						<line number="230" hits="0"/>
+						<line number="231" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="232,233"/>
+						<line number="232" hits="0"/>
+						<line number="233" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="234,235"/>
+						<line number="234" hits="0"/>
+						<line number="235" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="236,239"/>
+						<line number="236" hits="0"/>
+						<line number="239" hits="0"/>
+						<line number="240" hits="0"/>
+						<line number="242" hits="0"/>
+						<line number="244" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="245,246"/>
+						<line number="245" hits="0"/>
+						<line number="246" hits="0"/>
+						<line number="264" hits="0"/>
+						<line number="266" hits="0"/>
+						<line number="274" hits="0"/>
+						<line number="275" hits="0"/>
+						<line number="277" hits="0"/>
+						<line number="279" hits="0"/>
+						<line number="280" hits="0"/>
+						<line number="282" hits="0"/>
+						<line number="284" hits="0"/>
+						<line number="285" hits="0"/>
+						<line number="287" hits="0"/>
+						<line number="289" hits="0"/>
+						<line number="290" hits="0"/>
+						<line number="292" hits="0"/>
+						<line number="294" hits="0"/>
+						<line number="295" hits="0"/>
+						<line number="297" hits="0"/>
+						<line number="305" hits="0"/>
+						<line number="307" hits="0"/>
+						<line number="315" hits="0"/>
+						<line number="316" hits="0"/>
+						<line number="326" hits="0"/>
+						<line number="327" hits="0"/>
+						<line number="333" hits="0"/>
+						<line number="334" hits="0"/>
+						<line number="354" hits="0"/>
+						<line number="362" hits="0"/>
+						<line number="363" hits="0"/>
+						<line number="372" hits="0"/>
+						<line number="380" hits="0"/>
+						<line number="381" hits="0"/>
+						<line number="391" hits="0"/>
+						<line number="392" hits="0"/>
+						<line number="401" hits="0"/>
+						<line number="412" hits="0"/>
+						<line number="413" hits="0"/>
+						<line number="415" hits="0"/>
+						<line number="424" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="425,429"/>
+						<line number="425" hits="0"/>
+						<line number="429" hits="0"/>
+						<line number="430" hits="0"/>
+						<line number="431" hits="0"/>
+						<line number="432" hits="0"/>
+						<line number="433" hits="0"/>
+						<line number="434" hits="0"/>
+						<line number="437" hits="0"/>
+						<line number="438" hits="0"/>
+						<line number="439" hits="0"/>
+						<line number="442" hits="0"/>
+						<line number="444" hits="0"/>
+						<line number="445" hits="0"/>
+						<line number="447" hits="0"/>
+						<line number="448" hits="0"/>
+						<line number="457" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="458,463"/>
+						<line number="458" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="459,462"/>
+						<line number="459" hits="0"/>
+						<line number="462" hits="0"/>
+						<line number="463" hits="0"/>
+						<line number="465" hits="0"/>
+						<line number="466" hits="0"/>
+						<line number="478" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="479,480"/>
+						<line number="479" hits="0"/>
+						<line number="480" hits="0"/>
+						<line number="482" hits="0"/>
+						<line number="488" hits="0"/>
+						<line number="489" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="490,497"/>
+						<line number="490" hits="0"/>
+						<line number="491" hits="0"/>
+						<line number="494" hits="0"/>
+						<line number="495" hits="0"/>
+						<line number="497" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,498"/>
+						<line number="498" hits="0"/>
+						<line number="499" hits="0"/>
+						<line number="500" hits="0"/>
+						<line number="501" hits="0"/>
+						<line number="502" hits="0"/>
+						<line number="503" hits="0"/>
+						<line number="504" hits="0"/>
+						<line number="505" hits="0"/>
+						<line number="506" hits="0"/>
+						<line number="508" hits="0"/>
+						<line number="509" hits="0"/>
+						<line number="511" hits="0"/>
+						<line number="517" hits="0"/>
+						<line number="519" hits="0"/>
+						<line number="520" hits="0"/>
+						<line number="521" hits="0"/>
+						<line number="522" hits="0"/>
+						<line number="525" hits="0"/>
+						<line number="526" hits="0"/>
+						<line number="527" hits="0"/>
+						<line number="536" hits="0"/>
+						<line number="537" hits="0"/>
+						<line number="539" hits="0"/>
+						<line number="540" hits="0"/>
+						<line number="541" hits="0"/>
+						<line number="542" hits="0"/>
+						<line number="544" hits="0"/>
+						<line number="564" hits="0"/>
+						<line number="566" hits="0"/>
+						<line number="567" hits="0"/>
+						<line number="570" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="571,572"/>
+						<line number="571" hits="0"/>
+						<line number="572" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="573,576"/>
+						<line number="573" hits="0"/>
+						<line number="576" hits="0"/>
+						<line number="577" hits="0"/>
+						<line number="578" hits="0"/>
+						<line number="579" hits="0"/>
+						<line number="581" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="582,584"/>
+						<line number="582" hits="0"/>
+						<line number="584" hits="0"/>
+						<line number="586" hits="0"/>
+						<line number="587" hits="0"/>
+						<line number="588" hits="0"/>
+						<line number="589" hits="0"/>
+						<line number="591" hits="0"/>
+						<line number="640" hits="0"/>
+						<line number="642" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="643,647"/>
+						<line number="643" hits="0"/>
+						<line number="647" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="648,651"/>
+						<line number="648" hits="0"/>
+						<line number="651" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="652,657"/>
+						<line number="652" hits="0"/>
+						<line number="657" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="658,662"/>
+						<line number="658" hits="0"/>
+						<line number="659" hits="0"/>
+						<line number="662" hits="0"/>
+						<line number="663" hits="0"/>
+						<line number="664" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="665,666"/>
+						<line number="665" hits="0"/>
+						<line number="666" hits="0"/>
+						<line number="668" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="669,671"/>
+						<line number="669" hits="0"/>
+						<line number="671" hits="0"/>
+						<line number="673" hits="0"/>
+						<line number="674" hits="0"/>
+						<line number="675" hits="0"/>
+						<line number="676" hits="0"/>
+						<line number="678" hits="0"/>
+						<line number="698" hits="0"/>
+						<line number="699" hits="0"/>
+						<line number="702" hits="0"/>
+						<line number="706" hits="0"/>
+						<line number="707" hits="0"/>
+						<line number="710" hits="0"/>
+						<line number="711" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="712,726"/>
+						<line number="712" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="713,715"/>
+						<line number="713" hits="0"/>
+						<line number="715" hits="0"/>
+						<line number="716" hits="0"/>
+						<line number="723" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="711,724"/>
+						<line number="724" hits="0"/>
+						<line number="726" hits="0"/>
+						<line number="728" hits="0"/>
+						<line number="729" hits="0"/>
+						<line number="730" hits="0"/>
+						<line number="731" hits="0"/>
+						<line number="733" hits="0"/>
+						<line number="749" hits="0"/>
+						<line number="750" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="751,754"/>
+						<line number="751" hits="0"/>
+						<line number="754" hits="0"/>
+						<line number="755" hits="0"/>
+						<line number="757" hits="0"/>
+						<line number="759" hits="0"/>
+						<line number="760" hits="0"/>
+						<line number="761" hits="0"/>
+						<line number="763" hits="0"/>
+						<line number="773" hits="0"/>
+						<line number="774" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="775,778"/>
+						<line number="775" hits="0"/>
+						<line number="778" hits="0"/>
+						<line number="779" hits="0"/>
+						<line number="781" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,782"/>
+						<line number="782" hits="0"/>
+						<line number="784" hits="0"/>
+						<line number="785" hits="0"/>
+						<line number="786" hits="0"/>
+						<line number="788" hits="0"/>
+						<line number="797" hits="0"/>
+						<line number="798" hits="0"/>
+						<line number="799" hits="0"/>
+						<line number="800" hits="0"/>
+						<line number="802" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,803"/>
+						<line number="803" hits="0"/>
+						<line number="805" hits="0"/>
+						<line number="806" hits="0"/>
+						<line number="807" hits="0"/>
+						<line number="810" hits="0"/>
+						<line number="822" hits="0"/>
+						<line number="823" hits="0"/>
+						<line number="828" hits="0"/>
+						<line number="829" hits="0"/>
+						<line number="830" hits="0"/>
+						<line number="831" hits="0"/>
+						<line number="832" hits="0"/>
+						<line number="833" hits="0"/>
+						<line number="836" hits="0"/>
+						<line number="851" hits="0"/>
+						<line number="852" hits="0"/>
+						<line number="857" hits="0"/>
+						<line number="858" hits="0"/>
+						<line number="859" hits="0"/>
+						<line number="860" hits="0"/>
+						<line number="861" hits="0"/>
+						<line number="864" hits="0"/>
+						<line number="878" hits="0"/>
+						<line number="880" hits="0"/>
+						<line number="883" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="884,903"/>
+						<line number="884" hits="0"/>
+						<line number="887" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="888,896"/>
+						<line number="888" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="889,896"/>
+						<line number="889" hits="0"/>
+						<line number="893" hits="0"/>
+						<line number="896" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="897,903"/>
+						<line number="897" hits="0"/>
+						<line number="901" hits="0"/>
+						<line number="903" hits="0"/>
+						<line number="904" hits="0"/>
+						<line number="905" hits="0"/>
+						<line number="908" hits="0"/>
+						<line number="930" hits="0"/>
+						<line number="932" hits="0"/>
+						<line number="933" hits="0"/>
+						<line number="934" hits="0"/>
+						<line number="935" hits="0"/>
+						<line number="938" hits="0"/>
+						<line number="972" hits="0"/>
+						<line number="974" hits="0"/>
+						<line number="975" hits="0"/>
+						<line number="976" hits="0"/>
+						<line number="977" hits="0"/>
+					</lines>
+				</class>
+			</classes>
+		</package>
+		<package name="video_understanding.storage.vector" line-rate="0.3047" branch-rate="0" complexity="0">
+			<classes>
+				<class name="base.py" filename="video_understanding/storage/vector/base.py" complexity="0" line-rate="0" branch-rate="1">
+					<methods/>
+					<lines>
+						<line number="1" hits="0"/>
+						<line number="2" hits="0"/>
+						<line number="5" hits="0"/>
+						<line number="8" hits="0"/>
+						<line number="26" hits="0"/>
+						<line number="47" hits="0"/>
+						<line number="58" hits="0"/>
+						<line number="69" hits="0"/>
+					</lines>
+				</class>
+				<class name="config.py" filename="video_understanding/storage/vector/config.py" complexity="0" line-rate="0.3913" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="14" hits="1"/>
+						<line number="15" hits="1"/>
+						<line number="17" hits="1"/>
+						<line number="18" hits="1"/>
+						<line number="37" hits="1"/>
+						<line number="38" hits="1"/>
+						<line number="39" hits="1"/>
+						<line number="42" hits="1"/>
+						<line number="43" hits="1"/>
+						<line number="44" hits="1"/>
+						<line number="45" hits="1"/>
+						<line number="46" hits="1"/>
+						<line number="49" hits="1"/>
+						<line number="61" hits="1"/>
+						<line number="62" hits="1"/>
+						<line number="63" hits="1"/>
+						<line number="64" hits="1"/>
+						<line number="65" hits="1"/>
+						<line number="66" hits="1"/>
+						<line number="68" hits="1"/>
+						<line number="70" hits="0"/>
+						<line number="72" hits="1"/>
+						<line number="73" hits="1"/>
+						<line number="80" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="81,82"/>
+						<line number="81" hits="0"/>
+						<line number="82" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="83,89"/>
+						<line number="83" hits="0"/>
+						<line number="89" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="90,95"/>
+						<line number="90" hits="0"/>
+						<line number="95" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="96,97"/>
+						<line number="96" hits="0"/>
+						<line number="97" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="98,101"/>
+						<line number="98" hits="0"/>
+						<line number="101" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="102,103"/>
+						<line number="102" hits="0"/>
+						<line number="103" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="104,110"/>
+						<line number="104" hits="0"/>
+						<line number="110" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="111,114"/>
+						<line number="111" hits="0"/>
+						<line number="114" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="115,116"/>
+						<line number="115" hits="0"/>
+						<line number="116" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="117,122"/>
+						<line number="117" hits="0"/>
+						<line number="122" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,123"/>
+						<line number="123" hits="0"/>
+						<line number="125" hits="1"/>
+						<line number="126" hits="1"/>
+						<line number="138" hits="0"/>
+						<line number="139" hits="0"/>
+						<line number="141" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="142,155"/>
+						<line number="142" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="141,143"/>
+						<line number="143" hits="0"/>
+						<line number="144" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="145,146"/>
+						<line number="145" hits="0"/>
+						<line number="146" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="147,148"/>
+						<line number="147" hits="0"/>
+						<line number="148" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="149,150"/>
+						<line number="149" hits="0"/>
+						<line number="150" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="151,153"/>
+						<line number="151" hits="0"/>
+						<line number="153" hits="0"/>
+						<line number="155" hits="0"/>
+						<line number="156" hits="0"/>
+						<line number="157" hits="0"/>
+						<line number="158" hits="0"/>
+						<line number="160" hits="1"/>
+						<line number="166" hits="0"/>
+						<line number="177" hits="1"/>
+						<line number="183" hits="0"/>
+						<line number="185" hits="1"/>
+						<line number="186" hits="1"/>
+						<line number="198" hits="0"/>
+						<line number="200" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="201,202"/>
+						<line number="201" hits="0"/>
+						<line number="202" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="203,204"/>
+						<line number="203" hits="0"/>
+						<line number="204" hits="0"/>
+						<line number="205" hits="0"/>
+						<line number="206" hits="0"/>
+						<line number="208" hits="1"/>
+						<line number="209" hits="1"/>
+						<line number="221" hits="0"/>
+						<line number="222" hits="0"/>
+						<line number="223" hits="0"/>
+						<line number="224" hits="0"/>
+						<line number="225" hits="0"/>
+					</lines>
+				</class>
+				<class name="exceptions.py" filename="video_understanding/storage/vector/exceptions.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines>
+						<line number="8" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="16" hits="1"/>
+						<line number="20" hits="1"/>
+						<line number="24" hits="1"/>
+						<line number="28" hits="1"/>
+						<line number="32" hits="1"/>
+						<line number="36" hits="1"/>
+						<line number="40" hits="1"/>
+						<line number="44" hits="1"/>
+						<line number="48" hits="1"/>
+						<line number="52" hits="1"/>
+					</lines>
+				</class>
+				<class name="factory.py" filename="video_understanding/storage/vector/factory.py" complexity="0" line-rate="0" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="1" hits="0"/>
+						<line number="3" hits="0"/>
+						<line number="6" hits="0"/>
+						<line number="9" hits="0"/>
+						<line number="11" hits="0"/>
+						<line number="12" hits="0"/>
+						<line number="19" hits="0"/>
+						<line number="21" hits="0"/>
+						<line number="22" hits="0"/>
+						<line number="35" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="36,42"/>
+						<line number="36" hits="0"/>
+						<line number="37" hits="0"/>
+						<line number="42" hits="0"/>
+						<line number="44" hits="0"/>
+						<line number="45" hits="0"/>
+						<line number="51" hits="0"/>
+						<line number="53" hits="0"/>
+						<line number="54" hits="0"/>
+						<line number="63" hits="0"/>
+						<line number="64" hits="0"/>
+						<line number="65" hits="0"/>
+						<line number="66" hits="0"/>
+						<line number="67" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="69,71"/>
+						<line number="69" hits="0"/>
+						<line number="70" hits="0"/>
+						<line number="71" hits="0"/>
+					</lines>
+				</class>
+				<class name="metadata.py" filename="video_understanding/storage/vector/metadata.py" complexity="0" line-rate="0.3627" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="13" hits="1"/>
+						<line number="14" hits="1"/>
+						<line number="16" hits="1"/>
+						<line number="18" hits="1"/>
+						<line number="21" hits="1"/>
+						<line number="23" hits="1"/>
+						<line number="24" hits="1"/>
+						<line number="36" hits="0"/>
+						<line number="37" hits="0"/>
+						<line number="38" hits="0"/>
+						<line number="39" hits="0"/>
+						<line number="40" hits="0"/>
+						<line number="42" hits="1"/>
+						<line number="43" hits="1"/>
+						<line number="52" hits="0"/>
+						<line number="53" hits="0"/>
+						<line number="54" hits="0"/>
+						<line number="56" hits="1"/>
+						<line number="59" hits="1"/>
+						<line number="61" hits="0"/>
+						<line number="63" hits="1"/>
+						<line number="66" hits="1"/>
+						<line number="67" hits="0"/>
+						<line number="69" hits="1"/>
+						<line number="70" hits="0"/>
+						<line number="72" hits="1"/>
+						<line number="75" hits="1"/>
+						<line number="76" hits="0"/>
+						<line number="77" hits="0"/>
+						<line number="79" hits="1"/>
+						<line number="80" hits="0"/>
+						<line number="81" hits="0"/>
+						<line number="82" hits="0"/>
+						<line number="83" hits="0"/>
+						<line number="84" hits="0"/>
+						<line number="86" hits="1"/>
+						<line number="98" hits="1"/>
+						<line number="105" hits="0"/>
+						<line number="106" hits="0"/>
+						<line number="107" hits="0"/>
+						<line number="108" hits="0"/>
+						<line number="109" hits="0"/>
+						<line number="111" hits="1"/>
+						<line number="113" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="114,116"/>
+						<line number="114" hits="0"/>
+						<line number="116" hits="0"/>
+						<line number="117" hits="0"/>
+						<line number="118" hits="0"/>
+						<line number="119" hits="0"/>
+						<line number="121" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="122,124"/>
+						<line number="122" hits="0"/>
+						<line number="124" hits="0"/>
+						<line number="125" hits="0"/>
+						<line number="126" hits="0"/>
+						<line number="127" hits="0"/>
+						<line number="129" hits="1"/>
+						<line number="141" hits="1"/>
+						<line number="142" hits="1"/>
+						<line number="148" hits="0"/>
+						<line number="153" hits="0"/>
+						<line number="154" hits="0"/>
+						<line number="155" hits="0"/>
+						<line number="156" hits="0"/>
+						<line number="157" hits="0"/>
+						<line number="159" hits="1"/>
+						<line number="170" hits="0"/>
+						<line number="171" hits="0"/>
+						<line number="173" hits="0"/>
+						<line number="174" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,175"/>
+						<line number="175" hits="0"/>
+						<line number="177" hits="1"/>
+						<line number="189" hits="0"/>
+						<line number="190" hits="0"/>
+						<line number="191" hits="0"/>
+						<line number="192" hits="0"/>
+						<line number="194" hits="1"/>
+						<line number="203" hits="0"/>
+						<line number="204" hits="0"/>
+						<line number="205" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,206"/>
+						<line number="206" hits="0"/>
+						<line number="207" hits="0"/>
+						<line number="208" hits="0"/>
+						<line number="210" hits="1"/>
+						<line number="219" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,220"/>
+						<line number="220" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="219,221"/>
+						<line number="221" hits="0"/>
+						<line number="223" hits="1"/>
+						<line number="229" hits="0"/>
+						<line number="230" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,231"/>
+						<line number="231" hits="0"/>
+						<line number="233" hits="1"/>
+						<line number="234" hits="1"/>
+						<line number="236" hits="0"/>
+						<line number="238" hits="1"/>
+						<line number="239" hits="0"/>
+						<line number="241" hits="1"/>
+						<line number="242" hits="0"/>
+					</lines>
+				</class>
+				<class name="pinecone.py" filename="video_understanding/storage/vector/pinecone.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+				<class name="storage.py" filename="video_understanding/storage/vector/storage.py" complexity="0" line-rate="0.1839" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="14" hits="1"/>
+						<line number="15" hits="1"/>
+						<line number="16" hits="1"/>
+						<line number="17" hits="1"/>
+						<line number="23" hits="1"/>
+						<line number="26" hits="1"/>
+						<line number="28" hits="1"/>
+						<line number="40" hits="1"/>
+						<line number="53" hits="0"/>
+						<line number="54" hits="0"/>
+						<line number="55" hits="0"/>
+						<line number="56" hits="0"/>
+						<line number="57" hits="0"/>
+						<line number="59" hits="1"/>
+						<line number="61" hits="0"/>
+						<line number="62" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="63,64"/>
+						<line number="63" hits="0"/>
+						<line number="64" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="65,66"/>
+						<line number="65" hits="0"/>
+						<line number="66" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="67,75"/>
+						<line number="67" hits="0"/>
+						<line number="68" hits="0"/>
+						<line number="71" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="73,77"/>
+						<line number="73" hits="0"/>
+						<line number="75" hits="0"/>
+						<line number="77" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,78"/>
+						<line number="78" hits="0"/>
+						<line number="79" hits="0"/>
+						<line number="80" hits="0"/>
+						<line number="82" hits="1"/>
+						<line number="91" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="92,94"/>
+						<line number="92" hits="0"/>
+						<line number="94" hits="0"/>
+						<line number="96" hits="0"/>
+						<line number="97" hits="0"/>
+						<line number="98" hits="0"/>
+						<line number="100" hits="1"/>
+						<line number="115" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="116,118"/>
+						<line number="116" hits="0"/>
+						<line number="118" hits="0"/>
+						<line number="120" hits="0"/>
+						<line number="121" hits="0"/>
+						<line number="122" hits="0"/>
+						<line number="123" hits="0"/>
+						<line number="125" hits="1"/>
+						<line number="131" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="132,134"/>
+						<line number="132" hits="0"/>
+						<line number="134" hits="0"/>
+						<line number="135" hits="0"/>
+						<line number="136" hits="0"/>
+						<line number="137" hits="0"/>
+						<line number="139" hits="1"/>
+						<line number="145" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="146,148"/>
+						<line number="146" hits="0"/>
+						<line number="148" hits="0"/>
+						<line number="149" hits="0"/>
+						<line number="150" hits="0"/>
+						<line number="151" hits="0"/>
+						<line number="153" hits="1"/>
+						<line number="154" hits="1"/>
+						<line number="156" hits="0"/>
+						<line number="158" hits="1"/>
+						<line number="159" hits="0"/>
+						<line number="161" hits="1"/>
+						<line number="173" hits="1"/>
+						<line number="186" hits="0"/>
+						<line number="187" hits="0"/>
+						<line number="188" hits="0"/>
+						<line number="189" hits="0"/>
+						<line number="190" hits="0"/>
+						<line number="191" hits="0"/>
+						<line number="192" hits="0"/>
+						<line number="194" hits="1"/>
+						<line number="200" hits="0"/>
+						<line number="201" hits="0"/>
+						<line number="202" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,203"/>
+						<line number="203" hits="0"/>
+						<line number="208" hits="0"/>
+						<line number="209" hits="0"/>
+						<line number="210" hits="0"/>
+						<line number="212" hits="1"/>
+						<line number="222" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="223,225"/>
+						<line number="223" hits="0"/>
+						<line number="225" hits="0"/>
+						<line number="227" hits="0"/>
+						<line number="228" hits="0"/>
+						<line number="231" hits="0"/>
+						<line number="235" hits="0"/>
+						<line number="236" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="237,245"/>
+						<line number="237" hits="0"/>
+						<line number="242" hits="0"/>
+						<line number="245" hits="0"/>
+						<line number="246" hits="0"/>
+						<line number="247" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="248,249"/>
+						<line number="248" hits="0"/>
+						<line number="249" hits="0"/>
+						<line number="251" hits="1"/>
+						<line number="260" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="261,263"/>
+						<line number="261" hits="0"/>
+						<line number="263" hits="0"/>
+						<line number="264" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="265,266"/>
+						<line number="265" hits="0"/>
+						<line number="266" hits="0"/>
+						<line number="267" hits="0"/>
+						<line number="268" hits="0"/>
+						<line number="270" hits="1"/>
+						<line number="272" hits="0"/>
+						<line number="273" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="274,277"/>
+						<line number="274" hits="0"/>
+						<line number="275" hits="0"/>
+						<line number="277" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="278,281"/>
+						<line number="278" hits="0"/>
+						<line number="279" hits="0"/>
+						<line number="281" hits="0"/>
+						<line number="283" hits="1"/>
+						<line number="295" hits="1"/>
+						<line number="301" hits="0"/>
+						<line number="302" hits="0"/>
+						<line number="303" hits="0"/>
+						<line number="304" hits="0"/>
+						<line number="305" hits="0"/>
+						<line number="307" hits="1"/>
+						<line number="313" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="314,316"/>
+						<line number="314" hits="0"/>
+						<line number="316" hits="0"/>
+						<line number="317" hits="0"/>
+						<line number="318" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,319"/>
+						<line number="319" hits="0"/>
+						<line number="320" hits="0"/>
+						<line number="321" hits="0"/>
+						<line number="322" hits="0"/>
+						<line number="324" hits="1"/>
+						<line number="325" hits="1"/>
+						<line number="331" hits="0"/>
+						<line number="332" hits="0"/>
+						<line number="333" hits="0"/>
+						<line number="335" hits="0"/>
+						<line number="337" hits="1"/>
+						<line number="351" hits="0"/>
+						<line number="353" hits="0"/>
+						<line number="355" hits="0"/>
+						<line number="356" hits="0"/>
+						<line number="359" hits="0"/>
+						<line number="360" hits="0"/>
+						<line number="361" hits="0"/>
+						<line number="362" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="363,365"/>
+						<line number="363" hits="0"/>
+						<line number="365" hits="0"/>
+						<line number="366" hits="0"/>
+						<line number="367" hits="0"/>
+						<line number="369" hits="1"/>
+						<line number="384" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="385,387"/>
+						<line number="385" hits="0"/>
+						<line number="387" hits="0"/>
+						<line number="389" hits="0"/>
+						<line number="390" hits="0"/>
+						<line number="392" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="394,403"/>
+						<line number="394" hits="0"/>
+						<line number="397" hits="0"/>
+						<line number="398" hits="0"/>
+						<line number="399" hits="0"/>
+						<line number="400" hits="0"/>
+						<line number="403" hits="0"/>
+						<line number="404" hits="0"/>
+						<line number="405" hits="0"/>
+						<line number="406" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="407,409"/>
+						<line number="407" hits="0"/>
+						<line number="409" hits="0"/>
+						<line number="410" hits="0"/>
+						<line number="411" hits="0"/>
+						<line number="413" hits="1"/>
+						<line number="430" hits="0"/>
+						<line number="432" hits="0"/>
+						<line number="434" hits="0"/>
+						<line number="435" hits="0"/>
+						<line number="440" hits="0"/>
+						<line number="441" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="442,457"/>
+						<line number="442" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="443,445"/>
+						<line number="443" hits="0"/>
+						<line number="445" hits="0"/>
+						<line number="446" hits="0"/>
+						<line number="447" hits="0"/>
+						<line number="449" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="441,450"/>
+						<line number="450" hits="0"/>
+						<line number="457" hits="0"/>
+						<line number="458" hits="0"/>
+						<line number="459" hits="0"/>
+						<line number="461" hits="1"/>
+						<line number="473" hits="0"/>
+						<line number="475" hits="0"/>
+						<line number="478" hits="0"/>
+						<line number="479" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="480,482"/>
+						<line number="480" hits="0"/>
+						<line number="482" hits="0"/>
+						<line number="484" hits="0"/>
+						<line number="487" hits="0"/>
+						<line number="489" hits="0"/>
+						<line number="495" hits="0"/>
+						<line number="496" hits="0"/>
+						<line number="498" hits="1"/>
+						<line number="507" hits="0"/>
+						<line number="509" hits="0"/>
+						<line number="512" hits="0"/>
+						<line number="513" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="514,517"/>
+						<line number="514" hits="0"/>
+						<line number="517" hits="0"/>
+						<line number="518" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,519"/>
+						<line number="519" hits="0"/>
+						<line number="520" hits="0"/>
+						<line number="521" hits="0"/>
+						<line number="523" hits="1"/>
+						<line number="525" hits="0"/>
+						<line number="527" hits="1"/>
+						<line number="528" hits="0"/>
+						<line number="529" hits="0"/>
+						<line number="531" hits="1"/>
+						<line number="532" hits="0"/>
 					</lines>
 				</class>
-				<class name="video.py" filename="models/video.py" complexity="0" line-rate="0.8286" branch-rate="0.5">
+				<class name="types.py" filename="video_understanding/storage/vector/types.py" complexity="0" line-rate="0.75" branch-rate="1">
 					<methods/>
 					<lines>
+						<line number="7" hits="1"/>
 						<line number="8" hits="1"/>
 						<line number="9" hits="1"/>
-						<line number="10" hits="1"/>
-						<line number="11" hits="1"/>
 						<line number="12" hits="1"/>
-						<line number="15" hits="1"/>
+						<line number="13" hits="1"/>
 						<line number="16" hits="1"/>
+						<line number="17" hits="1"/>
+						<line number="19" hits="1"/>
+						<line number="30" hits="1"/>
+						<line number="31" hits="1"/>
+						<line number="32" hits="1"/>
+						<line number="33" hits="1"/>
+						<line number="34" hits="1"/>
+						<line number="35" hits="1"/>
 						<line number="37" hits="1"/>
-						<line number="38" hits="1"/>
-						<line number="39" hits="1"/>
-						<line number="40" hits="1"/>
-						<line number="41" hits="1"/>
-						<line number="42" hits="1"/>
-						<line number="43" hits="1"/>
-						<line number="44" hits="1"/>
-						<line number="45" hits="1"/>
 						<line number="46" hits="1"/>
 						<line number="47" hits="1"/>
+						<line number="48" hits="1"/>
 						<line number="49" hits="1"/>
-						<line number="51" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="52"/>
-						<line number="52" hits="0"/>
-						<line number="55" hits="1"/>
-						<line number="56" hits="1"/>
-						<line number="74" hits="1"/>
-						<line number="75" hits="1"/>
-						<line number="76" hits="1"/>
+						<line number="51" hits="1"/>
+						<line number="65" hits="1"/>
+						<line number="72" hits="0"/>
+						<line number="73" hits="0"/>
+						<line number="74" hits="0"/>
+						<line number="75" hits="0"/>
 						<line number="77" hits="1"/>
-						<line number="78" hits="1"/>
-						<line number="79" hits="1"/>
 						<line number="80" hits="1"/>
-						<line number="82" hits="1"/>
-						<line number="89" hits="0"/>
-						<line number="90" hits="0"/>
-						<line number="91" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,92"/>
-						<line number="92" hits="0"/>
-						<line number="94" hits="1"/>
-						<line number="96" hits="0"/>
-						<line number="97" hits="0"/>
+						<line number="82" hits="0"/>
+						<line number="84" hits="1"/>
+						<line number="86" hits="0"/>
+						<line number="88" hits="1"/>
+						<line number="94" hits="0"/>
+						<line number="96" hits="1"/>
 						<line number="98" hits="0"/>
 						<line number="100" hits="1"/>
-						<line number="106" hits="0"/>
-						<line number="107" hits="0"/>
-						<line number="108" hits="0"/>
-						<line number="110" hits="1"/>
-						<line number="111" hits="1"/>
-						<line number="113" hits="1"/>
-						<line number="115" hits="1"/>
-						<line number="116" hits="1"/>
-						<line number="118" hits="1"/>
-						<line number="121" hits="1"/>
-						<line number="122" hits="1"/>
-						<line number="142" hits="1"/>
-						<line number="143" hits="1"/>
-						<line number="144" hits="1"/>
-						<line number="145" hits="1"/>
-						<line number="147" hits="1"/>
-						<line number="149" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="150"/>
-						<line number="150" hits="0"/>
-						<line number="152" hits="1"/>
-						<line number="161" hits="1" branch="true" condition-coverage="100% (2/2)"/>
-						<line number="162" hits="1"/>
-						<line number="163" hits="1"/>
-						<line number="165" hits="1"/>
-						<line number="166" hits="1"/>
-						<line number="172" hits="1"/>
-						<line number="174" hits="1"/>
-						<line number="175" hits="1"/>
-						<line number="186" hits="1"/>
-						<line number="191" hits="1"/>
-						<line number="192" hits="1"/>
+						<line number="102" hits="0"/>
 					</lines>
 				</class>
-			</classes>
-		</package>
-		<package name="storage" line-rate="0" branch-rate="0" complexity="0">
-			<classes>
-				<class name="metadata.py" filename="storage/metadata.py" complexity="0" line-rate="0" branch-rate="0">
+				<class name="utils.py" filename="video_understanding/storage/vector/utils.py" complexity="0" line-rate="0.2917" branch-rate="0">
 					<methods/>
 					<lines>
-						<line number="6" hits="0"/>
-						<line number="9" hits="0"/>
-						<line number="10" hits="0"/>
-						<line number="11" hits="0"/>
-						<line number="12" hits="0"/>
-						<line number="15" hits="0"/>
-						<line number="18" hits="0"/>
-						<line number="19" hits="0"/>
-						<line number="28" hits="0"/>
-						<line number="29" hits="0"/>
-						<line number="30" hits="0"/>
+						<line number="7" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="10" hits="1"/>
+						<line number="11" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="14" hits="1"/>
+						<line number="15" hits="1"/>
+						<line number="17" hits="1"/>
+						<line number="19" hits="1"/>
+						<line number="20" hits="1"/>
+						<line number="22" hits="1"/>
+						<line number="32" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="33,35"/>
 						<line number="33" hits="0"/>
-						<line number="34" hits="0"/>
-						<line number="42" hits="0"/>
-						<line number="43" hits="0"/>
+						<line number="35" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="36,40"/>
+						<line number="36" hits="0"/>
+						<line number="40" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="41,45"/>
+						<line number="41" hits="0"/>
+						<line number="45" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,46"/>
 						<line number="46" hits="0"/>
-						<line number="47" hits="0"/>
-						<line number="56" hits="0"/>
-						<line number="57" hits="0"/>
+						<line number="48" hits="1"/>
+						<line number="57" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="58,60"/>
 						<line number="58" hits="0"/>
 						<line number="60" hits="0"/>
+						<line number="61" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="62,65"/>
+						<line number="62" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="61,63"/>
+						<line number="63" hits="0"/>
+						<line number="65" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="66,68"/>
 						<line number="66" hits="0"/>
+						<line number="68" hits="0"/>
+						<line number="69" hits="0"/>
+						<line number="70" hits="0"/>
+						<line number="71" hits="0"/>
+						<line number="73" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,74"/>
 						<line number="74" hits="0"/>
-						<line number="76" hits="0"/>
-						<line number="77" hits="0"/>
-						<line number="86" hits="0"/>
-						<line number="91" hits="0"/>
-						<line number="95" hits="0"/>
-						<line number="100" hits="0"/>
+						<line number="76" hits="1"/>
+						<line number="85" hits="0"/>
+						<line number="86" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="87,88"/>
+						<line number="87" hits="0"/>
+						<line number="88" hits="0"/>
+						<line number="90" hits="1"/>
+						<line number="99" hits="1"/>
+						<line number="100" hits="1"/>
+						<line number="101" hits="1"/>
+						<line number="102" hits="0"/>
+						<line number="103" hits="0"/>
+						<line number="104" hits="0"/>
+						<line number="105" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="106,107"/>
+						<line number="106" hits="0"/>
 						<line number="107" hits="0"/>
-						<line number="116" hits="0"/>
-						<line number="117" hits="0"/>
-						<line number="119" hits="0"/>
-						<line number="125" hits="0"/>
-						<line number="126" hits="0"/>
-						<line number="127" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,128"/>
+						<line number="108" hits="1"/>
+						<line number="109" hits="1"/>
+						<line number="111" hits="1"/>
 						<line number="128" hits="0"/>
 						<line number="129" hits="0"/>
 						<line number="130" hits="0"/>
 						<line number="131" hits="0"/>
+						<line number="132" hits="0"/>
 						<line number="133" hits="0"/>
-						<line number="142" hits="0"/>
-						<line number="143" hits="0"/>
-						<line number="144" hits="0"/>
-						<line number="145" hits="0"/>
-						<line number="146" hits="0"/>
+						<line number="135" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="136,151"/>
+						<line number="136" hits="0"/>
+						<line number="137" hits="0"/>
+						<line number="138" hits="0"/>
+						<line number="139" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="140,141"/>
+						<line number="140" hits="0"/>
+						<line number="141" hits="0"/>
+						<line number="147" hits="0"/>
 						<line number="148" hits="0"/>
-						<line number="157" hits="0"/>
-						<line number="158" hits="0"/>
-						<line number="159" hits="0"/>
-						<line number="160" hits="0"/>
-						<line number="161" hits="0"/>
-						<line number="163" hits="0"/>
-						<line number="172" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="173,175"/>
-						<line number="173" hits="0"/>
-						<line number="175" hits="0"/>
-						<line number="176" hits="0"/>
-						<line number="177" hits="0"/>
-						<line number="178" hits="0"/>
-						<line number="179" hits="0"/>
-						<line number="180" hits="0"/>
-						<line number="182" hits="0"/>
-						<line number="194" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="195,197"/>
-						<line number="195" hits="0"/>
-						<line number="197" hits="0"/>
-						<line number="198" hits="0"/>
-						<line number="199" hits="0"/>
-						<line number="200" hits="0"/>
-						<line number="201" hits="0"/>
-						<line number="202" hits="0"/>
-						<line number="204" hits="0"/>
-						<line number="214" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="215,216"/>
-						<line number="215" hits="0"/>
-						<line number="216" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="217,219"/>
-						<line number="217" hits="0"/>
-						<line number="219" hits="0"/>
-						<line number="220" hits="0"/>
-						<line number="221" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="222,224"/>
-						<line number="222" hits="0"/>
-						<line number="224" hits="0"/>
-						<line number="225" hits="0"/>
-						<line number="226" hits="0"/>
-						<line number="227" hits="0"/>
-						<line number="228" hits="0"/>
-						<line number="229" hits="0"/>
-						<line number="232" hits="0"/>
-						<line number="242" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="243,244"/>
-						<line number="243" hits="0"/>
-						<line number="244" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="245,247"/>
-						<line number="245" hits="0"/>
-						<line number="247" hits="0"/>
-						<line number="248" hits="0"/>
-						<line number="249" hits="0"/>
-						<line number="262" hits="0"/>
-						<line number="263" hits="0"/>
-						<line number="266" hits="0"/>
-						<line number="278" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="279,281"/>
-						<line number="279" hits="0"/>
-						<line number="281" hits="0"/>
-						<line number="282" hits="0"/>
-						<line number="283" hits="0"/>
-						<line number="284" hits="0"/>
-						<line number="285" hits="0"/>
-						<line number="286" hits="0"/>
-						<line number="289" hits="0"/>
-						<line number="299" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="300,301"/>
-						<line number="300" hits="0"/>
-						<line number="301" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="302,304"/>
-						<line number="302" hits="0"/>
-						<line number="304" hits="0"/>
-						<line number="305" hits="0"/>
-						<line number="306" hits="0"/>
-						<line number="307" hits="0"/>
-						<line number="308" hits="0"/>
+						<line number="149" hits="0"/>
+						<line number="151" hits="0"/>
+						<line number="152" hits="0"/>
+						<line number="153" hits="0"/>
+					</lines>
+				</class>
+			</classes>
+		</package>
+		<package name="video_understanding.types" line-rate="0.8919" branch-rate="0.25" complexity="0">
+			<classes>
+				<class name="cv2.py" filename="video_understanding/types/cv2.py" complexity="0" line-rate="0.8919" branch-rate="0.25">
+					<methods/>
+					<lines>
+						<line number="3" hits="1"/>
+						<line number="4" hits="1"/>
+						<line number="5" hits="1"/>
+						<line number="8" hits="1"/>
+						<line number="9" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="13" hits="1" branch="true" condition-coverage="50% (1/2)" missing-branches="14"/>
+						<line number="14" hits="0"/>
+						<line number="17" hits="1"/>
+						<line number="19" hits="0"/>
+						<line number="21" hits="1"/>
+						<line number="22" hits="1"/>
+						<line number="23" hits="1"/>
+						<line number="24" hits="1"/>
+						<line number="25" hits="1"/>
+						<line number="26" hits="1"/>
+						<line number="28" hits="1"/>
+						<line number="40" hits="0"/>
+						<line number="41" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="42,43"/>
+						<line number="42" hits="0"/>
+						<line number="43" hits="0"/>
+						<line number="45" hits="1"/>
+						<line number="54" hits="0"/>
+						<line number="63" hits="1"/>
+						<line number="64" hits="0"/>
+						<line number="67" hits="1"/>
+						<line number="68" hits="1"/>
+						<line number="69" hits="1"/>
+						<line number="70" hits="1"/>
+						<line number="71" hits="1"/>
+						<line number="72" hits="1"/>
+						<line number="73" hits="1"/>
+						<line number="74" hits="1"/>
+						<line number="75" hits="1"/>
+						<line number="76" hits="1"/>
+						<line number="77" hits="1"/>
+						<line number="78" hits="1"/>
+						<line number="79" hits="1"/>
+						<line number="80" hits="1"/>
+						<line number="81" hits="1"/>
+						<line number="82" hits="1"/>
+						<line number="85" hits="1"/>
+						<line number="86" hits="1"/>
+						<line number="87" hits="1"/>
+						<line number="88" hits="1"/>
+						<line number="89" hits="1"/>
+						<line number="90" hits="1"/>
+						<line number="93" hits="1"/>
+						<line number="94" hits="1"/>
+						<line number="95" hits="1"/>
+						<line number="98" hits="1"/>
+						<line number="99" hits="1"/>
+						<line number="100" hits="1"/>
+						<line number="101" hits="1"/>
+						<line number="102" hits="1"/>
+						<line number="103" hits="1"/>
+						<line number="104" hits="1"/>
+						<line number="105" hits="1"/>
+						<line number="106" hits="1"/>
+						<line number="107" hits="1"/>
+						<line number="110" hits="1"/>
+						<line number="111" hits="1"/>
+						<line number="112" hits="1"/>
+						<line number="113" hits="1"/>
+						<line number="114" hits="1"/>
+						<line number="117" hits="1"/>
+						<line number="118" hits="1"/>
+						<line number="119" hits="1"/>
+						<line number="120" hits="1"/>
+						<line number="121" hits="1"/>
+						<line number="122" hits="1"/>
+						<line number="123" hits="1"/>
+						<line number="124" hits="1"/>
+						<line number="127" hits="1"/>
 					</lines>
 				</class>
-				<class name="types.py" filename="storage/types.py" complexity="0" line-rate="0" branch-rate="0">
+			</classes>
+		</package>
+		<package name="video_understanding.utils" line-rate="0.3684" branch-rate="0" complexity="0">
+			<classes>
+				<class name="circuit_breaker.py" filename="video_understanding/utils/circuit_breaker.py" complexity="0" line-rate="0" branch-rate="0">
 					<methods/>
 					<lines>
+						<line number="1" hits="0"/>
+						<line number="2" hits="0"/>
 						<line number="3" hits="0"/>
 						<line number="4" hits="0"/>
-						<line number="5" hits="0"/>
 						<line number="6" hits="0"/>
-						<line number="8" hits="0"/>
 						<line number="9" hits="0"/>
-						<line number="11" hits="0"/>
-						<line number="12" hits="0"/>
-						<line number="13" hits="0"/>
-						<line number="14" hits="0"/>
 						<line number="15" hits="0"/>
-						<line number="17" hits="0"/>
 						<line number="18" hits="0"/>
-						<line number="20" hits="0"/>
-						<line number="21" hits="0"/>
-						<line number="22" hits="0"/>
-						<line number="23" hits="0"/>
-						<line number="24" hits="0"/>
+						<line number="25" hits="0"/>
 						<line number="26" hits="0"/>
+						<line number="27" hits="0"/>
+						<line number="28" hits="0"/>
 						<line number="29" hits="0"/>
-						<line number="30" hits="0"/>
 						<line number="31" hits="0"/>
-						<line number="32" hits="0"/>
-						<line number="34" hits="0"/>
-						<line number="36" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="37,42"/>
-						<line number="37" hits="0"/>
-						<line number="42" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="43,45"/>
-						<line number="43" hits="0"/>
-						<line number="45" hits="0"/>
-						<line number="46" hits="0"/>
-						<line number="48" hits="0"/>
-						<line number="50" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="51,53"/>
+						<line number="46" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="47,62"/>
+						<line number="47" hits="0"/>
+						<line number="48" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="50,54"/>
+						<line number="50" hits="0"/>
 						<line number="51" hits="0"/>
-						<line number="53" hits="0"/>
+						<line number="52" hits="0"/>
+						<line number="54" hits="0"/>
 						<line number="55" hits="0"/>
-						<line number="57" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="exit,58"/>
 						<line number="58" hits="0"/>
-						<line number="59" hits="0"/>
-						<line number="61" hits="0"/>
-						<line number="68" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="69,74"/>
-						<line number="69" hits="0"/>
+						<line number="62" hits="0"/>
+						<line number="64" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="65,67"/>
+						<line number="65" hits="0"/>
+						<line number="67" hits="0"/>
+						<line number="70" hits="0"/>
+						<line number="71" hits="0"/>
+						<line number="73" hits="0"/>
 						<line number="74" hits="0"/>
 						<line number="75" hits="0"/>
-						<line number="77" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="78,83"/>
+						<line number="77" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="78,86"/>
 						<line number="78" hits="0"/>
-						<line number="79" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="77,80"/>
-						<line number="80" hits="0"/>
 						<line number="83" hits="0"/>
-						<line number="84" hits="0"/>
 						<line number="86" hits="0"/>
-						<line number="92" hits="0"/>
-						<line number="93" hits="0"/>
-						<line number="94" hits="0"/>
-						<line number="96" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="97,99"/>
-						<line number="97" hits="0"/>
-						<line number="99" hits="0"/>
-						<line number="101" hits="0"/>
-						<line number="103" hits="0"/>
-						<line number="104" hits="0"/>
-						<line number="106" hits="0"/>
-						<line number="107" hits="0"/>
-						<line number="109" hits="0"/>
 					</lines>
 				</class>
-			</classes>
-		</package>
-		<package name="types" line-rate="1" branch-rate="1" complexity="0">
-			<classes>
-				<class name="cv2.py" filename="types/cv2.py" complexity="0" line-rate="1" branch-rate="1">
+				<class name="constants.py" filename="video_understanding/utils/constants.py" complexity="0" line-rate="1" branch-rate="1">
 					<methods/>
 					<lines>
-						<line number="4" hits="1"/>
-						<line number="5" hits="1"/>
-						<line number="6" hits="1"/>
 						<line number="7" hits="1"/>
 						<line number="8" hits="1"/>
-						<line number="9" hits="1"/>
-						<line number="10" hits="1"/>
 						<line number="11" hits="1"/>
-						<line number="12" hits="1"/>
-						<line number="13" hits="1"/>
-						<line number="14" hits="1"/>
-						<line number="15" hits="1"/>
-						<line number="16" hits="1"/>
-						<line number="17" hits="1"/>
 						<line number="18" hits="1"/>
-						<line number="19" hits="1"/>
-						<line number="22" hits="1"/>
-						<line number="23" hits="1"/>
-						<line number="24" hits="1"/>
-						<line number="25" hits="1"/>
-						<line number="26" hits="1"/>
-						<line number="27" hits="1"/>
-						<line number="30" hits="1"/>
+						<line number="21" hits="1"/>
 						<line number="31" hits="1"/>
 						<line number="32" hits="1"/>
-						<line number="35" hits="1"/>
+						<line number="33" hits="1"/>
 						<line number="36" hits="1"/>
 						<line number="37" hits="1"/>
 						<line number="38" hits="1"/>
-						<line number="39" hits="1"/>
-						<line number="40" hits="1"/>
 						<line number="41" hits="1"/>
 						<line number="42" hits="1"/>
-						<line number="43" hits="1"/>
-						<line number="44" hits="1"/>
-						<line number="47" hits="1"/>
-						<line number="48" hits="1"/>
-						<line number="49" hits="1"/>
-						<line number="50" hits="1"/>
-						<line number="51" hits="1"/>
-						<line number="54" hits="1"/>
-						<line number="55" hits="1"/>
-						<line number="56" hits="1"/>
-						<line number="57" hits="1"/>
-						<line number="58" hits="1"/>
-						<line number="59" hits="1"/>
-						<line number="60" hits="1"/>
-						<line number="61" hits="1"/>
-						<line number="63" hits="1"/>
 					</lines>
 				</class>
+				<class name="exceptions.py" filename="video_understanding/utils/exceptions.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines>
+						<line number="7" hits="1"/>
+						<line number="12" hits="1"/>
+						<line number="17" hits="1"/>
+						<line number="22" hits="1"/>
+						<line number="27" hits="1"/>
+						<line number="32" hits="1"/>
+						<line number="37" hits="1"/>
+						<line number="42" hits="1"/>
+					</lines>
+				</class>
+				<class name="retry.py" filename="video_understanding/utils/retry.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+			</classes>
+		</package>
+		<package name="video_understanding.video" line-rate="0" branch-rate="0" complexity="0">
+			<classes>
+				<class name="metadata.py" filename="video_understanding/video/metadata.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+				<class name="processor.py" filename="video_understanding/video/processor.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+				<class name="status.py" filename="video_understanding/video/status.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
+				<class name="upload.py" filename="video_understanding/video/upload.py" complexity="0" line-rate="0" branch-rate="0">
+					<methods/>
+					<lines>
+						<line number="3" hits="0"/>
+						<line number="4" hits="0"/>
+						<line number="5" hits="0"/>
+						<line number="6" hits="0"/>
+						<line number="7" hits="0"/>
+						<line number="9" hits="0"/>
+						<line number="10" hits="0"/>
+						<line number="11" hits="0"/>
+						<line number="14" hits="0"/>
+						<line number="17" hits="0"/>
+						<line number="19" hits="0"/>
+						<line number="21" hits="0"/>
+						<line number="23" hits="0"/>
+						<line number="26" hits="0"/>
+						<line number="29" hits="0"/>
+						<line number="31" hits="0"/>
+						<line number="32" hits="0"/>
+						<line number="34" hits="0"/>
+						<line number="46" hits="0"/>
+						<line number="47" hits="0"/>
+						<line number="48" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="49,50"/>
+						<line number="49" hits="0"/>
+						<line number="50" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="51,52"/>
+						<line number="51" hits="0"/>
+						<line number="52" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="53,54"/>
+						<line number="53" hits="0"/>
+						<line number="54" hits="0"/>
+						<line number="55" hits="0"/>
+						<line number="56" hits="0"/>
+						<line number="58" hits="0"/>
+						<line number="70" hits="0"/>
+						<line number="71" hits="0"/>
+						<line number="72" hits="0"/>
+						<line number="73" hits="0"/>
+						<line number="76" hits="0"/>
+						<line number="77" hits="0"/>
+						<line number="79" hits="0"/>
+						<line number="83" hits="0"/>
+						<line number="84" hits="0"/>
+						<line number="87" hits="0"/>
+						<line number="151" hits="0"/>
+						<line number="160" hits="0"/>
+						<line number="161" hits="0"/>
+						<line number="162" hits="0"/>
+						<line number="170" hits="0"/>
+						<line number="190" hits="0"/>
+						<line number="191" hits="0"/>
+						<line number="193" hits="0"/>
+						<line number="195" hits="0"/>
+						<line number="198" hits="0"/>
+						<line number="199" hits="0"/>
+						<line number="211" hits="0"/>
+						<line number="213" hits="0"/>
+						<line number="215" hits="0"/>
+						<line number="217" hits="0"/>
+						<line number="218" hits="0"/>
+						<line number="231" hits="0"/>
+						<line number="234" hits="0"/>
+						<line number="236" hits="0"/>
+						<line number="244" hits="0"/>
+						<line number="245" hits="0"/>
+						<line number="246" hits="0"/>
+						<line number="248" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="249,251"/>
+						<line number="249" hits="0"/>
+						<line number="251" hits="0"/>
+						<line number="253" hits="0"/>
+						<line number="259" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="260,261"/>
+						<line number="260" hits="0"/>
+						<line number="261" hits="0"/>
+						<line number="263" hits="0"/>
+						<line number="269" hits="0" branch="true" condition-coverage="0% (0/2)" missing-branches="270,271"/>
+						<line number="270" hits="0"/>
+						<line number="271" hits="0"/>
+						<line number="273" hits="0"/>
+						<line number="287" hits="0"/>
+						<line number="288" hits="0"/>
+						<line number="289" hits="0"/>
+						<line number="290" hits="0"/>
+						<line number="295" hits="0"/>
+					</lines>
+				</class>
+				<class name="validator.py" filename="video_understanding/video/validator.py" complexity="0" line-rate="1" branch-rate="1">
+					<methods/>
+					<lines/>
+				</class>
 			</classes>
 		</package>
 	</packages>
diff --git a/docs/guides/index.rst b/docs/guides/index.rst
index 7dc0d4a..2227e8a 100644
--- a/docs/guides/index.rst
+++ b/docs/guides/index.rst
@@ -10,6 +10,7 @@ This section contains detailed guides for using the Video Understanding AI syste
    quickstart
    video-upload
    video-processing
+   api-integration
    error-handling
    configuration
    caching
diff --git a/requirements-test.txt b/requirements-test.txt
index cb866ed..081d417 100644
--- a/requirements-test.txt
+++ b/requirements-test.txt
@@ -24,7 +24,7 @@ ffmpeg-python==0.2.0
 # AI Models (Test Versions)
 openai==1.12.0
 google-ai-generativelanguage==0.4.0
-twelve-labs-python==0.3.0
+twelvelabs==0.4.4  # Using latest version for API v1.3 compatibility
 
 # Vector Storage
 numpy==1.26.3
diff --git a/requirements.txt b/requirements.txt
index 6495faa..2727bd9 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,6 +1,12 @@
+# Version Requirements
+# Python: 3.8 (min), 3.10 (recommended) - Some new APIs require 3.8+
+# pip: 21.0 (min), 23.0+ (recommended) - For dependency resolution
+# ffmpeg: 4.4 (min), 5.1+ (recommended) - Required for video/audio processing
+# CUDA: 11.7 (min), 12.0+ (recommended) - Optional: For GPU acceleration with PyTorch
+# Node.js: 16.0 (min), 18.0+ (recommended) - For frontend components
+
 # Core dependencies
 numpy>=1.24.3
-faiss-cpu>=1.7.4  # For vector storage and similarity search
 python-dotenv>=1.0.0  # For environment variable management
 pydantic>=2.0.0  # For data validation
 loguru>=0.7.0  # For structured logging
@@ -15,23 +21,32 @@ ultralytics>=8.0.20  # For object detection with YOLOv8
 # Video processing
 opencv-python>=4.7.0.72  # For video frame processing
 moviepy>=1.0.3  # For video manipulation
-pytesseract>=0.3.10  # For OCR
-easyocr>=1.7.1  # For multilingual OCR
+ffmpeg-python>=0.2.0  # For video processing and audio extraction
+
+# OCR (Optical Character Recognition)
+# pytesseract and easyocr to be replaced by Document AI
+google-cloud-documentai>=2.24.0  # Google Document AI client library
+google-cloud-storage>=2.8.0  # For handling document storage with Google Cloud
 
 # Audio processing
-whisper>=20230918  # For speech recognition with OpenAI Whisper
+openai-whisper>=20230314  # For speech recognition with OpenAI Whisper
 librosa>=0.10.0  # For audio processing
 
+# Vector Storage
+pinecone-client>=2.2.1  # For vector database storage
+faiss-cpu>=1.7.4  # For vector storage and similarity search (hybrid approach)
+
+# API integrations
+twelvelabs-client>=1.0.0  # Client for Twelve Labs Scene Detection and NL Querying
+google-generativeai>=0.4.0  # Google Generative AI
+
 # Storage and caching
 redis>=4.5.4  # For caching
 sqlalchemy>=2.0.0  # For database operations
-pinecone>=2.2.4  # For vector database storage
+alembic>=1.13.1  # For database migrations
 
-# API integrations
-twelvelabs>=0.2.0  # Client for Twelve Labs Marengo/Pegasus API
-google-cloud-documentai>=2.24.0  # Google Document AI client library
-google-cloud-storage>=2.8.0  # For handling document storage with Google Cloud
-google-generativeai>=0.4.0  # Google Generative AI
+# AWS integration
+boto3>=1.26.85  # For AWS integration (S3, Lambda, MediaConvert)
 
 # API and web
 fastapi>=0.110.0  # For API endpoints
@@ -39,19 +54,24 @@ uvicorn>=0.28.0  # For ASGI server
 httpx>=0.24.0  # For HTTP client
 
 # Testing
-pytest>=7.4.0
-pytest-cov>=4.1.0
-pytest-asyncio>=0.21.0
+pytest>=7.4.0  # Test framework
+pytest-cov>=4.1.0  # Test coverage
+pytest-asyncio>=0.21.0  # Async test support
+pytest-xdist>=3.5.0  # For parallel test execution
+pytest-timeout>=2.2.0  # For test timeouts
+pytest-benchmark>=4.0.0  # For performance benchmarking
+pytest-mock>=3.12.0  # For mocking in tests
+responses>=0.23.1  # For API mocking
+moto>=4.1.2  # AWS mocking
+locust>=2.15.1  # For performance testing
+docker>=6.0.1  # For container-based integration tests
 
 # Development
-black>=23.7.0
-isort>=5.12.0
-mypy>=1.4.0
-pylint>=2.17.0
-flake8>=7.0.0
-
-# Database
-alembic>=1.13.1
+black>=23.7.0  # Code formatting
+isort>=5.12.0  # Import sorting
+mypy>=1.4.0  # Type checking
+pylint>=2.17.0  # Linting
+flake8>=7.0.0  # Additional linting
 
 # Documentation
 sphinx>=7.2.6
@@ -67,17 +87,7 @@ python-magic>=0.4.27
 python-jose[cryptography]>=3.3.0
 passlib[bcrypt]>=1.7.4
 psutil>=5.9.8  # System resource monitoring
-
-# Video Processing
-ffmpeg-python>=0.2.0  # For video processing and audio extraction
-
-# Added backoff package
-backoff>=2.2.1
-
-# Added networking dependencies
-aiohttp>=3.8.0
-requests>=2.31.0
-typing-extensions>=4.5.0
-
-# AWS integration
-boto3>=1.26.85  # For AWS integration (S3, Lambda)
+backoff>=2.2.1  # For retry mechanisms
+aiohttp>=3.8.0  # Async HTTP client
+requests>=2.31.0  # HTTP client
+typing-extensions>=4.5.0  # Type hinting extensions
diff --git a/src/video_understanding/__init__.py b/src/video_understanding/__init__.py
index 931bffd..e7c1cbd 100644
--- a/src/video_understanding/__init__.py
+++ b/src/video_understanding/__init__.py
@@ -43,7 +43,7 @@ from .core.metrics import (
 # Import AI models
 from .ai.models.base import BaseModel
 from .ai.models.gemini import GeminiModel
-from .ai.models.gpt4v import GPT4VisionModel
+from .ai.models.gpt4v import GPT4VModel
 from .ai.models.twelve_labs import TwelveLabsModel
 from .ai.models.whisper import WhisperModel
 from .ai.pipeline import VideoPipeline
@@ -51,6 +51,7 @@ from .ai.pipeline import VideoPipeline
 # Import storage components
 from .storage.metadata import MetadataStore
 from .storage.cache import CacheStore
+from .storage.vector import VectorStorage, VectorStorageConfig
 
 # Define public API
 __all__ = [
@@ -81,7 +82,7 @@ __all__ = [
     # AI models
     "BaseModel",
     "GeminiModel",
-    "GPT4VisionModel",
+    "GPT4VModel",
     "TwelveLabsModel",
     "WhisperModel",
     "VideoPipeline",
@@ -89,4 +90,6 @@ __all__ = [
     # Storage
     "MetadataStore",
     "CacheStore",
+    "VectorStorage",
+    "VectorStorageConfig",
 ]
diff --git a/src/video_understanding/ai/__init__.py b/src/video_understanding/ai/__init__.py
index 80be7e3..eda2318 100644
--- a/src/video_understanding/ai/__init__.py
+++ b/src/video_understanding/ai/__init__.py
@@ -4,4 +4,22 @@ This module contains model implementations and pipeline orchestration.
 
 __version__ = "0.1.0"
 
-"""AI models and pipelines for Video Understanding AI."""
+from .exceptions import ModelError, ValidationError, APIError, RateLimitError
+from .models import BaseModel, GPT4VModel, GeminiModel, WhisperModel, TwelveLabsModel
+from .pipeline import ModelPipeline
+
+__all__ = [
+    # Exceptions
+    "ModelError",
+    "ValidationError",
+    "APIError",
+    "RateLimitError",
+    # Models
+    "BaseModel",
+    "GPT4VModel",
+    "GeminiModel",
+    "WhisperModel",
+    "TwelveLabsModel",
+    # Pipeline
+    "ModelPipeline",
+]
diff --git a/src/video_understanding/ai/exceptions.py b/src/video_understanding/ai/exceptions.py
index 1bfe074..9657915 100644
--- a/src/video_understanding/ai/exceptions.py
+++ b/src/video_understanding/ai/exceptions.py
@@ -1,49 +1,31 @@
 """Base exceptions for AI models."""
 
-
-class ModelError(Exception):
-    """Base exception for model-related errors."""
-
-    pass
-
-
-class ValidationError(ModelError):
-    """Exception raised when model input validation fails."""
-
-    pass
-
-
-class APIError(ModelError):
-    """Exception raised when API request fails."""
-
-    pass
-
-
-class RateLimitError(APIError):
-    """Exception raised when API rate limit is exceeded."""
-
-    pass
-
-
-class ResourceError(ModelError):
-    """Exception raised when resource access fails."""
-
-    pass
-
-
-class TaskError(ModelError):
-    """Exception raised when task processing fails."""
-
-    pass
-
-
-class ProcessingError(ModelError):
-    """Exception raised when model processing fails."""
-
-    pass
-
-
-class ConfigurationError(ModelError):
-    """Exception raised when model configuration is invalid."""
-
-    pass
+from ..core.exceptions import (
+    ModelError,
+    ValidationError,
+    APIError,
+    RateLimitError,
+    ResourceError,
+    ProcessingError,
+    ConfigurationError,
+    TaskError,
+)
+
+
+class SceneDetectionError(ModelError):
+    """Exception raised when scene detection fails."""
+
+    pass
+
+
+__all__ = [
+    "ModelError",
+    "ValidationError",
+    "APIError",
+    "RateLimitError",
+    "ResourceError",
+    "ProcessingError",
+    "ConfigurationError",
+    "TaskError",
+    "SceneDetectionError",
+]
diff --git a/src/video_understanding/ai/exceptions/__init__.py b/src/video_understanding/ai/exceptions/__init__.py
index a191296..253b9a7 100644
--- a/src/video_understanding/ai/exceptions/__init__.py
+++ b/src/video_understanding/ai/exceptions/__init__.py
@@ -1,37 +1,54 @@
-"""Exceptions for AI models."""
+"""AI model exceptions."""
+
+from ...core.exceptions import ModelError
 
-class ModelError(Exception):
-    """Base exception for model-related errors."""
-    pass
 
 class ValidationError(ModelError):
     """Exception raised when model input validation fails."""
     pass
 
+
 class APIError(ModelError):
     """Exception raised when API request fails."""
     pass
 
+
 class RateLimitError(APIError):
     """Exception raised when API rate limit is exceeded."""
     pass
 
+
 class ResourceError(ModelError):
     """Exception raised when resource access fails."""
     pass
 
+
 class TaskError(ModelError):
     """Exception raised when task processing fails."""
     pass
 
+
 class ProcessingError(ModelError):
     """Exception raised when model processing fails."""
     pass
 
+
 class ConfigurationError(ModelError):
     """Exception raised when model configuration is invalid."""
     pass
 
+
+__all__ = [
+    'ModelError',
+    'ValidationError',
+    'APIError',
+    'RateLimitError',
+    'ResourceError',
+    'ProcessingError',
+    'ConfigurationError',
+    'TaskError',
+]
+
 # Import twelve_labs exceptions
 from .twelve_labs import (
     TwelveLabsError,
diff --git a/src/video_understanding/ai/exceptions/twelve_labs.py b/src/video_understanding/ai/exceptions/twelve_labs.py
index 186f939..43aada8 100644
--- a/src/video_understanding/ai/exceptions/twelve_labs.py
+++ b/src/video_understanding/ai/exceptions/twelve_labs.py
@@ -1,27 +1,53 @@
-"""Custom exceptions for Twelve Labs integration."""
+"""Twelve Labs API exceptions."""
 
-from video_understanding.core.exceptions import ModelError
+from ...core.exceptions import ModelError
 
 
 class TwelveLabsError(ModelError):
-    """Base exception for Twelve Labs errors."""
+    """Base exception for Twelve Labs API errors."""
+
+    def __init__(self, message: str, cause: Exception | None = None, details: dict | None = None):
+        """Initialize the error.
+
+        Args:
+            message: The error message
+            cause: The underlying cause of this error
+            details: Additional error details
+        """
+        super().__init__(message, cause)
+        self.details = details or {}
 
 
 class RateLimitError(TwelveLabsError):
-    """Rate limit exceeded."""
+    """Exception raised when API rate limits are exceeded."""
+    pass
 
 
 class TaskError(TwelveLabsError):
-    """Task processing error."""
+    """Exception raised when a task fails or is invalid."""
+    pass
 
 
 class ValidationError(TwelveLabsError):
-    """Input validation error."""
+    """Exception raised when input validation fails."""
+    pass
 
 
 class APIError(TwelveLabsError):
-    """API communication error."""
+    """Exception raised when API requests fail."""
+    pass
 
 
 class ResourceError(TwelveLabsError):
-    """Resource management error."""
+    """Exception raised when resource access fails."""
+    pass
+
+
+__all__ = [
+    'TwelveLabsError',
+    'RateLimitError',
+    'TaskError',
+    'ValidationError',
+    'APIError',
+    'ResourceError',
+]
diff --git a/src/video_understanding/ai/models/__init__.py b/src/video_understanding/ai/models/__init__.py
index a0bd40b..f780c21 100644
--- a/src/video_understanding/ai/models/__init__.py
+++ b/src/video_understanding/ai/models/__init__.py
@@ -1,22 +1,32 @@
-"""AI model initialization and management."""
+"""AI model implementations."""
 
-from typing import Any
+import json
+from pathlib import Path
+from typing import Any, Dict, Optional, Type
 
 from .base import BaseModel
 from .config import get_model_config
 from .gemini import GeminiModel
-from .gpt4v import GPT4VisionModel
+from .gpt4v import GPT4VModel
 from .twelve_labs import TwelveLabsModel
 from .whisper import WhisperModel
 
-# Model registry
-MODEL_REGISTRY: dict[str, type[BaseModel]] = {
+# Model registry for dynamic loading
+MODEL_REGISTRY: Dict[str, Type[BaseModel]] = {
     "twelve_labs": TwelveLabsModel,
-    "gpt4v": GPT4VisionModel,
+    "gpt4v": GPT4VModel,
     "gemini": GeminiModel,
     "whisper": WhisperModel,
 }
 
+__all__ = [
+    "BaseModel",
+    "GPT4VModel",
+    "GeminiModel",
+    "WhisperModel",
+    "TwelveLabsModel"
+]
+
 
 def initialize_models() -> dict[str, BaseModel]:
     """Initialize all registered models.
@@ -55,27 +65,15 @@ def load_model(model_name: str, config: dict[str, Any] | None = None) -> BaseMod
     return model_cls(**config)
 
 
-def get_model_config(model_name: str) -> dict[str, Any]:
-    """Get configuration for a specific model.
-
-    This function loads the model's configuration from the config file.
-    If no model-specific configuration exists, returns default values.
+def get_model_config(model_name: str) -> Dict[str, Any]:
+    """Get configuration for a model.
 
     Args:
         model_name: Name of the model
 
     Returns:
-        Configuration dictionary for the model
-
-    Raises:
-        ValueError: If model_name is not found in registry
+        Model configuration dictionary
     """
-    if model_name not in MODEL_REGISTRY:
-        raise ValueError(f"Model {model_name} not found in registry")
-
-    config_path = Path(__file__).parent / "config" / f"{model_name}.json"
-
-    # Default configurations
     default_configs = {
         "twelve_labs": {"api_key": "", "max_retries": 3, "timeout": 300},
         "gpt4v": {"api_key": "", "model": "gpt-4-vision-preview", "max_tokens": 1000},
@@ -83,6 +81,7 @@ def get_model_config(model_name: str) -> dict[str, Any]:
         "whisper": {"api_key": "", "model": "whisper-v3", "language": "en"},
     }
 
+    config_path = Path("config/models.json")
     try:
         if config_path.exists():
             with open(config_path) as f:
diff --git a/src/video_understanding/ai/models/base.py b/src/video_understanding/ai/models/base.py
index 5b88bf7..0c8323b 100644
--- a/src/video_understanding/ai/models/base.py
+++ b/src/video_understanding/ai/models/base.py
@@ -8,7 +8,7 @@ implementations.
 import time
 from abc import ABC, abstractmethod
 from collections.abc import Callable
-from typing import Any, TypeVar
+from typing import Any, TypeVar, Dict, Optional
 
 from ..exceptions import ModelError
 
@@ -26,8 +26,16 @@ class BaseModel(ABC):
     - Error handling
     """
 
+    def __init__(self, config: Optional[Dict[str, Any]] = None):
+        """Initialize base model.
+
+        Args:
+            config: Optional configuration dictionary
+        """
+        self.config = config or {}
+
     @abstractmethod
-    def validate(self, input_data: dict[str, Any]) -> bool:
+    def validate(self, input_data: Dict[str, Any]) -> bool:
         """Validate input data before processing.
 
         Args:
@@ -42,7 +50,7 @@ class BaseModel(ABC):
         pass
 
     @abstractmethod
-    async def process(self, input_data: dict[str, Any]) -> dict[str, Any]:
+    async def process(self, input_data: Dict[str, Any]) -> Dict[str, Any]:
         """Process input data through the model.
 
         This method must be implemented as a coroutine to support
diff --git a/src/video_understanding/ai/models/gpt4v.py b/src/video_understanding/ai/models/gpt4v.py
index 1d9bc1d..48b782b 100644
--- a/src/video_understanding/ai/models/gpt4v.py
+++ b/src/video_understanding/ai/models/gpt4v.py
@@ -1,103 +1,143 @@
-"""GPT-4 Vision model implementation."""
-
-import base64
-import logging
-from pathlib import Path
-from typing import Any
+"""GPT-4V model implementation for image analysis."""
 
+import asyncio
+from typing import Any, Dict, Optional
 import aiohttp
 
-from ..exceptions import ModelError
 from .base import BaseModel
+from ..exceptions import ValidationError, APIError, ConfigurationError
 
-logger = logging.getLogger(__name__)
-
+class GPT4VConfig:
+    """Configuration for GPT-4V model."""
 
-class GPT4VisionModel(BaseModel):
-    """GPT-4 Vision model for analyzing video frames."""
-
-    def __init__(self, api_key: str):
-        """Initialize the model.
+    def __init__(
+        self,
+        api_key: str,
+        api_base: str = "https://api.openai.com/v1",
+        model: str = "gpt-4-vision-preview",
+        max_tokens: int = 300,
+        temperature: float = 0.7,
+    ):
+        """Initialize GPT-4V configuration.
 
         Args:
             api_key: OpenAI API key
+            api_base: Base URL for API
+            model: Model identifier
+            max_tokens: Maximum tokens in response
+            temperature: Sampling temperature
         """
         self.api_key = api_key
-        self._session: aiohttp.ClientSession | None = None
+        self.api_base = api_base
+        self.model = model
+        self.max_tokens = max_tokens
+        self.temperature = temperature
 
-    async def _ensure_session(self) -> aiohttp.ClientSession:
-        """Ensure an active session exists.
+class GPT4VModel(BaseModel):
+    """GPT-4V model for image analysis."""
 
-        Returns:
-            Active aiohttp ClientSession
+    def __init__(self, config: Optional[Dict[str, Any]] = None):
+        """Initialize GPT-4V model.
+
+        Args:
+            config: Model configuration
+
+        Raises:
+            ConfigurationError: If configuration is invalid
         """
-        if self._session is None:
-            self._session = aiohttp.ClientSession(
-                headers={"Authorization": f"Bearer {self.api_key}"}
-            )
-        return self._session
+        super().__init__(config)
+        if not config or "api_key" not in config:
+            raise ConfigurationError("API key required")
+
+        self.config = GPT4VConfig(**config)
+        self.session: Optional[aiohttp.ClientSession] = None
 
-    def validate(self, input_data: dict[str, Any]) -> bool:
+    def validate(self, input_data: Dict[str, Any]) -> bool:
         """Validate input data.
 
         Args:
-            input_data: Dictionary containing input data
+            input_data: Dictionary containing:
+                - image_url: URL or base64 image
+                - prompt: Analysis prompt
 
         Returns:
-            True if valid, False otherwise
+            bool: True if valid
 
         Raises:
-            ModelError: If validation fails
+            ValidationError: If validation fails
         """
-        if "image_path" not in input_data:
-            raise ModelError("Missing image_path in input data")
+        if not isinstance(input_data, dict):
+            raise ValidationError("Input must be dictionary")
+
+        if "image_url" not in input_data:
+            raise ValidationError("image_url required")
+
+        if "prompt" not in input_data:
+            raise ValidationError("prompt required")
 
-        image_path = Path(input_data["image_path"])
-        if not image_path.exists():
-            raise ModelError(f"Image file not found: {image_path}")
+        if not isinstance(input_data["prompt"], str):
+            raise ValidationError("prompt must be string")
 
         return True
 
-    async def process(self, input_data: dict[str, Any]) -> dict[str, Any]:
-        """Process an image using GPT-4 Vision.
+    async def process(self, input_data: Dict[str, Any]) -> Dict[str, Any]:
+        """Process image through GPT-4V.
 
         Args:
-            input_data: Dictionary containing input data
+            input_data: Dictionary containing image and prompt
 
         Returns:
             Dictionary containing analysis results
 
         Raises:
-            ModelError: If processing fails
+            APIError: If API request fails
         """
         self.validate(input_data)
 
+        if not self.session:
+            self.session = aiohttp.ClientSession(
+                headers={"Authorization": f"Bearer {self.config.api_key}"}
+            )
+
         try:
-            session = await self._ensure_session()
-            image_path = Path(input_data["image_path"])
-            with open(image_path, "rb") as f:
-                image_data = base64.b64encode(f.read()).decode("utf-8")
-
-            # TODO: Implement actual API call to GPT-4V using session
-            # This is a placeholder for the actual implementation
-            return {
-                "description": "Placeholder for GPT-4V analysis",
-                "objects": [],
-                "text": [],
-                "actions": [],
-            }
-
-        except Exception as e:
-            raise ModelError(f"Failed to process image: {e!s}")
+            async with self.session.post(
+                f"{self.config.api_base}/chat/completions",
+                json={
+                    "model": self.config.model,
+                    "messages": [
+                        {
+                            "role": "user",
+                            "content": [
+                                {
+                                    "type": "text",
+                                    "text": input_data["prompt"]
+                                },
+                                {
+                                    "type": "image_url",
+                                    "image_url": input_data["image_url"]
+                                }
+                            ]
+                        }
+                    ],
+                    "max_tokens": self.config.max_tokens,
+                    "temperature": self.config.temperature
+                }
+            ) as response:
+                if response.status != 200:
+                    raise APIError(f"API request failed: {response.status}")
+
+                result = await response.json()
+                return {
+                    "analysis": result["choices"][0]["message"]["content"],
+                    "model": self.config.model,
+                    "usage": result.get("usage", {})
+                }
+
+        except aiohttp.ClientError as e:
+            raise APIError(f"API request failed: {str(e)}")
 
     async def close(self) -> None:
-        """Clean up model resources.
-
-        This implementation:
-        - Closes any active API sessions
-        - Cleans up temporary files if any
-        - Resets internal state
-        """
-        if self._session is not None:
-            await self._session.close()
-            self._session = None
+        """Clean up resources."""
+        if self.session:
+            await self.session.close()
+            self.session = None
diff --git a/src/video_understanding/ai/scene/__init__.py b/src/video_understanding/ai/scene/__init__.py
index e69de29..b19cb11 100644
--- a/src/video_understanding/ai/scene/__init__.py
+++ b/src/video_understanding/ai/scene/__init__.py
@@ -0,0 +1,12 @@
+"""Scene detection module for Video Understanding AI."""
+
+from .base import BaseSceneDetector
+from .twelve_labs import TwelveLabsSceneDetection
+from .service import SceneDetectionService, get_scene_detector
+
+__all__ = [
+    "BaseSceneDetector",
+    "TwelveLabsSceneDetection",
+    "SceneDetectionService",
+    "get_scene_detector",
+]
diff --git a/src/video_understanding/core/__init__.py b/src/video_understanding/core/__init__.py
index 2e4eb74..e59ccd9 100644
--- a/src/video_understanding/core/__init__.py
+++ b/src/video_understanding/core/__init__.py
@@ -67,3 +67,18 @@ from .exceptions import (
     ResourceExceededError,
     ConcurrencyLimitError,
 )
+
+"""Core functionality for video processing and analysis."""
+
+from .config import ProcessingConfig, VideoConfig
+from .exceptions import VideoUnderstandingError
+from .processing import VideoProcessor
+from .upload import VideoUploader
+
+__all__ = [
+    "ProcessingConfig",
+    "VideoConfig",
+    "VideoProcessor",
+    "VideoUnderstandingError",
+    "VideoUploader",
+]
diff --git a/src/video_understanding/core/exceptions.py b/src/video_understanding/core/exceptions.py
index 21ed06b..ed54aed 100644
--- a/src/video_understanding/core/exceptions.py
+++ b/src/video_understanding/core/exceptions.py
@@ -3,6 +3,23 @@
 This module defines all the custom exceptions used throughout the project.
 Each exception class is properly documented and referenced.
 
+Example:
+    Basic exception handling:
+
+    >>> try:
+    ...     process_video(file_path)
+    ... except VideoUnderstandingError as e:
+    ...     logger.error(f"Processing failed: {e}")
+    ...     if e.__cause__:
+    ...         logger.debug(f"Caused by: {e.__cause__}")
+
+    Converting standard exceptions:
+
+    >>> try:
+    ...     result = api_call()
+    ... except Exception as e:
+    ...     raise handle_error(e)
+
 :no-index:
 """
 
@@ -10,6 +27,19 @@ Each exception class is properly documented and referenced.
 class VideoUnderstandingError(Exception):
     """Base exception class for all Video Understanding AI errors.
 
+    This is the root exception class for all custom exceptions in the project.
+    It provides support for error cause tracking and consistent error handling.
+
+    Example:
+        >>> try:
+        ...     raise ValueError("Invalid input")
+        ... except ValueError as e:
+        ...     raise VideoUnderstandingError("Processing failed", cause=e)
+
+    Args:
+        message: The error message
+        cause: The original exception that caused this error
+
     :no-index:
     """
 
@@ -72,10 +102,33 @@ class APIError(VideoUnderstandingError):
 class ModelError(VideoUnderstandingError):
     """Raised when model operations fail.
 
+    This exception serves as the base class for all model-related errors.
+    It properly handles error causes and provides a consistent interface
+    for error handling across different model implementations.
+
+    Example:
+        >>> try:
+        ...     model.predict(input_data)
+        ... except ValueError as e:
+        ...     raise ModelError("Prediction failed", cause=e)
+
+    Args:
+        message: The error message
+        cause: The original exception that caused this error
+
     :no-index:
     """
 
-    pass
+    def __init__(self, message: str, cause: BaseException | None = None):
+        """Initialize with optional cause.
+
+        Args:
+            message: The error message
+            cause: The original exception that caused this error
+        """
+        super().__init__(message, cause)
+        if cause:
+            self.__cause__ = cause
 
 
 class ResourceError(VideoUnderstandingError):
@@ -135,10 +188,29 @@ class VideoFormatError(ProcessingError):
 class VideoProcessingError(ProcessingError):
     """Raised when video processing fails.
 
+    Args:
+        message: The error message
+        cause: The original exception that caused this error
+        video_path: The path to the video file being processed
+
     :no-index:
     """
 
-    pass
+    def __init__(
+        self,
+        message: str,
+        cause: BaseException | None = None,
+        video_path: str | None = None,
+    ):
+        """Initialize with optional cause and video path.
+
+        Args:
+            message: The error message
+            cause: The original exception that caused this error
+            video_path: The path to the video file being processed
+        """
+        super().__init__(message, cause)
+        self.video_path = video_path
 
 
 class AudioProcessingError(ProcessingError):
@@ -312,11 +384,31 @@ class TaskError(TwelveLabsError):
 
 class ResourceExceededError(VideoProcessingError):
     """Exception raised when resource limits are exceeded."""
+
     pass
 
 
 class ConcurrencyLimitError(VideoProcessingError):
     """Exception raised when concurrent processing limit is exceeded."""
+
+    pass
+
+
+class SecurityError(VideoUnderstandingError):
+    """Exception raised for security-related errors."""
+
+    pass
+
+
+class IntegrityError(VideoUnderstandingError):
+    """Exception raised for file integrity errors."""
+
+    pass
+
+
+class UploadError(VideoUnderstandingError):
+    """Exception raised for upload-related errors."""
+
     pass
 
 
@@ -349,11 +441,27 @@ ERROR_MAP: dict[type[BaseException], type[VideoUnderstandingError]] = {
 def handle_error(error: BaseException) -> VideoUnderstandingError:
     """Convert standard Python exceptions to custom exceptions.
 
+    This function maps standard Python exceptions to our custom exception hierarchy.
+    It preserves the error cause chain and provides consistent error handling.
+
+    Example:
+        >>> try:
+        ...     process_data()
+        ... except Exception as e:
+        ...     raise handle_error(e)
+
     Args:
         error: The original exception to convert
 
     Returns:
         A custom VideoUnderstandingError instance
+
+    Example mappings:
+        - ValueError -> ValidationError
+        - FileNotFoundError -> ResourceNotFoundError
+        - PermissionError -> AuthenticationError
+        - TimeoutError -> CustomTimeoutError
+        - MemoryError -> CustomMemoryError
     """
     if isinstance(error, VideoUnderstandingError):
         return error
diff --git a/src/video_understanding/core/metrics.py b/src/video_understanding/core/metrics.py
index 2088ed3..a825315 100644
--- a/src/video_understanding/core/metrics.py
+++ b/src/video_understanding/core/metrics.py
@@ -127,8 +127,28 @@ class MetricsTracker:
         """Initialize metrics tracker."""
         self.measurements: dict[str, list[MetricMeasurement]] = {}
         self.success_criteria = SuccessCriteria()
+        self.active_processes = 0
         logger.info("Initialized metrics tracker")
 
+    def get_active_count(self) -> int:
+        """Get the current number of active processing operations.
+
+        Returns:
+            int: Number of active processes
+        """
+        return self.active_processes
+
+    def increment_active_count(self) -> None:
+        """Increment the count of active processing operations."""
+        self.active_processes += 1
+        logger.debug("Incremented active process count to %d", self.active_processes)
+
+    def decrement_active_count(self) -> None:
+        """Decrement the count of active processing operations."""
+        if self.active_processes > 0:
+            self.active_processes -= 1
+        logger.debug("Decremented active process count to %d", self.active_processes)
+
     def record_metric(
         self, metric_name: str, value: float, context: dict[str, Any] | None = None
     ) -> None:
diff --git a/src/video_understanding/core/processing/video.py b/src/video_understanding/core/processing/video.py
index 5edf7c9..33ed227 100644
--- a/src/video_understanding/core/processing/video.py
+++ b/src/video_understanding/core/processing/video.py
@@ -13,8 +13,15 @@ from typing import Any
 import cv2
 import numpy as np
 from PIL import Image
-
-from ..exceptions import ValidationError, VideoProcessingError
+import os
+import psutil
+
+from ..exceptions import (
+    ValidationError,
+    VideoProcessingError,
+    ResourceExceededError,
+    ConcurrencyLimitError,
+)
 from ..metrics import MetricsTracker, PerformanceTimer
 
 
@@ -28,6 +35,8 @@ class VideoProcessor:
         metrics_tracker: Instance of MetricsTracker for monitoring performance
         supported_formats: List of supported video formats
         max_file_size: Maximum supported file size in bytes
+        memory_limit: Maximum allowed memory usage in bytes
+        concurrent_limit: Maximum allowed number of concurrent processing jobs
     """
 
     def __init__(self, metrics_tracker: MetricsTracker | None = None):
@@ -39,6 +48,35 @@ class VideoProcessor:
         self.metrics_tracker = metrics_tracker or MetricsTracker()
         self.supported_formats = [".mp4", ".avi", ".mov"]
         self.max_file_size = 2 * 1024 * 1024 * 1024  # 2GB
+        self.memory_limit = 4 * 1024 * 1024 * 1024  # 4GB
+        self.concurrent_limit = 3  # Maximum number of concurrent processing jobs
+
+    def check_resources(self) -> bool:
+        """Check if system has enough resources for video processing.
+
+        Returns:
+            bool: True if sufficient resources available
+
+        Raises:
+            ResourceExceededError: If resources are not sufficient
+            ConcurrencyLimitError: If concurrent processing limit is exceeded
+        """
+        # Check available memory
+        mem = psutil.virtual_memory()
+        if mem.available < self.memory_limit:
+            raise ResourceExceededError(
+                f"Insufficient memory: {mem.available} bytes available, {self.memory_limit} required"
+            )
+
+        # Check concurrent processing limit
+        if self.metrics_tracker:
+            active_count = self.metrics_tracker.get_active_count()
+            if active_count >= self.concurrent_limit:
+                raise ConcurrencyLimitError(
+                    f"Concurrent processing limit exceeded: {active_count} active, {self.concurrent_limit} allowed"
+                )
+
+        return True
 
     def validate_video(self, video_path: str) -> bool:
         """Validate video file format and size.
@@ -83,6 +121,12 @@ class VideoProcessor:
             VideoProcessingError: If processing fails
         """
         try:
+            # Check if we have enough resources
+            self.check_resources()
+
+            # Increment active count
+            self.metrics_tracker.increment_active_count()
+
             with PerformanceTimer(self.metrics_tracker, "video_processing_time"):
                 # Validate input
                 self.validate_video(video_path)
@@ -104,8 +148,12 @@ class VideoProcessor:
 
         except Exception as e:
             raise VideoProcessingError(
-                f"Failed to process video: {e!s}", video_path=video_path
+                f"Failed to process video: {e!s}", cause=e, video_path=video_path
             ) from e
+        finally:
+            # Decrement active count
+            if hasattr(self, "metrics_tracker") and self.metrics_tracker:
+                self.metrics_tracker.decrement_active_count()
 
     def extract_frames(
         self, video_path: str, options: dict[str, Any] | None = None
diff --git a/src/video_understanding/core/upload/__init__.py b/src/video_understanding/core/upload/__init__.py
index e69de29..0e0c78b 100644
--- a/src/video_understanding/core/upload/__init__.py
+++ b/src/video_understanding/core/upload/__init__.py
@@ -0,0 +1,9 @@
+"""Video upload handling and processing."""
+
+from .processor import VideoUploader
+from .config import UploadConfig
+
+__all__ = [
+    "VideoUploader",
+    "UploadConfig"
+]
diff --git a/src/video_understanding/core/upload/config.py b/src/video_understanding/core/upload/config.py
index af8ad99..f4b1249 100644
--- a/src/video_understanding/core/upload/config.py
+++ b/src/video_understanding/core/upload/config.py
@@ -7,7 +7,7 @@ the video upload processing pipeline.
 from collections.abc import Callable
 from dataclasses import dataclass, field
 from pathlib import Path
-from typing import Any
+from typing import Any, List, Optional
 
 from video_understanding.core.exceptions import ConfigurationError
 from video_understanding.models.video import ProcessingStatus
@@ -227,3 +227,41 @@ class RetryConfig:
         """
         delay = self.retry_delay * (self.backoff_factor**attempt)
         return min(delay, self.max_delay)
+
+
+@dataclass
+class UploadConfig:
+    """Configuration for video upload processing."""
+
+    # File validation
+    max_file_size_mb: int = 2048  # 2GB
+    allowed_extensions: List[str] = field(default_factory=lambda: [".mp4", ".avi", ".mov"])
+
+    # Processing
+    detection_enabled: bool = True
+    ocr_enabled: bool = True
+    scene_detection_enabled: bool = True
+
+    # OCR settings
+    ocr_languages: List[str] = field(default_factory=lambda: ["eng"])
+    ocr_confidence_threshold: float = 0.7
+
+    # Scene detection
+    min_scene_duration: float = 2.0  # seconds
+    max_scenes: int = 500
+    scene_threshold: float = 30.0  # threshold for scene change detection
+
+    # Security
+    virus_scan_enabled: bool = True
+    content_validation_enabled: bool = True
+
+    # Processing paths
+    temp_dir: Optional[Path] = None
+    output_dir: Optional[Path] = None
+
+    def __post_init__(self):
+        """Convert string paths to Path objects if needed."""
+        if isinstance(self.temp_dir, str):
+            self.temp_dir = Path(self.temp_dir)
+        if isinstance(self.output_dir, str):
+            self.output_dir = Path(self.output_dir)
diff --git a/src/video_understanding/core/upload/context.py b/src/video_understanding/core/upload/context.py
index 712637c..0d8e095 100644
--- a/src/video_understanding/core/upload/context.py
+++ b/src/video_understanding/core/upload/context.py
@@ -10,6 +10,7 @@ from contextlib import contextmanager
 from datetime import datetime
 from pathlib import Path
 from typing import Dict, Generator, List, Optional, Any, TypeVar, Union
+import tempfile
 
 from video_understanding.utils.exceptions import ProcessingError
 from video_understanding.models.video import Video, ProcessingStatus
@@ -21,36 +22,64 @@ T = TypeVar('T')  # Generic type for resources
 
 
 class UploadContext:
-    """Context manager for upload operations.
+    """Manages context for video upload processing."""
 
-    This class manages the lifecycle of temporary files and resources during
-    upload processing, ensuring proper cleanup in both success and failure cases.
-
-    Example:
-        >>> with UploadContext(video) as context:
-        ...     temp_file = context.create_temp_file("video.mp4")
-        ...     process_file(temp_file)
-        >>> # All temporary files are cleaned up
-    """
-
-    def __init__(
-        self,
-        video: Video,
-        progress_tracker: Optional[ProgressTracker] = None,
-    ) -> None:
-        """Initialize the upload context.
+    def __init__(self, video: Union[Video, Path], progress_tracker: Optional[ProgressTracker] = None):
+        """Initialize upload context.
 
         Args:
-            video: Video being processed
-            progress_tracker: Optional progress tracker
+            video: Video object or path to uploaded video file
+            progress_tracker: Optional progress tracking
         """
-        self.video = video
+        self.video = video if isinstance(video, Video) else None
+        self.file_path = video.file_info.file_path if isinstance(video, Video) else video
         self.progress_tracker = progress_tracker
+        self.start_time = datetime.now()
+        self.scenes: List[Dict[str, Any]] = []
+        self.text_content: List[Dict[str, Any]] = []
+        self.metadata: Dict[str, Any] = {
+            "filename": video.file_info.filename if isinstance(video, Video) else self.file_path.name,
+            "size_bytes": video.file_info.file_size if isinstance(video, Video) else self.file_path.stat().st_size,
+            "upload_time": self.start_time.isoformat()
+        }
         self.temp_files: List[Path] = []
         self.temp_dirs: List[Path] = []
-        self._start_time = datetime.now()
         self._resources: Dict[str, Any] = {}
 
+    def add_scenes(self, scenes: List[Dict[str, Any]]) -> None:
+        """Add detected scenes to context.
+
+        Args:
+            scenes: List of scene information dictionaries
+        """
+        self.scenes.extend(scenes)
+        self.metadata["scene_count"] = len(self.scenes)
+
+    def add_text(self, text_content: List[Dict[str, Any]]) -> None:
+        """Add extracted text to context.
+
+        Args:
+            text_content: List of text extraction results
+        """
+        self.text_content.extend(text_content)
+        self.metadata["text_blocks"] = len(self.text_content)
+
+    def get_results(self) -> Dict[str, Any]:
+        """Get processing results.
+
+        Returns:
+            Dictionary containing all processing results
+        """
+        end_time = datetime.now()
+        processing_time = (end_time - self.start_time).total_seconds()
+
+        return {
+            "metadata": self.metadata,
+            "scenes": self.scenes,
+            "text_content": self.text_content,
+            "processing_time": processing_time
+        }
+
     def __enter__(self) -> 'UploadContext':
         """Enter the context.
 
@@ -72,14 +101,13 @@ class UploadContext:
         except Exception as e:
             logger.error(f"Failed to cleanup upload context: {e}")
 
-        if exc_type is not None:
+        if exc_type is not None and self.progress_tracker and self.video:
             # Log error and update progress on exception
-            if self.progress_tracker:
-                self.progress_tracker.mark_stage_error(
-                    self.video.processing.status,
-                    str(exc_val),
-                    error_type=exc_type.__name__,
-                )
+            self.progress_tracker.mark_stage_error(
+                self.video.processing.status,
+                str(exc_val),
+                error_type=exc_type.__name__,
+            )
 
     def track_temp_file(self, file_path: Path) -> None:
         """Track a temporary file for cleanup.
@@ -123,64 +151,30 @@ class UploadContext:
         self.temp_files.clear()
         self.temp_dirs.clear()
 
-    def create_temp_file(self, name: str, content: bytes = b"") -> Path:
+    def create_temp_file(self, suffix: str = "") -> Path:
         """Create a temporary file.
 
         Args:
-            name: Name for the temporary file
-            content: Optional initial content
+            suffix: Optional file suffix
 
         Returns:
-            Path to the created temporary file
-
-        Raises:
-            ProcessingError: If file creation fails
+            Path to temporary file
         """
-        try:
-            # Create parent directories if needed
-            temp_dir = Path("/tmp/video_upload")
-            temp_dir.mkdir(parents=True, exist_ok=True)
-
-            # Create unique filename
-            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
-            temp_path = temp_dir / f"{timestamp}_{name}"
-
-            # Write content
-            temp_path.write_bytes(content)
-            self.track_temp_file(temp_path)
+        temp_file = Path(tempfile.mktemp(suffix=suffix))
+        self.temp_files.append(temp_file)
+        self.track_temp_file(temp_file)
+        return temp_file
 
-            return temp_path
-
-        except Exception as e:
-            raise ProcessingError(f"Failed to create temporary file: {e}")
-
-    def create_temp_dir(self, name: str) -> Path:
+    def create_temp_dir(self) -> Path:
         """Create a temporary directory.
 
-        Args:
-            name: Name for the temporary directory
-
         Returns:
-            Path to the created temporary directory
-
-        Raises:
-            ProcessingError: If directory creation fails
+            Path to temporary directory
         """
-        try:
-            # Create parent directories if needed
-            temp_base = Path("/tmp/video_upload")
-            temp_base.mkdir(parents=True, exist_ok=True)
-
-            # Create unique directory name
-            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
-            temp_dir = temp_base / f"{timestamp}_{name}"
-            temp_dir.mkdir(parents=True)
-
-            self.track_temp_dir(temp_dir)
-            return temp_dir
-
-        except Exception as e:
-            raise ProcessingError(f"Failed to create temporary directory: {e}")
+        temp_dir = Path(tempfile.mkdtemp())
+        self.temp_dirs.append(temp_dir)
+        self.track_temp_dir(temp_dir)
+        return temp_dir
 
     @contextmanager
     def temp_file(self, name: str, content: bytes = b"") -> Generator[Path, None, None]:
@@ -200,7 +194,7 @@ class UploadContext:
         """
         temp_path = None
         try:
-            temp_path = self.create_temp_file(name, content)
+            temp_path = self.create_temp_file(name)
             yield temp_path
         finally:
             if temp_path and temp_path.exists():
@@ -226,7 +220,7 @@ class UploadContext:
         """
         temp_dir = None
         try:
-            temp_dir = self.create_temp_dir(name)
+            temp_dir = self.create_temp_dir()
             yield temp_dir
         finally:
             if temp_dir and temp_dir.exists():
@@ -270,4 +264,4 @@ class UploadContext:
         Returns:
             Elapsed time in seconds
         """
-        return (datetime.now() - self._start_time).total_seconds()
+        return (datetime.now() - self.start_time).total_seconds()
diff --git a/src/video_understanding/core/upload/integrity.py b/src/video_understanding/core/upload/integrity.py
index e9ebb78..54afd47 100644
--- a/src/video_understanding/core/upload/integrity.py
+++ b/src/video_understanding/core/upload/integrity.py
@@ -10,6 +10,9 @@ from typing import Optional, Tuple
 
 import cv2
 import magic
+import hashlib
+import asyncio
+from typing import Dict
 
 from video_understanding.utils.constants import (
     VALID_VIDEO_FORMATS,
@@ -18,6 +21,7 @@ from video_understanding.utils.constants import (
 )
 from video_understanding.utils.exceptions import VideoIntegrityError, VideoFormatError
 from video_understanding.models.video import VideoMetadata
+from ..exceptions import IntegrityError
 
 logger = logging.getLogger(__name__)
 
@@ -302,3 +306,57 @@ class VideoIntegrityChecker:
 
         except Exception as e:
             raise VideoIntegrityError(f"Failed to estimate bitrate: {e}")
+
+
+class FileIntegrityChecker:
+    """Checks integrity of uploaded video files."""
+
+    def __init__(self):
+        """Initialize the integrity checker."""
+        self.chunk_size = 8192  # 8KB chunks for reading
+
+    async def check(self, file_path: Path) -> None:
+        """Check file integrity.
+
+        Args:
+            file_path: Path to file to check
+
+        Raises:
+            IntegrityError: If integrity check fails
+        """
+        if not file_path.exists():
+            raise IntegrityError(f"File not found: {file_path}")
+
+        tasks = [
+            self._check_file_size(file_path),
+            self._check_file_format(file_path),
+            self._calculate_checksums(file_path)
+        ]
+
+        await asyncio.gather(*tasks)
+
+    async def _check_file_size(self, file_path: Path) -> None:
+        """Check if file size is within limits."""
+        size_mb = file_path.stat().st_size / (1024 * 1024)  # Convert to MB
+        if size_mb > 2048:  # 2GB limit
+            raise IntegrityError(f"File too large: {size_mb:.1f}MB > 2048MB")
+
+    async def _check_file_format(self, file_path: Path) -> None:
+        """Check if file format is supported."""
+        if file_path.suffix.lower() not in [".mp4", ".avi", ".mov"]:
+            raise IntegrityError(f"Unsupported file format: {file_path.suffix}")
+
+    async def _calculate_checksums(self, file_path: Path) -> Dict[str, str]:
+        """Calculate file checksums."""
+        md5 = hashlib.md5()
+        sha256 = hashlib.sha256()
+
+        with open(file_path, "rb") as f:
+            while chunk := f.read(self.chunk_size):
+                md5.update(chunk)
+                sha256.update(chunk)
+
+        return {
+            "md5": md5.hexdigest(),
+            "sha256": sha256.hexdigest()
+        }
diff --git a/src/video_understanding/core/upload/ocr.py b/src/video_understanding/core/upload/ocr.py
index 67ce035..1554b76 100644
--- a/src/video_understanding/core/upload/ocr.py
+++ b/src/video_understanding/core/upload/ocr.py
@@ -4,13 +4,18 @@ This module provides text extraction functionality using EasyOCR.
 """
 
 from dataclasses import dataclass
-from typing import Any
+from typing import Any, List, Dict, Optional
 
 import easyocr
 import numpy as np
+import logging
+from pathlib import Path
+import cv2
 
 from video_understanding.core.exceptions import OCRError
 
+logger = logging.getLogger(__name__)
+
 
 @dataclass
 class ExtractedText:
@@ -88,3 +93,76 @@ class TextExtractor:
             return extracted
         except Exception as e:
             raise OCRError("Failed to extract text from frame") from e
+
+
+class OCRProcessor:
+    """Processes video frames for text extraction."""
+
+    def __init__(self, languages: Optional[List[str]] = None):
+        """Initialize OCR processor.
+
+        Args:
+            languages: List of language codes to detect
+        """
+        self.languages = languages or ["eng"]
+        self.confidence_threshold = 0.7
+
+    async def process(self, file_path: Path) -> List[Dict[str, Any]]:
+        """Process video file for text extraction.
+
+        Args:
+            file_path: Path to video file
+
+        Returns:
+            List of text extraction results
+
+        Raises:
+            FileNotFoundError: If the video file does not exist
+            OCRError: If text extraction fails
+        """
+        if not file_path.exists():
+            raise FileNotFoundError(f"Video file not found: {file_path}")
+
+        results = []
+        cap = cv2.VideoCapture(str(file_path))
+
+        if not cap.isOpened():
+            cap.release()
+            raise OCRError(f"Failed to open video file: {file_path}")
+
+        try:
+            while cap.isOpened():
+                ret, frame = cap.read()
+                if not ret:
+                    break
+
+                # Process frame
+                frame_results = await self._process_frame(frame)
+                if frame_results:
+                    results.extend(frame_results)
+
+        finally:
+            cap.release()
+
+        return results
+
+    async def _process_frame(self, frame: np.ndarray) -> List[Dict[str, Any]]:
+        """Process a single frame for text extraction.
+
+        Args:
+            frame: Video frame as numpy array
+
+        Returns:
+            List of text extraction results for frame
+        """
+        # TODO: Implement actual OCR processing
+        # This is a placeholder that returns no results
+        return []
+
+    def set_confidence_threshold(self, threshold: float) -> None:
+        """Set confidence threshold for text detection.
+
+        Args:
+            threshold: Confidence threshold (0.0 to 1.0)
+        """
+        self.confidence_threshold = max(0.0, min(1.0, threshold))
diff --git a/src/video_understanding/core/upload/processor.py b/src/video_understanding/core/upload/processor.py
index a86e085..eb56467 100644
--- a/src/video_understanding/core/upload/processor.py
+++ b/src/video_understanding/core/upload/processor.py
@@ -7,8 +7,9 @@ the various components involved in video upload handling.
 import logging
 from datetime import datetime
 from pathlib import Path
-from typing import Optional, Dict, Any
+from typing import Optional, Dict, Any, List
 from uuid import UUID, uuid4
+import asyncio
 
 import cv2
 import numpy as np
@@ -26,13 +27,18 @@ from video_understanding.models.video import (
     VideoMetadata,
 )
 from video_understanding.core.upload.directory import DirectoryManager
-from video_understanding.core.upload.integrity import VideoIntegrityChecker
-from video_understanding.core.upload.security import SecurityValidator
+from video_understanding.core.upload.integrity import VideoIntegrityChecker as FileIntegrityChecker
+from video_understanding.core.upload.security import SecurityValidator as SecurityScanner
 from video_understanding.core.upload.quarantine import QuarantineManager
 from video_understanding.core.upload.config import ProcessorConfig
 from video_understanding.core.upload.context import UploadContext
 from video_understanding.core.upload.progress import ProgressTracker
 from video_understanding.core.upload.scene import SceneDetector, SceneChange
+from video_understanding.core.upload.detection import ObjectDetector
+from video_understanding.core.upload.ocr import TextExtractor
+from video_understanding.core.upload.config import UploadConfig
+from video_understanding.core.upload.ocr import OCRProcessor
+from video_understanding.exceptions import VideoUnderstandingError
 
 logger = logging.getLogger(__name__)
 
@@ -68,8 +74,8 @@ class UploadProcessor:
             test_mode: Whether to run in test mode
         """
         self.directory_manager = DirectoryManager(upload_dir, test_mode)
-        self.integrity_checker = VideoIntegrityChecker(test_mode)
-        self.security_validator = SecurityValidator(self.directory_manager, test_mode)
+        self.integrity_checker = FileIntegrityChecker(test_mode)
+        self.security_validator = SecurityScanner(self.directory_manager, test_mode)
         self.quarantine_manager = QuarantineManager(self.directory_manager, test_mode)
         self.test_mode = test_mode
 
@@ -120,7 +126,7 @@ class UploadProcessor:
                 final_path = self._move_to_completed(processed_path, video.id)
 
                 # Update video information
-                video.file_info.file_path = str(final_path)
+                video.file_info.file_path = final_path
                 self._update_status(video, ProcessingStatus.COMPLETED)
 
                 return video
@@ -152,7 +158,7 @@ class UploadProcessor:
         """
         file_info = VideoFile(
             filename=file_path.name,
-            file_path=str(file_path),
+            file_path=file_path,
             format=file_path.suffix[1:].upper(),
             file_size=file_path.stat().st_size,
         )
@@ -401,30 +407,26 @@ class VideoProcessor:
 
         Args:
             config: Processing configuration
+
+        Raises:
+            ConfigurationError: If configuration is invalid
         """
+        # Validate configuration
+        config.validate()
+
         self.config = config
+        self._progress = ProgressTracker(video_id=None)
         self._current_frame = 0
-        self._progress = None
-        self._scene_detector = SceneDetector()
-
-        # Initialize object detector if enabled
-        self.detector = None
-        if config.detection_enabled:
-            from video_understanding.core.upload.detection import ObjectDetector
-            self.detector = ObjectDetector(
-                model_path=config.object_detection_model,
-                confidence_threshold=config.detection_confidence,
-            )
-
-        # Initialize text extractor if enabled
-        self.text_extractor = None
-        if config.ocr_enabled:
-            from video_understanding.core.upload.ocr import TextExtractor
-            self.text_extractor = TextExtractor(
-                languages=config.ocr_languages,
-                confidence_threshold=config.ocr_confidence,
-                gpu=config.ocr_gpu,
-            )
+        self.scene_detector = SceneDetector()
+        self.object_detector = ObjectDetector(
+            confidence_threshold=config.detection_confidence,
+            model_path=config.object_detection_model,
+        )
+        self.text_extractor = TextExtractor(
+            languages=config.ocr_languages,
+            confidence_threshold=config.ocr_confidence,
+            gpu=config.ocr_gpu,
+        )
 
     def process(self, video: Video) -> UploadContext:
         """Process a video file.
@@ -635,9 +637,9 @@ class VideoProcessor:
         }
 
         # Run object detection if enabled
-        if self.detector is not None:
+        if self.object_detector is not None:
             try:
-                detections = self.detector(frame, frame_number)
+                detections = self.object_detector(frame, frame_number)
                 result["objects"] = [obj.to_dict() for obj in detections]
             except Exception as e:
                 logger.warning(f"Object detection failed for frame {frame_number}: {e}")
@@ -646,7 +648,7 @@ class VideoProcessor:
         # Run text extraction if enabled
         if self.text_extractor is not None:
             try:
-                texts = self.text_extractor(frame, frame_number)
+                texts = self.text_extractor.extract_text(frame)
                 result["text"] = [text.to_dict() for text in texts]
             except Exception as e:
                 logger.warning(f"Text extraction failed for frame {frame_number}: {e}")
@@ -672,7 +674,7 @@ class VideoProcessor:
         }
 
         # Detect scene changes
-        scene_change = self._scene_detector.detect_change(
+        scene_change = self.scene_detector.detect_change(
             frame,
             frame_number=self._current_frame,
             timestamp=self._current_frame / self._get_fps(),
@@ -765,3 +767,63 @@ class VideoProcessor:
                 cap.release()
         except Exception:
             return 30.0
+
+
+class VideoUploader:
+    """Handles video upload processing and validation."""
+
+    def __init__(self, config: Optional[UploadConfig] = None):
+        """Initialize the uploader with optional config."""
+        self.config = config or UploadConfig()
+        self.integrity_checker = FileIntegrityChecker()
+        self.security_scanner = SecurityScanner()
+        self.scene_detector = SceneDetector()
+        self.ocr_processor = OCRProcessor()
+
+    async def process_upload(self, file_path: Path) -> Dict[str, Any]:
+        """Process an uploaded video file.
+
+        Args:
+            file_path: Path to the uploaded video file
+
+        Returns:
+            Dict containing processing results
+
+        Raises:
+            VideoUnderstandingError: If processing fails
+        """
+        try:
+            # Create processing context
+            context = UploadContext(file_path)
+
+            # Run integrity checks
+            await self.integrity_checker.check(file_path)
+
+            # Scan for security issues
+            await self.security_scanner.scan(file_path)
+
+            # Detect scenes
+            scenes = await self.scene_detector.detect(file_path)
+            context.add_scenes(scenes)
+
+            # Extract text with OCR
+            text = await self.ocr_processor.process(file_path)
+            context.add_text(text)
+
+            return context.get_results()
+
+        except Exception as e:
+            logger.error(f"Error processing upload {file_path}: {str(e)}")
+            raise VideoUnderstandingError(f"Upload processing failed: {str(e)}")
+
+    async def process_batch(self, file_paths: List[Path]) -> List[Dict[str, Any]]:
+        """Process multiple uploaded files concurrently.
+
+        Args:
+            file_paths: List of paths to uploaded files
+
+        Returns:
+            List of processing results for each file
+        """
+        tasks = [self.process_upload(path) for path in file_paths]
+        return await asyncio.gather(*tasks, return_exceptions=True)
diff --git a/src/video_understanding/core/upload/scene.py b/src/video_understanding/core/upload/scene.py
index d75e933..bd0bdcd 100644
--- a/src/video_understanding/core/upload/scene.py
+++ b/src/video_understanding/core/upload/scene.py
@@ -5,11 +5,15 @@ This module provides scene change detection functionality.
 
 from dataclasses import dataclass
 from enum import Enum
-from typing import Optional
+from typing import Optional, List, Dict, Any
+import logging
+from pathlib import Path
 
 import cv2
 import numpy as np
+from video_understanding.core.exceptions import FileValidationError
 
+logger = logging.getLogger(__name__)
 
 class SceneChangeType(Enum):
     """Types of scene changes."""
@@ -37,36 +41,130 @@ class SceneChange:
 
 
 class SceneDetector:
-    """Scene change detector for video frames.
-
-    This class detects scene changes in video frames using various methods:
-    1. Frame difference analysis
-    2. Histogram comparison
-    3. Motion analysis
-
-    Example:
-        >>> detector = SceneDetector()
-        >>> frame = cv2.imread("frame.jpg")
-        >>> change = detector.detect_change(frame)
-        >>> if change:
-        ...     print(f"Scene change at {change.timestamp}s")
-    """
+    """Detects scene changes in videos."""
 
-    def __init__(
-        self,
-        diff_threshold: float = 0.35,
-        hist_threshold: float = 0.6,
-    ) -> None:
-        """Initialize scene detector.
+    def __init__(self):
+        """Initialize scene detector."""
+        self.min_scene_duration = 2.0  # seconds
+        self.max_scenes = 500
+        self.threshold = 30.0  # threshold for scene change detection
+
+    async def detect(self, file_path: Path) -> List[Dict[str, Any]]:
+        """Detect scenes in video file.
+
+        Args:
+            file_path: Path to video file
+
+        Returns:
+            List of scene information dictionaries
+
+        Raises:
+            FileValidationError: If the video file does not exist or cannot be opened
+        """
+        if not file_path.exists():
+            raise FileValidationError(f"Video file not found: {file_path}")
+
+        scenes = []
+        cap = cv2.VideoCapture(str(file_path))
+
+        if not cap.isOpened():
+            cap.release()
+            raise FileValidationError(f"Failed to open video file: {file_path}")
+
+        try:
+            fps = cap.get(cv2.CAP_PROP_FPS)
+            total_frames = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))
+            min_frames = int(self.min_scene_duration * fps)
+
+            prev_frame = None
+            frame_count = 0
+            scene_start = 0
+
+            while cap.isOpened() and frame_count < total_frames:
+                ret, frame = cap.read()
+                if not ret:
+                    break
+
+                if prev_frame is not None:
+                    # Calculate frame difference
+                    diff = self._calculate_frame_diff(prev_frame, frame)
+
+                    # Check for scene change
+                    if diff > self.threshold and (frame_count - scene_start) >= min_frames:
+                        scenes.append({
+                            "start_frame": scene_start,
+                            "end_frame": frame_count,
+                            "start_time": scene_start / fps,
+                            "end_time": frame_count / fps,
+                            "duration": (frame_count - scene_start) / fps
+                        })
+                        scene_start = frame_count
+
+                        # Check max scenes limit
+                        if len(scenes) >= self.max_scenes:
+                            break
+
+                prev_frame = frame.copy()
+                frame_count += 1
+
+            # Add final scene if needed
+            if scene_start < frame_count:
+                scenes.append({
+                    "start_frame": scene_start,
+                    "end_frame": frame_count,
+                    "start_time": scene_start / fps,
+                    "end_time": frame_count / fps,
+                    "duration": (frame_count - scene_start) / fps
+                })
+
+        finally:
+            cap.release()
+
+        return scenes
+
+    def _calculate_frame_diff(self, frame1: np.ndarray, frame2: np.ndarray) -> float:
+        """Calculate difference between two frames.
+
+        Args:
+            frame1: First frame
+            frame2: Second frame
+
+        Returns:
+            Difference score between frames
+        """
+        # Convert to grayscale
+        gray1 = cv2.cvtColor(frame1, cv2.COLOR_BGR2GRAY)
+        gray2 = cv2.cvtColor(frame2, cv2.COLOR_BGR2GRAY)
+
+        # Calculate absolute difference
+        diff = cv2.absdiff(gray1, gray2)
+
+        # Calculate mean difference (convert to float array first)
+        return float(np.mean(diff.astype(np.float32)))
+
+    def set_min_scene_duration(self, duration: float) -> None:
+        """Set minimum scene duration.
+
+        Args:
+            duration: Minimum duration in seconds
+        """
+        self.min_scene_duration = max(0.1, duration)
+
+    def set_max_scenes(self, max_scenes: int) -> None:
+        """Set maximum number of scenes.
+
+        Args:
+            max_scenes: Maximum number of scenes to detect
+        """
+        self.max_scenes = max(1, max_scenes)
+
+    def set_threshold(self, threshold: float) -> None:
+        """Set scene change detection threshold.
 
         Args:
-            diff_threshold: Frame difference threshold
-            hist_threshold: Histogram difference threshold
+            threshold: Detection threshold
         """
-        self.diff_threshold = diff_threshold
-        self.hist_threshold = hist_threshold
-        self._prev_frame = None
-        self._prev_hist = None
+        self.threshold = max(0.0, threshold)
 
     def detect_change(
         self,
@@ -74,7 +172,7 @@ class SceneDetector:
         frame_number: int,
         timestamp: float,
     ) -> Optional[SceneChange]:
-        """Detect scene changes between consecutive frames.
+        """Detect if current frame represents a scene change.
 
         Args:
             frame: Current frame as numpy array
@@ -84,79 +182,23 @@ class SceneDetector:
         Returns:
             SceneChange object if change detected, None otherwise
         """
-        if self._prev_frame is None:
-            self._prev_frame = frame
-            self._prev_hist = self._compute_histogram(frame)
+        if not hasattr(self, '_prev_frame'):
+            self._prev_frame = frame.copy()
             return None
 
-        # Compute frame difference
-        diff_score = self._compute_frame_diff(frame)
-        hist_score = self._compute_hist_diff(frame)
-
-        # Detect scene change
-        if diff_score > self.diff_threshold or hist_score > self.hist_threshold:
-            change_type = (
-                SceneChangeType.CUT
-                if diff_score > self.diff_threshold
-                else SceneChangeType.DISSOLVE
-            )
-            confidence = max(diff_score, hist_score)
+        # Calculate frame difference
+        diff = self._calculate_frame_diff(self._prev_frame, frame)
 
-            # Update previous frame
-            self._prev_frame = frame
-            self._prev_hist = self._compute_histogram(frame)
+        # Update previous frame
+        self._prev_frame = frame.copy()
 
+        # Check if difference exceeds threshold
+        if diff > self.threshold:
             return SceneChange(
                 frame_number=frame_number,
                 timestamp=timestamp,
-                confidence=confidence,
-                type=change_type,
+                confidence=min(100.0, diff / self.threshold * 100),
+                type=SceneChangeType.CUT if diff > self.threshold * 2 else SceneChangeType.DISSOLVE
             )
 
-        # Update previous frame
-        self._prev_frame = frame
-        self._prev_hist = self._compute_histogram(frame)
         return None
-
-    def _compute_frame_diff(self, frame: np.ndarray) -> float:
-        """Compute normalized frame difference.
-
-        Args:
-            frame: Current frame
-
-        Returns:
-            Normalized difference score
-        """
-        # Convert to grayscale
-        curr_gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
-        prev_gray = cv2.cvtColor(self._prev_frame, cv2.COLOR_BGR2GRAY)
-
-        # Compute absolute difference
-        diff = cv2.absdiff(curr_gray, prev_gray)
-        return diff.mean() / 255.0
-
-    def _compute_histogram(self, frame: np.ndarray) -> np.ndarray:
-        """Compute color histogram for frame.
-
-        Args:
-            frame: Input frame
-
-        Returns:
-            Normalized histogram array
-        """
-        hist = cv2.calcHist([frame], [0, 1, 2], None, [8, 8, 8], [0, 256, 0, 256, 0, 256])
-        cv2.normalize(hist, hist)
-        return hist
-
-    def _compute_hist_diff(self, frame: np.ndarray) -> float:
-        """Compute histogram difference between frames.
-
-        Args:
-            frame: Current frame
-
-        Returns:
-            Normalized difference score
-        """
-        curr_hist = self._compute_histogram(frame)
-        diff = cv2.compareHist(self._prev_hist, curr_hist, cv2.HISTCMP_CHISQR)
-        return min(diff / 1000.0, 1.0)  # Normalize to [0, 1]
diff --git a/src/video_understanding/core/upload/security.py b/src/video_understanding/core/upload/security.py
index 9181219..50e8383 100644
--- a/src/video_understanding/core/upload/security.py
+++ b/src/video_understanding/core/upload/security.py
@@ -9,6 +9,7 @@ import logging
 import os
 from pathlib import Path
 from typing import Optional
+import asyncio
 
 from video_understanding.utils.constants import (
     UPLOAD_DIR_MODE,
@@ -286,3 +287,50 @@ class SecurityValidator:
         """
         self.validate_file(file_path)
         self.secure_file(file_path)
+
+
+class SecurityScanner:
+    """Scans uploaded videos for security issues."""
+
+    def __init__(self):
+        """Initialize the security scanner."""
+        self.virus_scan_enabled = True
+        self.content_validation_enabled = True
+
+    async def scan(self, file_path: Path) -> None:
+        """Scan a file for security issues.
+
+        Args:
+            file_path: Path to file to scan
+
+        Raises:
+            SecurityError: If security issues are found
+        """
+        if not file_path.exists():
+            raise SecurityError(f"File not found: {file_path}")
+
+        tasks = []
+        if self.virus_scan_enabled:
+            tasks.append(self._scan_viruses(file_path))
+        if self.content_validation_enabled:
+            tasks.append(self._validate_content(file_path))
+
+        await asyncio.gather(*tasks)
+
+    async def _scan_viruses(self, file_path: Path) -> None:
+        """Scan file for viruses."""
+        # TODO: Implement virus scanning
+        logger.info(f"Virus scan completed for {file_path}")
+
+    async def _validate_content(self, file_path: Path) -> None:
+        """Validate file content."""
+        # TODO: Implement content validation
+        logger.info(f"Content validation completed for {file_path}")
+
+    def set_virus_scan(self, enabled: bool) -> None:
+        """Enable/disable virus scanning."""
+        self.virus_scan_enabled = enabled
+
+    def set_content_validation(self, enabled: bool) -> None:
+        """Enable/disable content validation."""
+        self.content_validation_enabled = enabled
diff --git a/src/video_understanding/models/video.py b/src/video_understanding/models/video.py
index bf88834..c418d91 100644
--- a/src/video_understanding/models/video.py
+++ b/src/video_understanding/models/video.py
@@ -8,7 +8,7 @@ from dataclasses import dataclass
 from datetime import datetime
 from enum import Enum
 from pathlib import Path
-from typing import Optional
+from typing import Optional, Dict, Any
 from uuid import UUID, uuid4
 
 
@@ -23,6 +23,15 @@ class ProcessingStatus(str, Enum):
     QUARANTINED = "quarantined"
 
 
+class VideoProcessingStatus(Enum):
+    """Video processing status."""
+    PENDING = "pending"
+    PROCESSING = "processing"
+    COMPLETED = "completed"
+    FAILED = "failed"
+    QUARANTINED = "quarantined"
+
+
 @dataclass
 class VideoFile:
     """Information about a video file.
@@ -34,13 +43,25 @@ class VideoFile:
         file_size: Size of the file in bytes
         created_at: When the file was created in the system
         modified_at: When the file was last modified
+        duration: Duration in seconds
+        width: Frame width in pixels
+        height: Frame height in pixels
+        fps: Frames per second
+        bitrate: Video bitrate
+        checksum: File checksum
     """
     filename: str
-    file_path: str
+    file_path: Path
     format: str
     file_size: int
     created_at: datetime = datetime.now()
     modified_at: datetime = datetime.now()
+    duration: Optional[float] = None
+    width: Optional[int] = None
+    height: Optional[int] = None
+    fps: Optional[float] = None
+    bitrate: Optional[int] = None
+    checksum: Optional[str] = None
 
     def __post_init__(self) -> None:
         """Validate the video file information."""
@@ -135,6 +156,61 @@ class VideoMetadata:
             raise ValueError("Total frames must be positive")
 
 
+@dataclass
+class VideoBasicInfo:
+    """Basic information about a video.
+
+    This class contains the essential information needed to identify and locate a video,
+    without the full processing details.
+
+    Attributes:
+        id: Unique identifier for the video
+        filename: Original name of the file
+        file_path: Current path to the file in the system
+        format: Video format (e.g., MP4, AVI)
+        file_size: Size of the file in bytes
+        created_at: When the file was created in the system
+        modified_at: When the file was last modified
+    """
+    id: UUID
+    filename: str
+    file_path: Path
+    format: str
+    file_size: int
+    created_at: datetime = datetime.now()
+    modified_at: datetime = datetime.now()
+
+    def __post_init__(self) -> None:
+        """Validate the video basic information."""
+        if not isinstance(self.id, UUID):
+            self.id = UUID(str(self.id))
+        if not self.filename:
+            raise ValueError("Filename cannot be empty")
+        if not self.file_path:
+            raise ValueError("File path cannot be empty")
+        if not self.format:
+            self.format = Path(self.filename).suffix[1:].upper()
+
+    @classmethod
+    def from_file(cls, file_path: Path, id: Optional[UUID] = None) -> "VideoBasicInfo":
+        """Create a VideoBasicInfo instance from a file path.
+
+        Args:
+            file_path: Path to video file
+            id: Optional unique identifier for the video
+
+        Returns:
+            VideoBasicInfo instance
+        """
+        return cls(
+            id=id or uuid4(),
+            filename=file_path.name,
+            file_path=file_path,
+            format=file_path.suffix[1:].upper(),
+            file_size=file_path.stat().st_size,
+        )
+
+
 @dataclass
 class Video:
     """Main video model containing all video information.
@@ -144,11 +220,19 @@ class Video:
         file_info: Information about the video file
         processing: Processing status and progress
         metadata: Technical metadata (available after processing)
+        status: Current processing status
+        upload_time: When the video was uploaded
+        processing_time: Time taken for processing
+        error_message: Error message if processing failed
     """
     id: UUID
     file_info: VideoFile
     processing: VideoProcessingInfo
     metadata: Optional[VideoMetadata] = None
+    status: VideoProcessingStatus = VideoProcessingStatus.PENDING
+    upload_time: datetime = datetime.now()
+    processing_time: Optional[float] = None
+    error_message: Optional[str] = None
 
     def __post_init__(self) -> None:
         """Validate the video ID and initialize if needed."""
@@ -174,7 +258,7 @@ class Video:
         return self.file_info.filename
 
     @property
-    def file_path(self) -> str:
+    def file_path(self) -> Path:
         """Get the current file path."""
         return self.file_info.file_path
 
@@ -207,7 +291,7 @@ class Video:
         """
         file_info = VideoFile(
             filename=path.name,
-            file_path=str(path),
+            file_path=path,
             format=path.suffix[1:].upper(),
             file_size=path.stat().st_size,
         )
diff --git a/src/video_understanding/storage/vector/__init__.py b/src/video_understanding/storage/vector/__init__.py
index 0b710ca..c75b46d 100644
--- a/src/video_understanding/storage/vector/__init__.py
+++ b/src/video_understanding/storage/vector/__init__.py
@@ -33,6 +33,8 @@ from .utils import (
     wrap_errors,
     retry_operation,
 )
+from .config import VectorStorageConfig
+from .storage import VectorStorage
 
 __all__ = [
     # Types
@@ -63,4 +65,8 @@ __all__ = [
     'normalize_vector',
     'wrap_errors',
     'retry_operation',
+
+    # Config and Storage
+    'VectorStorageConfig',
+    'VectorStorage',
 ]
diff --git a/src/video_understanding/types/cv2.py b/src/video_understanding/types/cv2.py
index f452045..30f08b0 100644
--- a/src/video_understanding/types/cv2.py
+++ b/src/video_understanding/types/cv2.py
@@ -1,18 +1,31 @@
 """OpenCV constants and types for video processing."""
 
-import cv2
+import sys
 from pathlib import Path
-from typing import Union
-
-# Re-export OpenCV classes and functions
-VideoCapture = cv2.VideoCapture
-VideoWriter = cv2.VideoWriter
-imread = cv2.imread
-imwrite = cv2.imwrite
-resize = cv2.resize
-cvtColor = cv2.cvtColor
-
-def create_video_capture(video_path: Union[str, Path]) -> cv2.VideoCapture:
+from typing import Any, Dict, Union
+
+# Type aliases to avoid circular references
+VideoCaptureType = Any  # Represents cv2.VideoCapture
+VideoWriterType = Any   # Represents cv2.VideoWriter
+
+# Get cv2 module (real or mock)
+cv2 = sys.modules.get("cv2")
+if cv2 is None:
+    import cv2
+
+# Re-export OpenCV classes and functions with lazy initialization
+def _get_cv2_attr(name: str) -> Any:
+    """Get cv2 attribute with lazy initialization."""
+    return getattr(cv2, name)
+
+VideoCapture = lambda *args, **kwargs: _get_cv2_attr("VideoCapture")(*args, **kwargs)
+VideoWriter = lambda *args, **kwargs: _get_cv2_attr("VideoWriter")(*args, **kwargs)
+imread = lambda *args, **kwargs: _get_cv2_attr("imread")(*args, **kwargs)
+imwrite = lambda *args, **kwargs: _get_cv2_attr("imwrite")(*args, **kwargs)
+resize = lambda *args, **kwargs: _get_cv2_attr("resize")(*args, **kwargs)
+cvtColor = lambda *args, **kwargs: _get_cv2_attr("cvtColor")(*args, **kwargs)
+
+def create_video_capture(video_path: Union[str, Path]) -> VideoCaptureType:
     """Create a VideoCapture object for the given video path.
 
     Args:
@@ -24,12 +37,12 @@ def create_video_capture(video_path: Union[str, Path]) -> cv2.VideoCapture:
     Raises:
         ValueError: If video file cannot be opened
     """
-    cap = cv2.VideoCapture(str(video_path))
+    cap = VideoCapture(str(video_path))
     if not cap.isOpened():
         raise ValueError(f"Could not open video file: {video_path}")
     return cap
 
-def get_video_properties(cap: cv2.VideoCapture) -> dict:
+def get_video_properties(cap: VideoCaptureType) -> Dict[str, Union[int, float]]:
     """Get video properties from a VideoCapture object.
 
     Args:
@@ -39,73 +52,78 @@ def get_video_properties(cap: cv2.VideoCapture) -> dict:
         Dictionary containing video properties
     """
     return {
-        "width": int(cap.get(cv2.CAP_PROP_FRAME_WIDTH)),
-        "height": int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT)),
-        "fps": float(cap.get(cv2.CAP_PROP_FPS)),
-        "frame_count": int(cap.get(cv2.CAP_PROP_FRAME_COUNT)),
-        "fourcc": int(cap.get(cv2.CAP_PROP_FOURCC)),
+        "width": int(cap.get(_get_cv2_attr("CAP_PROP_FRAME_WIDTH"))),
+        "height": int(cap.get(_get_cv2_attr("CAP_PROP_FRAME_HEIGHT"))),
+        "fps": float(cap.get(_get_cv2_attr("CAP_PROP_FPS"))),
+        "frame_count": int(cap.get(_get_cv2_attr("CAP_PROP_FRAME_COUNT"))),
+        "fourcc": int(cap.get(_get_cv2_attr("CAP_PROP_FOURCC"))),
     }
 
+# Lazy property getters
+def _get_property(name: str) -> int:
+    return getattr(cv2, name)
+
 # Video capture properties
-CAP_PROP_POS_MSEC = cv2.CAP_PROP_POS_MSEC  # Current position in milliseconds
-CAP_PROP_POS_FRAMES = cv2.CAP_PROP_POS_FRAMES  # Current frame number
-CAP_PROP_POS_AVI_RATIO = cv2.CAP_PROP_POS_AVI_RATIO  # Relative position (0=start, 1=end)
-CAP_PROP_FRAME_WIDTH = cv2.CAP_PROP_FRAME_WIDTH  # Width of frames
-CAP_PROP_FRAME_HEIGHT = cv2.CAP_PROP_FRAME_HEIGHT  # Height of frames
-CAP_PROP_FPS = cv2.CAP_PROP_FPS  # Frame rate
-CAP_PROP_FOURCC = cv2.CAP_PROP_FOURCC  # Codec FOURCC code
-CAP_PROP_FRAME_COUNT = cv2.CAP_PROP_FRAME_COUNT  # Number of frames
-CAP_PROP_FORMAT = cv2.CAP_PROP_FORMAT  # Format of the frames
-CAP_PROP_MODE = cv2.CAP_PROP_MODE  # Backend-specific value indicating the current capture mode
-CAP_PROP_BRIGHTNESS = cv2.CAP_PROP_BRIGHTNESS  # Brightness of the image
-CAP_PROP_CONTRAST = cv2.CAP_PROP_CONTRAST  # Contrast of the image
-CAP_PROP_SATURATION = cv2.CAP_PROP_SATURATION  # Saturation of the image
-CAP_PROP_HUE = cv2.CAP_PROP_HUE  # Hue of the image
-CAP_PROP_GAIN = cv2.CAP_PROP_GAIN  # Gain of the image
-CAP_PROP_EXPOSURE = cv2.CAP_PROP_EXPOSURE  # Exposure
+CAP_PROP_POS_MSEC = lambda: _get_property("CAP_PROP_POS_MSEC")
+CAP_PROP_POS_FRAMES = lambda: _get_property("CAP_PROP_POS_FRAMES")
+CAP_PROP_POS_AVI_RATIO = lambda: _get_property("CAP_PROP_POS_AVI_RATIO")
+CAP_PROP_FRAME_WIDTH = lambda: _get_property("CAP_PROP_FRAME_WIDTH")
+CAP_PROP_FRAME_HEIGHT = lambda: _get_property("CAP_PROP_FRAME_HEIGHT")
+CAP_PROP_FPS = lambda: _get_property("CAP_PROP_FPS")
+CAP_PROP_FOURCC = lambda: _get_property("CAP_PROP_FOURCC")
+CAP_PROP_FRAME_COUNT = lambda: _get_property("CAP_PROP_FRAME_COUNT")
+CAP_PROP_FORMAT = lambda: _get_property("CAP_PROP_FORMAT")
+CAP_PROP_MODE = lambda: _get_property("CAP_PROP_MODE")
+CAP_PROP_BRIGHTNESS = lambda: _get_property("CAP_PROP_BRIGHTNESS")
+CAP_PROP_CONTRAST = lambda: _get_property("CAP_PROP_CONTRAST")
+CAP_PROP_SATURATION = lambda: _get_property("CAP_PROP_SATURATION")
+CAP_PROP_HUE = lambda: _get_property("CAP_PROP_HUE")
+CAP_PROP_GAIN = lambda: _get_property("CAP_PROP_GAIN")
+CAP_PROP_EXPOSURE = lambda: _get_property("CAP_PROP_EXPOSURE")
 
 # Color conversion codes
-COLOR_BGR2GRAY = cv2.COLOR_BGR2GRAY  # Convert BGR to grayscale
-COLOR_RGB2GRAY = cv2.COLOR_RGB2GRAY  # Convert RGB to grayscale
-COLOR_GRAY2BGR = cv2.COLOR_GRAY2BGR  # Convert grayscale to BGR
-COLOR_GRAY2RGB = cv2.COLOR_GRAY2RGB  # Convert grayscale to RGB
-COLOR_BGR2RGB = cv2.COLOR_BGR2RGB  # Convert BGR to RGB
-COLOR_RGB2BGR = cv2.COLOR_RGB2BGR  # Convert RGB to BGR
+COLOR_BGR2GRAY = lambda: _get_property("COLOR_BGR2GRAY")
+COLOR_RGB2GRAY = lambda: _get_property("COLOR_RGB2GRAY")
+COLOR_GRAY2BGR = lambda: _get_property("COLOR_GRAY2BGR")
+COLOR_GRAY2RGB = lambda: _get_property("COLOR_GRAY2RGB")
+COLOR_BGR2RGB = lambda: _get_property("COLOR_BGR2RGB")
+COLOR_RGB2BGR = lambda: _get_property("COLOR_RGB2BGR")
 
 # Window properties
-WINDOW_NORMAL = cv2.WINDOW_NORMAL  # The user can resize the window
-WINDOW_AUTOSIZE = cv2.WINDOW_AUTOSIZE  # The window size is automatically adjusted to fit the displayed image
-WINDOW_OPENGL = cv2.WINDOW_OPENGL  # Window with OpenGL support
+WINDOW_NORMAL = lambda: _get_property("WINDOW_NORMAL")
+WINDOW_AUTOSIZE = lambda: _get_property("WINDOW_AUTOSIZE")
+WINDOW_OPENGL = lambda: _get_property("WINDOW_OPENGL")
 
 # Mouse events
-EVENT_MOUSEMOVE = cv2.EVENT_MOUSEMOVE  # Mouse movement
-EVENT_LBUTTONDOWN = cv2.EVENT_LBUTTONDOWN  # Left button down
-EVENT_RBUTTONDOWN = cv2.EVENT_RBUTTONDOWN  # Right button down
-EVENT_MBUTTONDOWN = cv2.EVENT_MBUTTONDOWN  # Middle button down
-EVENT_LBUTTONUP = cv2.EVENT_LBUTTONUP  # Left button up
-EVENT_RBUTTONUP = cv2.EVENT_RBUTTONUP  # Right button up
-EVENT_MBUTTONUP = cv2.EVENT_MBUTTONUP  # Middle button up
-EVENT_LBUTTONDBLCLK = cv2.EVENT_LBUTTONDBLCLK  # Left button double click
-EVENT_RBUTTONDBLCLK = cv2.EVENT_RBUTTONDBLCLK  # Right button double click
-EVENT_MBUTTONDBLCLK = cv2.EVENT_MBUTTONDBLCLK  # Middle button double click
+EVENT_MOUSEMOVE = lambda: _get_property("EVENT_MOUSEMOVE")
+EVENT_LBUTTONDOWN = lambda: _get_property("EVENT_LBUTTONDOWN")
+EVENT_RBUTTONDOWN = lambda: _get_property("EVENT_RBUTTONDOWN")
+EVENT_MBUTTONDOWN = lambda: _get_property("EVENT_MBUTTONDOWN")
+EVENT_LBUTTONUP = lambda: _get_property("EVENT_LBUTTONUP")
+EVENT_RBUTTONUP = lambda: _get_property("EVENT_RBUTTONUP")
+EVENT_MBUTTONUP = lambda: _get_property("EVENT_MBUTTONUP")
+EVENT_LBUTTONDBLCLK = lambda: _get_property("EVENT_LBUTTONDBLCLK")
+EVENT_RBUTTONDBLCLK = lambda: _get_property("EVENT_RBUTTONDBLCLK")
+EVENT_MBUTTONDBLCLK = lambda: _get_property("EVENT_MBUTTONDBLCLK")
 
 # Interpolation methods
-INTER_NEAREST = cv2.INTER_NEAREST  # Nearest neighbor interpolation
-INTER_LINEAR = cv2.INTER_LINEAR  # Bilinear interpolation
-INTER_CUBIC = cv2.INTER_CUBIC  # Bicubic interpolation
-INTER_AREA = cv2.INTER_AREA  # Area interpolation
-INTER_LANCZOS4 = cv2.INTER_LANCZOS4  # Lanczos interpolation over 8x8 neighborhood
+INTER_NEAREST = lambda: _get_property("INTER_NEAREST")
+INTER_LINEAR = lambda: _get_property("INTER_LINEAR")
+INTER_CUBIC = lambda: _get_property("INTER_CUBIC")
+INTER_AREA = lambda: _get_property("INTER_AREA")
+INTER_LANCZOS4 = lambda: _get_property("INTER_LANCZOS4")
 
 # Border types
-BORDER_CONSTANT = cv2.BORDER_CONSTANT  # Border is filled with constant value
-BORDER_REPLICATE = cv2.BORDER_REPLICATE  # Border replicates the border pixels
-BORDER_REFLECT = cv2.BORDER_REFLECT  # Border reflects the border pixels
-BORDER_WRAP = cv2.BORDER_WRAP  # Border is taken from the opposite edge
-BORDER_REFLECT_101 = cv2.BORDER_REFLECT_101  # Border reflects the border pixels with a slight change
-BORDER_TRANSPARENT = cv2.BORDER_TRANSPARENT  # Border is filled with transparent pixels
-BORDER_DEFAULT = cv2.BORDER_DEFAULT  # Default border type
-BORDER_ISOLATED = cv2.BORDER_ISOLATED  # Do not look outside the ROI
-
+BORDER_CONSTANT = lambda: _get_property("BORDER_CONSTANT")
+BORDER_REPLICATE = lambda: _get_property("BORDER_REPLICATE")
+BORDER_REFLECT = lambda: _get_property("BORDER_REFLECT")
+BORDER_WRAP = lambda: _get_property("BORDER_WRAP")
+BORDER_REFLECT_101 = lambda: _get_property("BORDER_REFLECT_101")
+BORDER_TRANSPARENT = lambda: _get_property("BORDER_TRANSPARENT")
+BORDER_DEFAULT = lambda: _get_property("BORDER_DEFAULT")
+BORDER_ISOLATED = lambda: _get_property("BORDER_ISOLATED")
+
+# Update __all__ to include all exported names
 __all__ = [
     # OpenCV classes and functions
     "VideoCapture",
diff --git a/src/video_understanding/utils/circuit_breaker.py b/src/video_understanding/utils/circuit_breaker.py
index e69de29..6d0d7fb 100644
--- a/src/video_understanding/utils/circuit_breaker.py
+++ b/src/video_understanding/utils/circuit_breaker.py
@@ -0,0 +1,86 @@
+import time
+import asyncio
+from typing import Callable, Any, TypeVar, cast
+from loguru import logger
+
+T = TypeVar("T")
+
+
+class CircuitBreakerOpenError(Exception):
+    """Error raised when circuit breaker is open."""
+
+    pass
+
+
+class CircuitBreaker:
+    """Circuit breaker implementation for service resiliency."""
+
+    def __init__(self, failure_threshold: int = 5, reset_timeout: int = 60):
+        """Initialize circuit breaker.
+
+        Args:
+            failure_threshold: Number of failures before circuit opens
+            reset_timeout: Seconds to wait before attempting reset
+        """
+        self.failure_threshold = failure_threshold
+        self.reset_timeout = reset_timeout
+        self.failure_count = 0
+        self.is_open = False
+        self.last_failure_time = 0
+
+    async def execute(self, func: Callable[..., T], *args: Any, **kwargs: Any) -> T:
+        """Execute function with circuit breaker protection.
+
+        Args:
+            func: Function to execute
+            *args: Positional arguments
+            **kwargs: Keyword arguments
+
+        Returns:
+            Result of the function
+
+        Raises:
+            CircuitBreakerOpenError: If circuit is open
+            Exception: Original exception if function fails
+        """
+        if self.is_open:
+            current_time = time.time()
+            if current_time - self.last_failure_time >= self.reset_timeout:
+                # Try to reset circuit
+                logger.info("Circuit breaker attempting reset")
+                self.is_open = False
+                self.failure_count = 0
+            else:
+                logger.warning("Circuit breaker open, call rejected")
+                time_remaining = self.reset_timeout - (
+                    current_time - self.last_failure_time
+                )
+                raise CircuitBreakerOpenError(
+                    f"Circuit breaker open. Try again in {time_remaining:.2f}s"
+                )
+
+        try:
+            # Check if function is coroutine
+            if asyncio.iscoroutinefunction(func):
+                result = await func(*args, **kwargs)
+            else:
+                result = func(*args, **kwargs)
+
+            # Successful call, reset failure count
+            self.failure_count = 0
+            return cast(T, result)
+
+        except Exception:
+            self.failure_count += 1
+            self.last_failure_time = time.time()
+
+            if self.failure_count >= self.failure_threshold:
+                logger.error(
+                    f"Circuit breaker threshold exceeded "
+                    f"({self.failure_count}/{self.failure_threshold}). "
+                    f"Opening circuit."
+                )
+                self.is_open = True
+
+            # Re-raise the original exception
+            raise
diff --git a/tests/conftest.py b/tests/conftest.py
index 9de42f3..cd1ed67 100644
--- a/tests/conftest.py
+++ b/tests/conftest.py
@@ -10,7 +10,7 @@ from abc import ABC, abstractmethod
 from collections.abc import Generator
 from pathlib import Path
 from typing import TYPE_CHECKING, Any, TypeVar, Union, cast
-from unittest.mock import MagicMock
+from unittest.mock import MagicMock, patch
 from uuid import UUID
 
 # Third-party imports
@@ -172,9 +172,7 @@ except ImportError:
         """Mock implementation of ProcessingConfig."""
 
         def __init__(
-            self,
-            max_concurrent_uploads: int = 3,
-            test_mode: bool = False
+            self, max_concurrent_uploads: int = 3, test_mode: bool = False
         ) -> None:
             self._max_video_size: int = 100 * 1024 * 1024  # 100MB
             self._max_concurrent_uploads: int = max_concurrent_uploads
@@ -308,13 +306,87 @@ except ImportError:
         type[VideoProcessingStatusType], MockVideoProcessingStatus
     )
 
-# Mock cv2 module
+# Mock cv2 module before any imports
 mock_cv2 = MagicMock()
-mock_cv2.VideoCapture = MagicMock()
-mock_cv2.CAP_PROP_FPS = 5
-mock_cv2.CAP_PROP_FRAME_COUNT = 7
+
+# Video capture and writer
+mock_video_capture = MagicMock()
+mock_video_capture.isOpened.return_value = True
+mock_video_capture.read.return_value = (True, MagicMock())
+mock_video_capture.get.side_effect = [
+    30.0,
+    300,
+    1920,
+    1080,
+]  # fps, frames, width, height
+mock_cv2.VideoCapture = MagicMock(return_value=mock_video_capture)
+mock_cv2.VideoWriter = MagicMock()
+
+# Image operations
+mock_cv2.imread = MagicMock()
+mock_cv2.imwrite = MagicMock()
+mock_cv2.resize = MagicMock()
+mock_cv2.cvtColor = MagicMock()
+
+# Video capture properties
+mock_cv2.CAP_PROP_POS_MSEC = 0
+mock_cv2.CAP_PROP_POS_FRAMES = 1
+mock_cv2.CAP_PROP_POS_AVI_RATIO = 2
 mock_cv2.CAP_PROP_FRAME_WIDTH = 3
 mock_cv2.CAP_PROP_FRAME_HEIGHT = 4
+mock_cv2.CAP_PROP_FPS = 5
+mock_cv2.CAP_PROP_FOURCC = 6
+mock_cv2.CAP_PROP_FRAME_COUNT = 7
+mock_cv2.CAP_PROP_FORMAT = 8
+mock_cv2.CAP_PROP_MODE = 9
+mock_cv2.CAP_PROP_BRIGHTNESS = 10
+mock_cv2.CAP_PROP_CONTRAST = 11
+mock_cv2.CAP_PROP_SATURATION = 12
+mock_cv2.CAP_PROP_HUE = 13
+mock_cv2.CAP_PROP_GAIN = 14
+mock_cv2.CAP_PROP_EXPOSURE = 15
+
+# Color conversion codes
+mock_cv2.COLOR_BGR2GRAY = 100
+mock_cv2.COLOR_RGB2GRAY = 101
+mock_cv2.COLOR_GRAY2BGR = 102
+mock_cv2.COLOR_GRAY2RGB = 103
+mock_cv2.COLOR_BGR2RGB = 104
+mock_cv2.COLOR_RGB2BGR = 105
+
+# Window properties
+mock_cv2.WINDOW_NORMAL = 200
+mock_cv2.WINDOW_AUTOSIZE = 201
+mock_cv2.WINDOW_OPENGL = 202
+
+# Mouse events
+mock_cv2.EVENT_MOUSEMOVE = 300
+mock_cv2.EVENT_LBUTTONDOWN = 301
+mock_cv2.EVENT_RBUTTONDOWN = 302
+mock_cv2.EVENT_MBUTTONDOWN = 303
+mock_cv2.EVENT_LBUTTONUP = 304
+mock_cv2.EVENT_RBUTTONUP = 305
+mock_cv2.EVENT_MBUTTONUP = 306
+mock_cv2.EVENT_LBUTTONDBLCLK = 307
+mock_cv2.EVENT_RBUTTONDBLCLK = 308
+mock_cv2.EVENT_MBUTTONDBLCLK = 309
+
+# Interpolation methods
+mock_cv2.INTER_NEAREST = 400
+mock_cv2.INTER_LINEAR = 401
+mock_cv2.INTER_CUBIC = 402
+mock_cv2.INTER_AREA = 403
+mock_cv2.INTER_LANCZOS4 = 404
+
+# Border types
+mock_cv2.BORDER_CONSTANT = 500
+mock_cv2.BORDER_REPLICATE = 501
+mock_cv2.BORDER_REFLECT = 502
+mock_cv2.BORDER_WRAP = 503
+mock_cv2.BORDER_REFLECT_101 = 504
+mock_cv2.BORDER_TRANSPARENT = 505
+mock_cv2.BORDER_DEFAULT = 506
+mock_cv2.BORDER_ISOLATED = 507
 
 # Apply the mock before any imports
 sys.modules["cv2"] = mock_cv2
@@ -598,13 +670,116 @@ def sample_video() -> Path:
 @pytest.fixture
 def processor_config() -> ProcessingConfigType:
     """Fixture providing a processor configuration for testing."""
-    return ProcessingConfig(
-        max_concurrent_uploads=1,
-        test_mode=True
-    )
+    return ProcessingConfig(max_concurrent_uploads=1, test_mode=True)
 
 
 @pytest.fixture
 def sample_frame() -> np.ndarray:
     """Fixture providing a sample video frame for testing."""
     return np.zeros((1080, 1920, 3), dtype=np.uint8)
+
+
+@pytest.fixture(autouse=True)
+def mock_cv2(monkeypatch):
+    """Mock cv2 module for testing.
+
+    This is an autouse fixture that will be applied to all tests.
+    It properly mocks all cv2 functionality used in the codebase.
+
+    Args:
+        monkeypatch: pytest monkeypatch fixture
+
+    Returns:
+        MagicMock: Mocked cv2 module
+    """
+    # Create the main mock
+    mock_cv2 = MagicMock()
+
+    # Create a mock for VideoCapture
+    mock_video_capture_instance = MagicMock()
+    mock_video_capture_instance.isOpened.return_value = True
+    # Create a real numpy array for read to return
+    real_frame = np.zeros((720, 1280, 3), dtype=np.uint8)
+    mock_video_capture_instance.read.return_value = (True, real_frame)
+    mock_video_capture_instance.release.return_value = None
+
+    # Configure get method to return appropriate values for different properties
+    def mock_get(prop):
+        prop_values = {
+            mock_cv2.CAP_PROP_FRAME_WIDTH: 1280,
+            mock_cv2.CAP_PROP_FRAME_HEIGHT: 720,
+            mock_cv2.CAP_PROP_FPS: 30.0,
+            mock_cv2.CAP_PROP_FRAME_COUNT: 300,
+            mock_cv2.CAP_PROP_POS_FRAMES: 0,
+            mock_cv2.CAP_PROP_POS_MSEC: 0,
+            mock_cv2.CAP_PROP_FOURCC: 828601953,  # 'avc1'
+            mock_cv2.CAP_PROP_FORMAT: 0,
+        }
+        return prop_values.get(prop, 0)
+
+    mock_video_capture_instance.get.side_effect = mock_get
+
+    # Set up VideoCapture class
+    mock_video_capture = MagicMock(return_value=mock_video_capture_instance)
+    mock_cv2.VideoCapture = mock_video_capture
+
+    # Create mock functionality for cv2.cvtColor that returns a real numpy array
+    def mock_cvtColor(src, code):
+        # Just return the source array as is for simplicity
+        return src.copy()
+
+    mock_cv2.cvtColor = mock_cvtColor
+
+    # Set up necessary constants
+    mock_cv2.CAP_PROP_FRAME_WIDTH = 3
+    mock_cv2.CAP_PROP_FRAME_HEIGHT = 4
+    mock_cv2.CAP_PROP_FPS = 5
+    mock_cv2.CAP_PROP_FRAME_COUNT = 7
+    mock_cv2.CAP_PROP_POS_FRAMES = 1
+    mock_cv2.CAP_PROP_POS_MSEC = 0
+    mock_cv2.CAP_PROP_FOURCC = 6
+    mock_cv2.CAP_PROP_FORMAT = 8
+
+    # Set up other commonly used cv2 functions and constants
+    mock_cv2.COLOR_BGR2RGB = 4
+    mock_cv2.COLOR_RGB2BGR = 5
+    mock_cv2.COLOR_BGR2GRAY = 6
+    mock_cv2.COLOR_RGB2GRAY = 7
+    mock_cv2.INTER_LINEAR = 1
+    mock_cv2.INTER_NEAREST = 0
+
+    # Mock common image manipulation functions using real numpy arrays
+    def mock_resize(img, dsize, **kwargs):
+        # Return a real numpy array of the specified size
+        return np.zeros(dsize[::-1] + (3,), dtype=np.uint8)
+
+    mock_cv2.resize = mock_resize
+    mock_cv2.imwrite = MagicMock(return_value=True)
+    mock_cv2.imread = MagicMock(return_value=np.zeros((720, 1280, 3), dtype=np.uint8))
+
+    # Patch cv2 module properly
+    monkeypatch.setitem(sys.modules, "cv2", mock_cv2)
+
+    return mock_cv2
+
+
+@pytest.fixture(autouse=True)
+def mock_pil(monkeypatch):
+    """Mock PIL.Image for testing."""
+    mock_pil_image = MagicMock()
+
+    # Create a class for PIL.Image with proper array interface support
+    class MockImage:
+        @staticmethod
+        def fromarray(array):
+            # Create a MagicMock that has __array_interface__ attribute
+            mock_img = MagicMock()
+            # Set the __array_interface__ attribute as a property
+            mock_img.__array_interface__ = array.__array_interface__
+            # Ensure numpy can access the array interface
+            mock_img.__array__ = lambda *args, **kwargs: array
+            return mock_img
+
+    mock_pil_image.Image = MockImage
+    monkeypatch.setattr("PIL.Image", mock_pil_image.Image)
+    return mock_pil_image
diff --git a/tests/unit/ai/models/test_gpt4v.py b/tests/unit/ai/models/test_gpt4v.py
index 1bb43cf..c3424c9 100644
--- a/tests/unit/ai/models/test_gpt4v.py
+++ b/tests/unit/ai/models/test_gpt4v.py
@@ -6,13 +6,13 @@ from unittest.mock import mock_open, patch
 import pytest
 
 from video_understanding.ai.exceptions import ModelError
-from video_understanding.ai.models.gpt4v import GPT4VisionModel
+from video_understanding.ai.models.gpt4v import GPT4VModel
 
 
 @pytest.fixture
 def model():
     """Create a test model instance."""
-    return GPT4VisionModel(api_key="test_key")
+    return GPT4VModel(config={"api_key": "test_key"})
 
 
 @pytest.fixture
@@ -25,8 +25,8 @@ def test_image(tmp_path):
 
 def test_model_initialization():
     """Test model initialization."""
-    model = GPT4VisionModel(api_key="test_key")
-    assert model.api_key == "test_key"
+    model = GPT4VModel(config={"api_key": "test_key"})
+    assert model.config.api_key == "test_key"
 
 
 @pytest.mark.asyncio
diff --git a/tests/unit/core/test_processing.py b/tests/unit/core/test_processing.py
index 837e5e5..50c535f 100644
--- a/tests/unit/core/test_processing.py
+++ b/tests/unit/core/test_processing.py
@@ -8,6 +8,9 @@ from uuid import uuid4
 import cv2
 import numpy as np
 import pytest
+import os
+import tempfile
+import json
 
 from video_understanding.core.exceptions import ProcessingError, ValidationError
 from video_understanding.core.processing import (
@@ -18,6 +21,13 @@ from video_understanding.core.processing import (
     extract_frames,
     process_video,
     transcribe_audio,
+    VideoProcessingError,
+    VideoFormatError,
+    ProcessingJob,
+    JobStatus,
+    ProcessingContext,
+    ProcessingResult,
+    JobManager,
 )
 from video_understanding.models.video import Video, VideoFile
 
@@ -298,3 +308,886 @@ def test_transcribe_audio_error(sample_video):
     ):
         with pytest.raises(ProcessingError, match="Failed to transcribe audio"):
             transcribe_audio(sample_video)
+
+
+class TestProcessingJob:
+    """Test suite for ProcessingJob class."""
+
+    def test_init(self):
+        """Test initialization of ProcessingJob."""
+        job = ProcessingJob(
+            job_id="test-job-123",
+            video_path="/path/to/video.mp4",
+            user_id="user123",
+            options={"extract_audio": True},
+        )
+
+        assert job.job_id == "test-job-123"
+        assert job.video_path == "/path/to/video.mp4"
+        assert job.user_id == "user123"
+        assert job.options == {"extract_audio": True}
+        assert job.status == JobStatus.PENDING
+        assert job.created_at is not None
+        assert job.updated_at is not None
+        assert job.result is None
+        assert job.error is None
+
+    def test_update_status(self):
+        """Test updating job status."""
+        job = ProcessingJob(job_id="test-job-123", video_path="/path/to/video.mp4")
+
+        job.update_status(JobStatus.PROCESSING)
+        assert job.status == JobStatus.PROCESSING
+
+        job.update_status(JobStatus.COMPLETED)
+        assert job.status == JobStatus.COMPLETED
+
+        # Test that updated_at is changed
+        previous_updated_at = job.updated_at
+
+        # Force a small delay
+        import time
+
+        time.sleep(0.001)
+
+        job.update_status(JobStatus.FAILED)
+        assert job.status == JobStatus.FAILED
+        assert job.updated_at > previous_updated_at
+
+    def test_set_result(self):
+        """Test setting job result."""
+        job = ProcessingJob(job_id="test-job-123", video_path="/path/to/video.mp4")
+        result = ProcessingResult(
+            scene_timestamps=[(0, 10), (10, 20)],
+            extracted_frames=["frame1.jpg", "frame2.jpg"],
+            transcription="Test transcription",
+            metadata={"duration": 30},
+        )
+
+        job.set_result(result)
+
+        assert job.result == result
+        assert job.status == JobStatus.COMPLETED
+
+    def test_set_error(self):
+        """Test setting job error."""
+        job = ProcessingJob(job_id="test-job-123", video_path="/path/to/video.mp4")
+        error = VideoProcessingError("Test error")
+
+        job.set_error(error)
+
+        assert job.error == "Test error"
+        assert job.status == JobStatus.FAILED
+
+    def test_to_dict_and_from_dict(self):
+        """Test conversion to and from dictionary."""
+        original_job = ProcessingJob(
+            job_id="test-job-123",
+            video_path="/path/to/video.mp4",
+            user_id="user123",
+            options={"extract_audio": True},
+        )
+
+        # Add a result
+        result = ProcessingResult(
+            scene_timestamps=[(0, 10), (10, 20)],
+            extracted_frames=["frame1.jpg", "frame2.jpg"],
+            transcription="Test transcription",
+            metadata={"duration": 30},
+        )
+        original_job.set_result(result)
+
+        # Convert to dict
+        job_dict = original_job.to_dict()
+
+        # Create new job from dict
+        new_job = ProcessingJob.from_dict(job_dict)
+
+        # Check that the jobs are equivalent
+        assert new_job.job_id == original_job.job_id
+        assert new_job.video_path == original_job.video_path
+        assert new_job.user_id == original_job.user_id
+        assert new_job.options == original_job.options
+        assert new_job.status == original_job.status
+        assert new_job.created_at == original_job.created_at
+        assert new_job.updated_at == original_job.updated_at
+
+        # Check result
+        assert new_job.result.scene_timestamps == original_job.result.scene_timestamps
+        assert new_job.result.extracted_frames == original_job.result.extracted_frames
+        assert new_job.result.transcription == original_job.result.transcription
+        assert new_job.result.metadata == original_job.result.metadata
+
+    def test_from_dict_with_error(self):
+        """Test from_dict with error state."""
+        job_dict = {
+            "job_id": "test-job-123",
+            "video_path": "/path/to/video.mp4",
+            "user_id": "user123",
+            "options": {"extract_audio": True},
+            "status": "FAILED",
+            "created_at": "2023-01-01T12:00:00.000000",
+            "updated_at": "2023-01-01T12:05:00.000000",
+            "result": None,
+            "error": "Video processing failed: Invalid format",
+        }
+
+        job = ProcessingJob.from_dict(job_dict)
+
+        assert job.job_id == "test-job-123"
+        assert job.status == JobStatus.FAILED
+        assert job.error == "Video processing failed: Invalid format"
+        assert job.result is None
+
+
+class TestProcessingResult:
+    """Test suite for ProcessingResult class."""
+
+    def test_init(self):
+        """Test initialization of ProcessingResult."""
+        result = ProcessingResult(
+            scene_timestamps=[(0, 10), (10, 20)],
+            extracted_frames=["frame1.jpg", "frame2.jpg"],
+            transcription="Test transcription",
+            metadata={"duration": 30},
+        )
+
+        assert result.scene_timestamps == [(0, 10), (10, 20)]
+        assert result.extracted_frames == ["frame1.jpg", "frame2.jpg"]
+        assert result.transcription == "Test transcription"
+        assert result.metadata == {"duration": 30}
+
+    def test_to_dict_and_from_dict(self):
+        """Test conversion to and from dictionary."""
+        original_result = ProcessingResult(
+            scene_timestamps=[(0, 10), (10, 20)],
+            extracted_frames=["frame1.jpg", "frame2.jpg"],
+            transcription="Test transcription",
+            metadata={"duration": 30},
+        )
+
+        # Convert to dict
+        result_dict = original_result.to_dict()
+
+        # Create new result from dict
+        new_result = ProcessingResult.from_dict(result_dict)
+
+        # Check that the results are equivalent
+        assert new_result.scene_timestamps == original_result.scene_timestamps
+        assert new_result.extracted_frames == original_result.extracted_frames
+        assert new_result.transcription == original_result.transcription
+        assert new_result.metadata == original_result.metadata
+
+
+class TestProcessingContext:
+    """Test suite for ProcessingContext class."""
+
+    def test_init(self):
+        """Test initialization of ProcessingContext."""
+        with tempfile.TemporaryDirectory() as temp_dir:
+            context = ProcessingContext(
+                job_id="test-job-123",
+                video_path="/path/to/video.mp4",
+                temp_dir=temp_dir,
+                output_dir="/path/to/output",
+            )
+
+            assert context.job_id == "test-job-123"
+            assert context.video_path == "/path/to/video.mp4"
+            assert context.temp_dir == temp_dir
+            assert context.output_dir == "/path/to/output"
+            assert context.artifacts == {}
+            assert context.metadata == {}
+
+    def test_add_artifact(self):
+        """Test adding an artifact to the context."""
+        with tempfile.TemporaryDirectory() as temp_dir:
+            context = ProcessingContext(
+                job_id="test-job-123",
+                video_path="/path/to/video.mp4",
+                temp_dir=temp_dir,
+            )
+
+            context.add_artifact(
+                "frames", ["/path/to/frame1.jpg", "/path/to/frame2.jpg"]
+            )
+
+            assert "frames" in context.artifacts
+            assert context.artifacts["frames"] == [
+                "/path/to/frame1.jpg",
+                "/path/to/frame2.jpg",
+            ]
+
+    def test_add_metadata(self):
+        """Test adding metadata to the context."""
+        with tempfile.TemporaryDirectory() as temp_dir:
+            context = ProcessingContext(
+                job_id="test-job-123",
+                video_path="/path/to/video.mp4",
+                temp_dir=temp_dir,
+            )
+
+            context.add_metadata("duration", 30)
+            context.add_metadata("format", "mp4")
+
+            assert context.metadata == {"duration": 30, "format": "mp4"}
+
+    def test_get_temp_file_path(self):
+        """Test getting a temporary file path."""
+        with tempfile.TemporaryDirectory() as temp_dir:
+            context = ProcessingContext(
+                job_id="test-job-123",
+                video_path="/path/to/video.mp4",
+                temp_dir=temp_dir,
+            )
+
+            path = context.get_temp_file_path("audio.wav")
+
+            assert os.path.dirname(path) == temp_dir
+            assert os.path.basename(path) == "audio.wav"
+
+    def test_get_output_file_path(self):
+        """Test getting an output file path."""
+        with tempfile.TemporaryDirectory() as temp_dir:
+            context = ProcessingContext(
+                job_id="test-job-123",
+                video_path="/path/to/video.mp4",
+                temp_dir=temp_dir,
+                output_dir="/path/to/output",
+            )
+
+            path = context.get_output_file_path("transcription.json")
+
+            assert os.path.dirname(path) == "/path/to/output"
+            assert os.path.basename(path) == "transcription.json"
+
+    def test_create_dirs(self):
+        """Test creating directories."""
+        with tempfile.TemporaryDirectory() as temp_dir:
+            output_dir = os.path.join(temp_dir, "output")
+
+            context = ProcessingContext(
+                job_id="test-job-123",
+                video_path="/path/to/video.mp4",
+                temp_dir=os.path.join(temp_dir, "temp"),
+                output_dir=output_dir,
+            )
+
+            context.create_dirs()
+
+            assert os.path.exists(context.temp_dir)
+            assert os.path.exists(context.output_dir)
+
+    def test_cleanup(self):
+        """Test cleaning up temporary files."""
+        with tempfile.TemporaryDirectory() as temp_dir:
+            context = ProcessingContext(
+                job_id="test-job-123",
+                video_path="/path/to/video.mp4",
+                temp_dir=temp_dir,
+            )
+
+            # Create a test file
+            test_file = os.path.join(temp_dir, "test.txt")
+            with open(test_file, "w") as f:
+                f.write("test")
+
+            assert os.path.exists(test_file)
+
+            # Clean up
+            with patch("shutil.rmtree") as mock_rmtree:
+                context.cleanup()
+                mock_rmtree.assert_called_once_with(temp_dir, ignore_errors=True)
+
+
+class TestVideoProcessor:
+    """Test suite for VideoProcessor class."""
+
+    def setup_method(self):
+        """Set up test environment."""
+        self.processor = VideoProcessor()
+        self.test_video_path = "/path/to/test.mp4"
+
+    @patch("os.path.exists")
+    @patch("os.path.getsize")
+    def test_validate_video_exists(self, mock_getsize, mock_exists):
+        """Test validation for video existence."""
+        # Video exists
+        mock_exists.return_value = True
+        mock_getsize.return_value = 1024 * 1024  # 1MB
+
+        self.processor.validate_video(self.test_video_path)
+
+        # Video doesn't exist
+        mock_exists.return_value = False
+
+        with pytest.raises(VideoProcessingError, match="Video file does not exist"):
+            self.processor.validate_video(self.test_video_path)
+
+    @patch("os.path.exists")
+    @patch("os.path.getsize")
+    def test_validate_video_size(self, mock_getsize, mock_exists):
+        """Test validation for video size."""
+        mock_exists.return_value = True
+
+        # Valid size
+        mock_getsize.return_value = 1024 * 1024  # 1MB
+
+        self.processor.validate_video(self.test_video_path)
+
+        # Too large
+        mock_getsize.return_value = (
+            3000 * 1024 * 1024
+        )  # 3000MB (exceeds default 2000MB)
+
+        with pytest.raises(
+            VideoProcessingError, match="Video file exceeds maximum size"
+        ):
+            self.processor.validate_video(self.test_video_path)
+
+    @patch("os.path.exists")
+    @patch("os.path.getsize")
+    @patch("video_understanding.core.processing.get_video_metadata")
+    def test_validate_video_format(self, mock_get_metadata, mock_getsize, mock_exists):
+        """Test validation for video format."""
+        mock_exists.return_value = True
+        mock_getsize.return_value = 1024 * 1024  # 1MB
+
+        # Valid format
+        mock_get_metadata.return_value = {"format": "mp4", "duration": 60}
+
+        self.processor.validate_video(self.test_video_path)
+
+        # Invalid format
+        mock_get_metadata.return_value = {"format": "xyz", "duration": 60}
+
+        with pytest.raises(VideoFormatError, match="Unsupported video format"):
+            self.processor.validate_video(self.test_video_path)
+
+    @patch("os.path.exists")
+    @patch("os.path.getsize")
+    @patch("video_understanding.core.processing.get_video_metadata")
+    def test_validate_video_duration(
+        self, mock_get_metadata, mock_getsize, mock_exists
+    ):
+        """Test validation for video duration."""
+        mock_exists.return_value = True
+        mock_getsize.return_value = 1024 * 1024  # 1MB
+
+        # Valid duration
+        mock_get_metadata.return_value = {"format": "mp4", "duration": 60}
+
+        self.processor.validate_video(self.test_video_path)
+
+        # Too long
+        mock_get_metadata.return_value = {"format": "mp4", "duration": 7200}  # 2 hours
+
+        with pytest.raises(
+            VideoProcessingError, match="Video duration exceeds maximum"
+        ):
+            self.processor.validate_video(self.test_video_path)
+
+    @patch("video_understanding.core.processing.uuid.uuid4")
+    def test_create_job_id(self, mock_uuid4):
+        """Test creation of job ID."""
+        mock_uuid4.return_value = "test-uuid"
+
+        job_id = self.processor._create_job_id()
+
+        assert job_id == "test-uuid"
+
+    @patch("video_understanding.core.processing.VideoProcessor.validate_video")
+    @patch("video_understanding.core.processing.VideoProcessor._create_job_id")
+    @patch("video_understanding.core.processing.tempfile.mkdtemp")
+    def test_create_processing_context(
+        self, mock_mkdtemp, mock_create_job_id, mock_validate
+    ):
+        """Test creation of processing context."""
+        mock_create_job_id.return_value = "test-job-123"
+        mock_mkdtemp.return_value = "/tmp/test_dir"
+
+        context = self.processor._create_processing_context(self.test_video_path)
+
+        assert context.job_id == "test-job-123"
+        assert context.video_path == self.test_video_path
+        assert context.temp_dir == "/tmp/test_dir"
+        assert context.output_dir == self.processor.config.processed_dir
+
+    @patch("video_understanding.core.processing.detect_scenes")
+    def test_extract_scenes(self, mock_detect_scenes):
+        """Test scene extraction."""
+        mock_detect_scenes.return_value = [(0, 10), (10, 20)]
+
+        with tempfile.TemporaryDirectory() as temp_dir:
+            context = ProcessingContext(
+                job_id="test-job-123",
+                video_path=self.test_video_path,
+                temp_dir=temp_dir,
+            )
+
+            self.processor._extract_scenes(context)
+
+            assert "scene_timestamps" in context.artifacts
+            assert context.artifacts["scene_timestamps"] == [(0, 10), (10, 20)]
+
+    @patch("video_understanding.core.processing.extract_audio")
+    def test_extract_audio(self, mock_extract_audio):
+        """Test audio extraction."""
+        mock_extract_audio.return_value = "/tmp/test_dir/audio.wav"
+
+        with tempfile.TemporaryDirectory() as temp_dir:
+            context = ProcessingContext(
+                job_id="test-job-123",
+                video_path=self.test_video_path,
+                temp_dir=temp_dir,
+            )
+
+            self.processor._extract_audio(context)
+
+            assert "audio_path" in context.artifacts
+            assert context.artifacts["audio_path"] == "/tmp/test_dir/audio.wav"
+
+    @patch("video_understanding.core.processing.transcribe_audio")
+    def test_transcribe_audio(self, mock_transcribe):
+        """Test audio transcription."""
+        mock_transcribe.return_value = {
+            "text": "This is a test transcription.",
+            "segments": [{"start": 0, "end": 5, "text": "This is a test"}],
+        }
+
+        with tempfile.TemporaryDirectory() as temp_dir:
+            context = ProcessingContext(
+                job_id="test-job-123",
+                video_path=self.test_video_path,
+                temp_dir=temp_dir,
+            )
+
+            # Add audio path artifact
+            context.add_artifact("audio_path", "/tmp/test_dir/audio.wav")
+
+            self.processor._transcribe_audio(context)
+
+            assert "transcription" in context.artifacts
+            assert (
+                context.artifacts["transcription"]["text"]
+                == "This is a test transcription."
+            )
+            assert len(context.artifacts["transcription"]["segments"]) == 1
+
+    @patch("video_understanding.core.processing.extract_frames")
+    def test_extract_frames(self, mock_extract_frames):
+        """Test frame extraction."""
+        mock_extract_frames.return_value = [
+            "/tmp/test_dir/frame1.jpg",
+            "/tmp/test_dir/frame2.jpg",
+        ]
+
+        with tempfile.TemporaryDirectory() as temp_dir:
+            context = ProcessingContext(
+                job_id="test-job-123",
+                video_path=self.test_video_path,
+                temp_dir=temp_dir,
+            )
+
+            self.processor._extract_frames(context)
+
+            assert "extracted_frames" in context.artifacts
+            assert len(context.artifacts["extracted_frames"]) == 2
+
+    @patch("video_understanding.core.processing.extract_text_from_frames")
+    def test_extract_text_from_frames(self, mock_extract_text):
+        """Test text extraction from frames."""
+        mock_extract_text.return_value = {
+            "/tmp/test_dir/frame1.jpg": "Text from frame 1",
+            "/tmp/test_dir/frame2.jpg": "Text from frame 2",
+        }
+
+        with tempfile.TemporaryDirectory() as temp_dir:
+            context = ProcessingContext(
+                job_id="test-job-123",
+                video_path=self.test_video_path,
+                temp_dir=temp_dir,
+            )
+
+            # Add extracted frames artifact
+            context.add_artifact(
+                "extracted_frames",
+                ["/tmp/test_dir/frame1.jpg", "/tmp/test_dir/frame2.jpg"],
+            )
+
+            self.processor._extract_text_from_frames(context)
+
+            assert "extracted_text" in context.artifacts
+            assert len(context.artifacts["extracted_text"]) == 2
+            assert (
+                context.artifacts["extracted_text"]["/tmp/test_dir/frame1.jpg"]
+                == "Text from frame 1"
+            )
+
+    def test_create_processing_result(self):
+        """Test creation of processing result."""
+        with tempfile.TemporaryDirectory() as temp_dir:
+            context = ProcessingContext(
+                job_id="test-job-123",
+                video_path=self.test_video_path,
+                temp_dir=temp_dir,
+            )
+
+            # Add artifacts
+            context.add_artifact("scene_timestamps", [(0, 10), (10, 20)])
+            context.add_artifact(
+                "extracted_frames",
+                ["/tmp/test_dir/frame1.jpg", "/tmp/test_dir/frame2.jpg"],
+            )
+            context.add_artifact(
+                "transcription",
+                {
+                    "text": "This is a test transcription.",
+                    "segments": [{"start": 0, "end": 5, "text": "This is a test"}],
+                },
+            )
+
+            # Add metadata
+            context.add_metadata("duration", 30)
+            context.add_metadata("format", "mp4")
+
+            result = self.processor._create_processing_result(context)
+
+            assert result.scene_timestamps == [(0, 10), (10, 20)]
+            assert result.extracted_frames == [
+                "/tmp/test_dir/frame1.jpg",
+                "/tmp/test_dir/frame2.jpg",
+            ]
+            assert result.transcription == {
+                "text": "This is a test transcription.",
+                "segments": [{"start": 0, "end": 5, "text": "This is a test"}],
+            }
+            assert result.metadata == {"duration": 30, "format": "mp4"}
+
+    @patch("video_understanding.core.processing.VideoProcessor._create_job_id")
+    @patch("video_understanding.core.processing.VideoProcessor.validate_video")
+    @patch(
+        "video_understanding.core.processing.VideoProcessor._create_processing_context"
+    )
+    @patch("video_understanding.core.processing.VideoProcessor._extract_scenes")
+    @patch("video_understanding.core.processing.VideoProcessor._extract_audio")
+    @patch("video_understanding.core.processing.VideoProcessor._transcribe_audio")
+    @patch("video_understanding.core.processing.VideoProcessor._extract_frames")
+    @patch(
+        "video_understanding.core.processing.VideoProcessor._extract_text_from_frames"
+    )
+    @patch(
+        "video_understanding.core.processing.VideoProcessor._create_processing_result"
+    )
+    def test_process_video_success(
+        self,
+        mock_create_result,
+        mock_extract_text,
+        mock_extract_frames,
+        mock_transcribe,
+        mock_extract_audio,
+        mock_extract_scenes,
+        mock_create_context,
+        mock_validate,
+        mock_create_job_id,
+    ):
+        """Test successful video processing."""
+        # Set up mocks
+        mock_create_job_id.return_value = "test-job-123"
+        mock_validate.return_value = None
+
+        context = ProcessingContext(
+            job_id="test-job-123",
+            video_path=self.test_video_path,
+            temp_dir="/tmp/test_dir",
+        )
+        mock_create_context.return_value = context
+
+        result = ProcessingResult(
+            scene_timestamps=[(0, 10), (10, 20)],
+            extracted_frames=["/tmp/test_dir/frame1.jpg", "/tmp/test_dir/frame2.jpg"],
+            transcription="Test transcription",
+            metadata={"duration": 30},
+        )
+        mock_create_result.return_value = result
+
+        # Call the method
+        job = self.processor.process_video(self.test_video_path)
+
+        # Verify the job was created correctly
+        assert job.job_id == "test-job-123"
+        assert job.video_path == self.test_video_path
+        assert job.status == JobStatus.COMPLETED
+        assert job.result == result
+
+        # Verify that all the processing steps were called
+        mock_validate.assert_called_once_with(self.test_video_path)
+        mock_create_context.assert_called_once_with(self.test_video_path)
+        mock_extract_scenes.assert_called_once_with(context)
+        mock_extract_audio.assert_called_once_with(context)
+        mock_transcribe.assert_called_once_with(context)
+        mock_extract_frames.assert_called_once_with(context)
+        mock_extract_text.assert_called_once_with(context)
+        mock_create_result.assert_called_once_with(context)
+
+    @patch("video_understanding.core.processing.VideoProcessor._create_job_id")
+    @patch("video_understanding.core.processing.VideoProcessor.validate_video")
+    @patch(
+        "video_understanding.core.processing.VideoProcessor._create_processing_context"
+    )
+    def test_process_video_error(
+        self, mock_create_context, mock_validate, mock_create_job_id
+    ):
+        """Test video processing with error."""
+        # Set up mocks
+        mock_create_job_id.return_value = "test-job-123"
+        mock_validate.side_effect = VideoFormatError("Unsupported video format: xyz")
+
+        # Call the method
+        job = self.processor.process_video(self.test_video_path)
+
+        # Verify the job was created with error
+        assert job.job_id == "test-job-123"
+        assert job.video_path == self.test_video_path
+        assert job.status == JobStatus.FAILED
+        assert job.error == "Unsupported video format: xyz"
+        assert job.result is None
+
+
+class TestJobManager:
+    """Test suite for JobManager class."""
+
+    def setup_method(self):
+        """Set up test environment."""
+        self.temp_dir = tempfile.TemporaryDirectory()
+        self.job_store_path = os.path.join(self.temp_dir.name, "jobs.json")
+        self.manager = JobManager(job_store_path=self.job_store_path)
+
+    def teardown_method(self):
+        """Clean up test environment."""
+        self.temp_dir.cleanup()
+
+    def test_add_job(self):
+        """Test adding a job to the manager."""
+        job = ProcessingJob(
+            job_id="test-job-123", video_path="/path/to/video.mp4", user_id="user123"
+        )
+
+        self.manager.add_job(job)
+
+        assert len(self.manager.jobs) == 1
+        assert self.manager.jobs[0].job_id == "test-job-123"
+
+    def test_get_job(self):
+        """Test getting a job by ID."""
+        job1 = ProcessingJob(job_id="test-job-123", video_path="/path/to/video1.mp4")
+
+        job2 = ProcessingJob(job_id="test-job-456", video_path="/path/to/video2.mp4")
+
+        self.manager.add_job(job1)
+        self.manager.add_job(job2)
+
+        # Get existing job
+        retrieved_job = self.manager.get_job("test-job-123")
+        assert retrieved_job.job_id == "test-job-123"
+        assert retrieved_job.video_path == "/path/to/video1.mp4"
+
+        # Get non-existent job
+        assert self.manager.get_job("non-existent") is None
+
+    def test_get_jobs_by_status(self):
+        """Test getting jobs by status."""
+        job1 = ProcessingJob(job_id="test-job-123", video_path="/path/to/video1.mp4")
+        job1.update_status(JobStatus.PROCESSING)
+
+        job2 = ProcessingJob(job_id="test-job-456", video_path="/path/to/video2.mp4")
+        job2.update_status(JobStatus.COMPLETED)
+
+        job3 = ProcessingJob(job_id="test-job-789", video_path="/path/to/video3.mp4")
+        job3.update_status(JobStatus.FAILED)
+
+        self.manager.add_job(job1)
+        self.manager.add_job(job2)
+        self.manager.add_job(job3)
+
+        processing_jobs = self.manager.get_jobs_by_status(JobStatus.PROCESSING)
+        completed_jobs = self.manager.get_jobs_by_status(JobStatus.COMPLETED)
+        failed_jobs = self.manager.get_jobs_by_status(JobStatus.FAILED)
+
+        assert len(processing_jobs) == 1
+        assert processing_jobs[0].job_id == "test-job-123"
+
+        assert len(completed_jobs) == 1
+        assert completed_jobs[0].job_id == "test-job-456"
+
+        assert len(failed_jobs) == 1
+        assert failed_jobs[0].job_id == "test-job-789"
+
+    def test_get_jobs_by_user(self):
+        """Test getting jobs by user ID."""
+        job1 = ProcessingJob(
+            job_id="test-job-123", video_path="/path/to/video1.mp4", user_id="user123"
+        )
+
+        job2 = ProcessingJob(
+            job_id="test-job-456", video_path="/path/to/video2.mp4", user_id="user456"
+        )
+
+        job3 = ProcessingJob(
+            job_id="test-job-789", video_path="/path/to/video3.mp4", user_id="user123"
+        )
+
+        self.manager.add_job(job1)
+        self.manager.add_job(job2)
+        self.manager.add_job(job3)
+
+        user123_jobs = self.manager.get_jobs_by_user("user123")
+        user456_jobs = self.manager.get_jobs_by_user("user456")
+
+        assert len(user123_jobs) == 2
+        assert user123_jobs[0].job_id == "test-job-123"
+        assert user123_jobs[1].job_id == "test-job-789"
+
+        assert len(user456_jobs) == 1
+        assert user456_jobs[0].job_id == "test-job-456"
+
+    @patch("json.dump")
+    def test_save_jobs(self, mock_dump):
+        """Test saving jobs to file."""
+        job1 = ProcessingJob(job_id="test-job-123", video_path="/path/to/video1.mp4")
+
+        job2 = ProcessingJob(job_id="test-job-456", video_path="/path/to/video2.mp4")
+
+        self.manager.add_job(job1)
+        self.manager.add_job(job2)
+
+        self.manager.save_jobs()
+
+        # Verify json.dump was called with the correct arguments
+        mock_dump.assert_called_once()
+        args, kwargs = mock_dump.call_args
+        job_list = args[0]
+
+        assert len(job_list) == 2
+        assert job_list[0]["job_id"] == "test-job-123"
+        assert job_list[1]["job_id"] == "test-job-456"
+
+    @patch("json.load")
+    @patch("os.path.exists")
+    def test_load_jobs(self, mock_exists, mock_load):
+        """Test loading jobs from file."""
+        # Set up mocks
+        mock_exists.return_value = True
+        mock_load.return_value = [
+            {
+                "job_id": "test-job-123",
+                "video_path": "/path/to/video1.mp4",
+                "user_id": "user123",
+                "options": {},
+                "status": "COMPLETED",
+                "created_at": "2023-01-01T12:00:00.000000",
+                "updated_at": "2023-01-01T12:05:00.000000",
+                "result": {
+                    "scene_timestamps": [[0, 10], [10, 20]],
+                    "extracted_frames": ["frame1.jpg", "frame2.jpg"],
+                    "transcription": "Test transcription",
+                    "metadata": {"duration": 30},
+                },
+                "error": None,
+            },
+            {
+                "job_id": "test-job-456",
+                "video_path": "/path/to/video2.mp4",
+                "user_id": "user456",
+                "options": {},
+                "status": "FAILED",
+                "created_at": "2023-01-01T13:00:00.000000",
+                "updated_at": "2023-01-01T13:05:00.000000",
+                "result": None,
+                "error": "Test error",
+            },
+        ]
+
+        # Call the method
+        self.manager.load_jobs()
+
+        # Verify the jobs were loaded correctly
+        assert len(self.manager.jobs) == 2
+
+        job1 = self.manager.get_job("test-job-123")
+        assert job1.job_id == "test-job-123"
+        assert job1.user_id == "user123"
+        assert job1.status == JobStatus.COMPLETED
+        assert job1.result.scene_timestamps == [(0, 10), (10, 20)]
+
+        job2 = self.manager.get_job("test-job-456")
+        assert job2.job_id == "test-job-456"
+        assert job2.user_id == "user456"
+        assert job2.status == JobStatus.FAILED
+        assert job2.error == "Test error"
+
+    @patch("os.path.exists")
+    def test_load_jobs_file_not_exists(self, mock_exists):
+        """Test loading jobs when file doesn't exist."""
+        # Set up mock
+        mock_exists.return_value = False
+
+        # Call the method
+        self.manager.load_jobs()
+
+        # Verify no jobs were loaded
+        assert len(self.manager.jobs) == 0
+
+    def test_update_job(self):
+        """Test updating a job."""
+        job = ProcessingJob(job_id="test-job-123", video_path="/path/to/video.mp4")
+
+        self.manager.add_job(job)
+
+        # Verify initial state
+        assert self.manager.get_job("test-job-123").status == JobStatus.PENDING
+
+        # Update job
+        job.update_status(JobStatus.COMPLETED)
+        self.manager.update_job(job)
+
+        # Verify updated state
+        assert self.manager.get_job("test-job-123").status == JobStatus.COMPLETED
+
+    def test_remove_job(self):
+        """Test removing a job."""
+        job1 = ProcessingJob(job_id="test-job-123", video_path="/path/to/video1.mp4")
+
+        job2 = ProcessingJob(job_id="test-job-456", video_path="/path/to/video2.mp4")
+
+        self.manager.add_job(job1)
+        self.manager.add_job(job2)
+
+        # Verify initial state
+        assert len(self.manager.jobs) == 2
+
+        # Remove job
+        self.manager.remove_job("test-job-123")
+
+        # Verify updated state
+        assert len(self.manager.jobs) == 1
+        assert self.manager.get_job("test-job-123") is None
+        assert self.manager.get_job("test-job-456") is not None
+
+    def test_clear_jobs(self):
+        """Test clearing all jobs."""
+        job1 = ProcessingJob(job_id="test-job-123", video_path="/path/to/video1.mp4")
+
+        job2 = ProcessingJob(job_id="test-job-456", video_path="/path/to/video2.mp4")
+
+        self.manager.add_job(job1)
+        self.manager.add_job(job2)
+
+        # Verify initial state
+        assert len(self.manager.jobs) == 2
+
+        # Clear jobs
+        self.manager.clear_jobs()
+
+        # Verify updated state
+        assert len(self.manager.jobs) == 0
diff --git a/tests/unit/test_detection.py b/tests/unit/test_detection.py
index f4654b1..0c831aa 100644
--- a/tests/unit/test_detection.py
+++ b/tests/unit/test_detection.py
@@ -1,62 +1,112 @@
 import pytest
 from unittest.mock import Mock, patch
 import numpy as np
-from src.core.processing.detection import SceneDetector, ObjectDetector
+from pathlib import Path
+from video_understanding.core.upload.scene import SceneDetector
+from video_understanding.core.upload.detection import ObjectDetector, DetectedObject
+import cv2
 
 class TestSceneDetection:
     def setup_method(self):
         """Set up test fixtures before each test method."""
         self.frame_data = np.zeros((1920, 1080, 3), dtype=np.uint8)
-        self.test_video_path = "tests/fixtures/sample_video.mp4"
+        self.test_video_path = Path("tests/fixtures/sample_video.mp4")
 
-    def test_scene_boundary_detection(self):
+    @pytest.mark.asyncio
+    async def test_scene_boundary_detection(self):
         """Test detection of scene boundaries."""
         with patch('cv2.VideoCapture') as mock_capture:
             mock_capture.return_value.read.return_value = (True, self.frame_data)
+            mock_capture.return_value.get.side_effect = lambda prop: {
+                cv2.CAP_PROP_FPS: 30.0,
+                cv2.CAP_PROP_FRAME_COUNT: 300
+            }.get(prop, 0)
+
             detector = SceneDetector()
-            scenes = detector.detect_scenes(self.test_video_path)
-            assert len(scenes) > 0
+            scenes = await detector.detect(self.test_video_path)
+
+            assert isinstance(scenes, list)
             assert all(isinstance(scene, dict) for scene in scenes)
             assert all("start_time" in scene for scene in scenes)
+            assert all("end_time" in scene for scene in scenes)
 
-    def test_minimum_scene_length(self):
+    @pytest.mark.asyncio
+    async def test_minimum_scene_length(self):
         """Test enforcement of minimum scene length."""
-        detector = SceneDetector(min_scene_length=2.0)
-        scenes = detector.detect_scenes(self.test_video_path)
-        scene_lengths = [scene["end_time"] - scene["start_time"] for scene in scenes]
-        assert all(length >= 2.0 for length in scene_lengths)
+        detector = SceneDetector()
+        detector.set_min_scene_duration(2.0)
+
+        with patch('cv2.VideoCapture') as mock_capture:
+            mock_capture.return_value.read.return_value = (True, self.frame_data)
+            mock_capture.return_value.get.side_effect = lambda prop: {
+                cv2.CAP_PROP_FPS: 30.0,
+                cv2.CAP_PROP_FRAME_COUNT: 300
+            }.get(prop, 0)
+
+            scenes = await detector.detect(self.test_video_path)
+            scene_lengths = [scene["end_time"] - scene["start_time"] for scene in scenes]
+            assert all(length >= 2.0 for length in scene_lengths)
 
-    def test_maximum_scenes_limit(self):
+    @pytest.mark.asyncio
+    async def test_maximum_scenes_limit(self):
         """Test enforcement of maximum scenes limit."""
-        detector = SceneDetector(max_scenes=5)
-        scenes = detector.detect_scenes(self.test_video_path)
-        assert len(scenes) <= 5
+        detector = SceneDetector()
+        detector.set_max_scenes(5)
+
+        with patch('cv2.VideoCapture') as mock_capture:
+            mock_capture.return_value.read.return_value = (True, self.frame_data)
+            mock_capture.return_value.get.side_effect = lambda prop: {
+                cv2.CAP_PROP_FPS: 30.0,
+                cv2.CAP_PROP_FRAME_COUNT: 300
+            }.get(prop, 0)
+
+            scenes = await detector.detect(self.test_video_path)
+            assert len(scenes) <= 5
 
 class TestObjectDetection:
     def setup_method(self):
         """Set up test fixtures before each test method."""
-        self.frame = np.zeros((1920, 1080, 3), dtype=np.uint8)
+        # Create a test frame with proper dimensions and format
+        self.frame = np.zeros((480, 640, 3), dtype=np.uint8)  # Standard VGA size
+        # Add a simple shape to the frame
+        cv2.rectangle(self.frame, (100, 100), (200, 200), (255, 255, 255), -1)
 
-    def test_object_detection_results(self):
+    @patch('ultralytics.YOLO')
+    def test_object_detection_results(self, mock_yolo):
         """Test basic object detection functionality."""
+        # Mock YOLO results
+        mock_results = Mock()
+        mock_box = Mock()
+        mock_box.conf = Mock(item=lambda: 0.9)
+        mock_box.cls = Mock(item=lambda: 0)
+        mock_box.xyxy = [np.array([10, 20, 30, 40])]
+        mock_results.boxes = [mock_box]
+        mock_results.names = {0: "person"}
+        mock_yolo.return_value.return_value = [mock_results]
+
         detector = ObjectDetector()
         results = detector.detect_objects(self.frame)
+
         assert isinstance(results, list)
-        for obj in results:
-            assert "label" in obj
-            assert "confidence" in obj
-            assert "bbox" in obj
+        assert len(results) > 0
+        assert isinstance(results[0], DetectedObject)
+        assert results[0].label == "person"
+        assert results[0].confidence == 0.9
+        assert len(results[0].bbox) == 4
 
-    def test_confidence_threshold(self):
+    @patch('ultralytics.YOLO')
+    def test_confidence_threshold(self, mock_yolo):
         """Test confidence threshold filtering."""
+        # Mock YOLO results
+        mock_results = Mock()
+        mock_box = Mock()
+        mock_box.conf = Mock(item=lambda: 0.85)
+        mock_box.cls = Mock(item=lambda: 0)
+        mock_box.xyxy = [np.array([10, 20, 30, 40])]
+        mock_results.boxes = [mock_box]
+        mock_results.names = {0: "person"}
+        mock_yolo.return_value.return_value = [mock_results]
+
         detector = ObjectDetector(confidence_threshold=0.8)
         results = detector.detect_objects(self.frame)
-        assert all(obj["confidence"] >= 0.8 for obj in results)
-
-    def test_batch_processing(self):
-        """Test batch processing of frames."""
-        frames = [self.frame] * 5
-        detector = ObjectDetector()
-        batch_results = detector.process_batch(frames)
-        assert len(batch_results) == 5
-        assert all(isinstance(frame_results, list) for frame_results in batch_results)
+        assert all(obj.confidence >= 0.8 for obj in results)
diff --git a/tests/unit/test_error_handling.py b/tests/unit/test_error_handling.py
index f1d9ea2..51c8d4f 100644
--- a/tests/unit/test_error_handling.py
+++ b/tests/unit/test_error_handling.py
@@ -1,32 +1,29 @@
 """Unit tests for error handling and edge cases."""
 
-import queue
-import subprocess
 import tempfile
-import threading
 from pathlib import Path
-from typing import Any
+from typing import Dict
+from uuid import uuid4
 
 import cv2
 import numpy as np
 import pytest
 from pytest import MonkeyPatch
 
-from video_understanding.ai.pipeline import ProcessingConfig, VideoPipeline
-from video_understanding.core.config import VideoConfig
 from video_understanding.core.exceptions import (
     ConfigurationError,
     FileValidationError,
-    ModelError,
     ProcessingError,
-    StorageError,
 )
-from video_understanding.storage.vector import VectorStorage
-from video_understanding.video.upload import VideoUploader
-
+from video_understanding.core.upload.config import ProcessorConfig
+from video_understanding.core.upload.processor import VideoProcessor
+from video_understanding.core.upload.scene import SceneDetector
+from video_understanding.core.upload.detection import ObjectDetector
+from video_understanding.core.upload.ocr import OCRProcessor
+from video_understanding.models.video import Video, VideoFile, VideoProcessingInfo
 
 @pytest.fixture
-def mock_env_vars(monkeypatch: MonkeyPatch) -> dict[str, str]:
+def mock_env_vars(monkeypatch: MonkeyPatch) -> Dict[str, str]:
     """Mock environment variables for testing."""
     env_vars = {
         "OPENAI_API_KEY": "test_openai_key",
@@ -37,359 +34,163 @@ def mock_env_vars(monkeypatch: MonkeyPatch) -> dict[str, str]:
         monkeypatch.setenv(key, value)
     return env_vars
 
-
 def test_file_validation_errors() -> None:
     """Test various file validation error scenarios."""
-    config = VideoConfig()
-    uploader = VideoUploader(config)
+    processor = VideoProcessor(ProcessorConfig())
 
     # Test non-existent file
-    with pytest.raises(FileValidationError, match="File does not exist"):
-        uploader.validate_file("nonexistent.mp4")
+    with pytest.raises(FileValidationError, match="File not found"):
+        file_info = VideoFile(
+            filename="nonexistent.mp4",
+            file_path=Path("nonexistent.mp4"),
+            format="mp4",
+            file_size=0
+        )
+        video = Video(
+            id=uuid4(),
+            file_info=file_info,
+            processing=VideoProcessingInfo()
+        )
+        processor.process(video)
 
     # Test empty file
     with tempfile.NamedTemporaryFile(suffix=".mp4") as tf:
+        file_info = VideoFile(
+            filename=Path(tf.name).name,
+            file_path=Path(tf.name),
+            format="mp4",
+            file_size=0
+        )
+        video = Video(
+            id=uuid4(),
+            file_info=file_info,
+            processing=VideoProcessingInfo()
+        )
         with pytest.raises(FileValidationError, match="File is empty"):
-            uploader.validate_file(tf.name)
+            processor.process(video)
 
     # Test invalid extension
     with tempfile.NamedTemporaryFile(suffix=".invalid") as tf:
+        file_info = VideoFile(
+            filename=Path(tf.name).name,
+            file_path=Path(tf.name),
+            format="invalid",
+            file_size=0
+        )
+        video = Video(
+            id=uuid4(),
+            file_info=file_info,
+            processing=VideoProcessingInfo()
+        )
         with pytest.raises(FileValidationError, match="Unsupported format"):
-            uploader.validate_file(tf.name)
-
+            processor.process(video)
 
-def test_processing_errors(mock_env_vars: dict[str, str]) -> None:
+def test_processing_errors() -> None:
     """Test video processing error scenarios."""
-    config = ProcessingConfig()
-    pipeline = VideoPipeline(config)
+    processor = VideoProcessor(ProcessorConfig())
 
     # Test corrupted video
     with tempfile.NamedTemporaryFile(suffix=".mp4") as tf:
         tf.write(b"corrupted data")
         tf.flush()
+        file_info = VideoFile(
+            filename=Path(tf.name).name,
+            file_path=Path(tf.name),
+            format="mp4",
+            file_size=len(b"corrupted data")
+        )
+        video = Video(
+            id=uuid4(),
+            file_info=file_info,
+            processing=VideoProcessingInfo()
+        )
         with pytest.raises(ProcessingError):
-            pipeline.process({"video_path": tf.name, "start_time": 0, "end_time": 10})
-
-
-def test_model_errors(mock_env_vars: dict[str, str]) -> None:
-    """Test AI model error scenarios."""
-    from video_understanding.ai.models.gpt4v import GPT4VisionModel
-
-    model = GPT4VisionModel(api_key=mock_env_vars["OPENAI_API_KEY"])
-
-    # Test invalid input
-    with pytest.raises(ModelError):
-        model.validate({})
-
-    # Test invalid file path
-    with pytest.raises(ModelError):
-        model.validate({"image_path": "nonexistent.jpg"})
-
-
-def test_storage_errors() -> None:
-    """Test storage-related error scenarios."""
-    storage = VectorStorage(
-        dimension=768,
-        index_path=Path("test_index.faiss"),
-        metadata_path=Path("test_metadata.json"),
-    )
-
-    # Test invalid input
-    with pytest.raises(StorageError):
-        storage.add_embedding(None, {"type": "test"})  # type: ignore
-
-    # Test invalid search query
-    with pytest.raises(StorageError):
-        storage.search_similar(None, k=1)  # type: ignore
-
+            processor.process(video)
 
 def test_configuration_errors() -> None:
     """Test configuration error scenarios."""
     # Test invalid config values
-    config = VideoConfig()
-    config.max_file_size = -1
+    config = ProcessorConfig()
+    config.max_video_size = -1
     with pytest.raises(ConfigurationError):
-        config.validate()
+        VideoProcessor(config)
 
     # Test empty supported formats
-    config = VideoConfig()
-    config.supported_formats = set()
+    config = ProcessorConfig()
+    config.supported_formats = []
     with pytest.raises(ConfigurationError):
-        config.validate()
+        VideoProcessor(config)
 
     # Test invalid scene length
-    config = VideoConfig()
+    config = ProcessorConfig()
     config.min_scene_length = 0
     with pytest.raises(ConfigurationError):
-        config.validate()
+        VideoProcessor(config)
 
     # Test invalid max scenes
-    config = VideoConfig()
+    config = ProcessorConfig()
     config.max_scenes = -1
     with pytest.raises(ConfigurationError):
-        config.validate()
-
+        VideoProcessor(config)
 
-def test_edge_cases(mock_env_vars: dict[str, str]) -> None:
+def test_edge_cases() -> None:
     """Test various edge cases."""
-    config = ProcessingConfig()
-    pipeline = VideoPipeline(config)
-
-    # Test extremely short video
-    with create_test_video(duration=0.1) as video_path:
-        result = pipeline.process(
-            {"video_path": video_path, "start_time": 0, "end_time": 0.1}
-        )
-        assert isinstance(result, dict)
-        assert "scene_description" in result
+    processor = VideoProcessor(ProcessorConfig())
 
-    # Test video with no audio
-    with create_silent_video() as video_path:
-        result = pipeline.process(
-            {"video_path": video_path, "start_time": 0, "end_time": 1}
-        )
-        assert isinstance(result, dict)
-        assert "scene_description" in result
+    # Create a test video with a single black frame
+    with tempfile.NamedTemporaryFile(suffix=".mp4") as tf:
+        frame = np.zeros((480, 640, 3), dtype=np.uint8)
+        fourcc = cv2.VideoWriter.fourcc(*'mp4v')
+        out = cv2.VideoWriter(tf.name, fourcc, 30.0, (640, 480))
+        out.write(frame)
+        out.release()
 
-    # Test video with no visual content
-    with create_black_video() as video_path:
-        result = pipeline.process(
-            {"video_path": video_path, "start_time": 0, "end_time": 1}
+        # Test extremely short video
+        file_info = VideoFile(
+            filename=Path(tf.name).name,
+            file_path=Path(tf.name),
+            format="mp4",
+            file_size=Path(tf.name).stat().st_size
         )
-        assert isinstance(result, dict)
-        assert "scene_description" in result
-
-
-def test_concurrent_access() -> None:
-    """Test concurrent access scenarios."""
-    config = ProcessingConfig()
-    pipeline = VideoPipeline(config)
-    errors: queue.Queue[Exception] = queue.Queue()
-
-    # Create a test video that all threads will use
-    with create_test_video(duration=1.0) as test_video_path:
-
-        def process_video() -> None:
-            try:
-                pipeline.process(
-                    {"video_path": test_video_path, "start_time": 0, "end_time": 1}
-                )
-            except Exception as e:
-                errors.put(e)
-
-        # Start multiple threads
-        threads = []
-        for _ in range(5):
-            t = threading.Thread(target=process_video)
-            t.start()
-            threads.append(t)
-
-        # Wait for completion
-        for t in threads:
-            t.join()
-
-        # Check for errors
-        assert errors.empty(), f"Concurrent processing errors: {list(errors.queue)}"
-
-
-def test_resource_cleanup() -> None:
-    """Test resource cleanup in error scenarios."""
-    config = ProcessingConfig()
-    pipeline = VideoPipeline(config)
-
-    initial_resources = get_resource_usage()
-
-    try:
-        pipeline.process(
-            {"video_path": "nonexistent.mp4", "start_time": 0, "end_time": 10}
+        video = Video(
+            id=uuid4(),
+            file_info=file_info,
+            processing=VideoProcessingInfo()
         )
-    except Exception:
-        pass
-
-    final_resources = get_resource_usage()
-    assert_resources_cleaned_up(initial_resources, final_resources)
-
-
-# Helper functions for tests
-class VideoContextManager:
-    """Context manager for test video files."""
-
-    def __init__(self, path: str | Path) -> None:
-        self.path = Path(path)
-
-    def __enter__(self) -> str:
-        return str(self.path)
-
-    def __exit__(
-        self,
-        exc_type: type | None,
-        exc_val: Exception | None,
-        exc_tb: Any | None,
-    ) -> None:
-        try:
-            self.path.unlink()
-        except Exception:
-            pass
-
-
-def create_test_video(duration: float) -> VideoContextManager:
-    """Create a test video file with specified duration."""
-    path = Path(tempfile.mktemp(suffix=".mp4"))
-
-    # Create a test video using ffmpeg
-    fps = 30
-    size = "640x480"
-
-    # Generate a test pattern video
-    cmd = [
-        "ffmpeg",
-        "-y",  # Overwrite output file if it exists
-        "-f",
-        "lavfi",  # Use lavfi input
-        "-i",
-        f"testsrc=duration={duration}:size={size}:rate={fps}",  # Test input pattern
-        "-c:v",
-        "libx264",  # Use H.264 codec
-        "-pix_fmt",
-        "yuv420p",  # Pixel format for compatibility
-        "-movflags",
-        "+faststart",  # Enable fast start for web playback
-        str(path),
-    ]
-
-    try:
-        result = subprocess.run(cmd, check=True, capture_output=True)
-
-        # Verify the file was created
-        if not path.exists() or path.stat().st_size == 0:
-            raise RuntimeError("Failed to create test video file")
+        result = processor.process(video)
+        assert result is not None
 
-        return VideoContextManager(path)
-    except subprocess.CalledProcessError as e:
-        raise RuntimeError(f"Failed to create video: {e.stderr.decode()}")
+@pytest.mark.asyncio
+async def test_scene_detector_errors() -> None:
+    """Test scene detector error handling."""
+    detector = SceneDetector()
 
+    # Test invalid video path
+    with pytest.raises(FileValidationError):
+        await detector.detect(Path("nonexistent.mp4"))
 
-def create_silent_video() -> VideoContextManager:
-    """Create a test video with no audio."""
-    path = Path(tempfile.mktemp(suffix=".mp4"))
-    fps = 30
-    duration = 1  # 1 second
-    size = (640, 480)
+@pytest.mark.asyncio
+async def test_object_detector_errors() -> None:
+    """Test object detector error handling."""
+    detector = ObjectDetector()
 
-    try:
-        # Try different codecs in order of preference
-        codecs = ["mp4v", "avc1", "h264"]
-        out = None
-
-        for codec in codecs:
-            try:
-                fourcc = cv2.VideoWriter_fourcc(*codec)  # type: ignore
-                out = cv2.VideoWriter(str(path), fourcc, fps, size)
-                if out is not None and out.isOpened():
-                    break
-            except Exception:
-                if out is not None:
-                    out.release()
-                continue
-
-        if out is None or not out.isOpened():
-            raise RuntimeError("Failed to initialize video writer with any codec")
-
-        # Generate frames (white background)
-        for _ in range(int(fps * duration)):
-            frame = np.ones((size[1], size[0], 3), dtype=np.uint8) * 255
-            out.write(frame)
-
-        out.release()
-        return VideoContextManager(path)
-    except Exception as e:
-        if out is not None:
-            out.release()
-        if path.exists():
-            path.unlink()
-        raise RuntimeError(f"Failed to create silent video: {e!s}")
-
-
-def create_black_video() -> VideoContextManager:
-    """Create a test video with no visual content (black frames)."""
-    path = Path(tempfile.mktemp(suffix=".mp4"))
-    fps = 30
-    duration = 1  # 1 second
-    size = (640, 480)
-
-    try:
-        # Try different codecs in order of preference
-        codecs = ["mp4v", "avc1", "h264"]
-        out = None
-
-        for codec in codecs:
-            try:
-                fourcc = cv2.VideoWriter_fourcc(*codec)  # type: ignore
-                out = cv2.VideoWriter(str(path), fourcc, fps, size)
-                if out is not None and out.isOpened():
-                    break
-            except Exception:
-                if out is not None:
-                    out.release()
-                continue
-
-        if out is None or not out.isOpened():
-            raise RuntimeError("Failed to initialize video writer with any codec")
-
-        # Generate frames (black background)
-        for _ in range(int(fps * duration)):
-            frame = np.zeros((size[1], size[0], 3), dtype=np.uint8)
-            out.write(frame)
-
-        out.release()
-        return VideoContextManager(path)
-    except Exception as e:
-        if out is not None:
-            out.release()
-        if path.exists():
-            path.unlink()
-        raise RuntimeError(f"Failed to create black video: {e!s}")
-
-
-def get_resource_usage() -> dict[str, float]:
-    """Get current resource usage statistics."""
-    try:
-        import psutil
+    # Test invalid input
+    with pytest.raises(ProcessingError):
+        detector.detect_objects(None)  # type: ignore
 
-        process = psutil.Process()
-        return {
-            "memory": process.memory_info().rss,
-            "cpu_percent": process.cpu_percent(),
-            "threads": len(process.threads()),
-            "open_files": len(process.open_files()),
-        }
-    except ImportError:
-        # Return dummy values if psutil is not available
-        return {
-            "memory": 0.0,
-            "cpu_percent": 0.0,
-            "threads": 0.0,
-            "open_files": 0.0,
-        }
+    # Test invalid frame shape
+    with pytest.raises(ProcessingError):
+        detector.detect_objects(np.zeros((10, 10), dtype=np.uint8))  # Wrong number of channels
 
+@pytest.mark.asyncio
+async def test_ocr_processor_errors() -> None:
+    """Test OCR processor error handling."""
+    processor = OCRProcessor()
 
-def assert_resources_cleaned_up(
-    initial: dict[str, float], final: dict[str, float]
-) -> None:
-    """Assert that resources were properly cleaned up."""
-    # Allow for some variance in resource usage
-    memory_threshold = 1.1  # 10% increase allowed
-    cpu_threshold = 5.0  # 5% difference allowed
+    # Test invalid file path
+    with pytest.raises(FileValidationError):
+        await processor.process(Path("nonexistent.mp4"))
 
-    assert (
-        final["memory"] <= initial["memory"] * memory_threshold
-    ), "Memory not properly cleaned up"
-    assert (
-        abs(final["cpu_percent"] - initial["cpu_percent"]) <= cpu_threshold
-    ), "CPU usage not normalized"
-    assert (
-        final["threads"] <= initial["threads"]
-    ), "Thread count not properly cleaned up"
-    assert (
-        final["open_files"] <= initial["open_files"]
-    ), "Open files not properly cleaned up"
+    # Test invalid confidence threshold
+    with pytest.raises(ValueError):
+        processor.set_confidence_threshold(1.5)  # Should be between 0 and 1
diff --git a/tests/unit/test_ocr.py b/tests/unit/test_ocr.py
index d83a77e..4162598 100644
--- a/tests/unit/test_ocr.py
+++ b/tests/unit/test_ocr.py
@@ -1,65 +1,79 @@
+"""Tests for OCR processing functionality."""
+
 import pytest
-from unittest.mock import Mock, patch
+from pathlib import Path
+import tempfile
+import cv2
 import numpy as np
-from src.core.processing.text import OCRProcessor, TextDetector
-
-class TestOCRProcessor:
-    def setup_method(self):
-        """Set up test fixtures before each test method."""
-        self.test_image = np.zeros((1080, 1920, 3), dtype=np.uint8)
-        self.processor = OCRProcessor()
-
-    def test_basic_text_extraction(self):
-        """Test basic text extraction from an image."""
-        mock_text = "Sample text in video"
-        with patch('src.core.processing.text.ocr.extract_text', return_value=mock_text):
-            result = self.processor.process_frame(self.test_image)
-            assert isinstance(result, dict)
-            assert "text" in result
-            assert result["text"] == mock_text
-
-    def test_text_with_timestamps(self):
-        """Test text extraction with timestamp information."""
-        result = self.processor.process_frame(self.test_image, timestamp=10.5)
-        assert "timestamp" in result
-        assert result["timestamp"] == 10.5
-
-    def test_multiple_text_regions(self):
-        """Test handling of multiple text regions in a frame."""
-        mock_regions = [
-            {"text": "Region 1", "confidence": 0.95, "bbox": (10, 10, 100, 30)},
-            {"text": "Region 2", "confidence": 0.88, "bbox": (200, 200, 300, 230)}
-        ]
-        with patch('src.core.processing.text.ocr.detect_text_regions', return_value=mock_regions):
-            result = self.processor.process_frame(self.test_image)
-            assert "regions" in result
-            assert len(result["regions"]) == 2
-            assert all("confidence" in region for region in result["regions"])
-
-class TestTextDetector:
-    def setup_method(self):
-        """Set up test fixtures before each test method."""
-        self.detector = TextDetector()
-        self.test_frame = np.zeros((1080, 1920, 3), dtype=np.uint8)
-
-    def test_code_block_detection(self):
-        """Test detection of code blocks in frame."""
-        result = self.detector.detect_code_blocks(self.test_frame)
-        assert isinstance(result, list)
-        for block in result:
-            assert "type" in block
-            assert "content" in block
-            assert "confidence" in block
-
-    def test_text_formatting_detection(self):
-        """Test detection of text formatting (bold, italic, etc.)."""
-        result = self.detector.detect_formatting(self.test_frame)
-        assert isinstance(result, dict)
-        assert "formatting" in result
-        assert isinstance(result["formatting"], list)
-
-    def test_confidence_filtering(self):
-        """Test filtering of low-confidence detections."""
-        detector = TextDetector(min_confidence=0.8)
-        result = detector.detect_text(self.test_frame)
-        assert all(r["confidence"] >= 0.8 for r in result if "confidence" in r)
+
+from video_understanding.core.upload.ocr import OCRProcessor
+
+@pytest.fixture
+def sample_video():
+    """Create a sample video file for testing."""
+    with tempfile.NamedTemporaryFile(suffix=".mp4", delete=False) as f:
+        # Create a video writer
+        fourcc = cv2.VideoWriter.fourcc(*'mp4v')
+        out = cv2.VideoWriter(f.name, fourcc, 30.0, (640, 480))
+
+        try:
+            # Create some frames with text
+            font = cv2.FONT_HERSHEY_SIMPLEX
+
+            # First scene with text
+            for _ in range(90):  # 3 seconds at 30fps
+                frame = np.zeros((480, 640, 3), dtype=np.uint8)
+                cv2.putText(frame, "Hello World", (50, 50), font, 1, (255, 255, 255), 2)
+                out.write(frame)
+
+            # Second scene with different text
+            for _ in range(90):  # Another 3 seconds
+                frame = np.zeros((480, 640, 3), dtype=np.uint8)
+                cv2.putText(frame, "Testing OCR", (100, 100), font, 1, (255, 255, 255), 2)
+                out.write(frame)
+
+        finally:
+            out.release()
+
+    yield Path(f.name)
+    Path(f.name).unlink()
+
+@pytest.mark.asyncio
+async def test_ocr_processing(sample_video):
+    """Test basic OCR processing."""
+    processor = OCRProcessor()
+    results = await processor.process(sample_video)
+
+    # Since we're using a placeholder OCR implementation,
+    # we just verify the structure but not actual text extraction
+    assert isinstance(results, list)
+
+@pytest.mark.asyncio
+async def test_ocr_with_languages():
+    """Test OCR with specific languages."""
+    processor = OCRProcessor(languages=["eng", "fra"])
+    assert "eng" in processor.languages
+    assert "fra" in processor.languages
+
+@pytest.mark.asyncio
+async def test_ocr_confidence_threshold():
+    """Test OCR confidence threshold setting."""
+    processor = OCRProcessor()
+
+    # Test valid threshold
+    processor.set_confidence_threshold(0.8)
+    assert processor.confidence_threshold == 0.8
+
+    # Test threshold clamping
+    processor.set_confidence_threshold(1.5)  # Should clamp to 1.0
+    assert processor.confidence_threshold == 1.0
+
+    processor.set_confidence_threshold(-0.5)  # Should clamp to 0.0
+    assert processor.confidence_threshold == 0.0
+
+@pytest.mark.asyncio
+async def test_ocr_invalid_file():
+    """Test OCR with invalid file."""
+    processor = OCRProcessor()
+    with pytest.raises(FileNotFoundError):
+        await processor.process(Path("nonexistent.mp4"))
diff --git a/tests/unit/test_processor.py b/tests/unit/test_processor.py
index ed11da2..a68d3da 100644
--- a/tests/unit/test_processor.py
+++ b/tests/unit/test_processor.py
@@ -1,4 +1,7 @@
+import os
 import pytest
+import numpy as np
+from pathlib import Path
 from unittest.mock import Mock, patch
 from src.video_understanding.core.processing.video import VideoProcessor
 from src.video_understanding.core.exceptions import (
@@ -6,14 +9,42 @@ from src.video_understanding.core.exceptions import (
     VideoFormatError,
     ResourceExceededError,
     ConcurrencyLimitError,
-    ValidationError
+    ValidationError,
 )
 
+
 class TestVideoProcessor:
     def setup_method(self):
         """Set up test fixtures before each test method."""
         self.processor = VideoProcessor()
-        self.test_file = "tests/fixtures/sample_video.mp4"
+
+        # Create the test file directory structure if it doesn't exist
+        test_file_dir = Path("tests/fixtures/video_samples/valid")
+        test_file_dir.mkdir(parents=True, exist_ok=True)
+
+        # Create a sample video file for testing if it doesn't exist
+        self.test_file = test_file_dir / "sample_video.mp4"
+        if not self.test_file.exists():
+            # Create a minimal valid MP4 file for testing
+            with open(self.test_file, "wb") as f:
+                # Write minimal MP4 header (not a real MP4, just enough for testing)
+                f.write(b"\x00\x00\x00\x20\x66\x74\x79\x70\x6d\x70\x34\x32")
+                f.write(b"\x00\x00\x00\x00\x6d\x70\x34\x32\x69\x73\x6f\x6d")
+                f.write(b"\x00\x00\x00\x08\x6d\x6f\x6f\x76")
+
+        # Create invalid directory if it doesn't exist
+        invalid_dir = Path("tests/fixtures/video_samples/invalid")
+        invalid_dir.mkdir(parents=True, exist_ok=True)
+
+        # Create an invalid test file
+        invalid_file = invalid_dir / "test.txt"
+        if not invalid_file.exists():
+            with open(invalid_file, "w") as f:
+                f.write("This is not a video file.")
+
+    def teardown_method(self):
+        """Clean up after tests if needed."""
+        pass
 
     def test_process_frame(self, sample_frame):
         """Test processing of a single video frame."""
@@ -28,6 +59,7 @@ class TestVideoProcessor:
     def test_valid_video_processing(self):
         """Test processing of a valid video file."""
         result = self.processor.process_video(self.test_file)
+        assert isinstance(result, dict)
         assert "frames" in result
         assert "text_results" in result
         assert "audio_results" in result
@@ -35,14 +67,16 @@ class TestVideoProcessor:
     def test_invalid_video_format(self):
         """Test handling of invalid video format."""
         with pytest.raises(VideoFormatError):
-            self.processor.validate_video("invalid.txt")
+            self.processor.validate_video(
+                "tests/fixtures/video_samples/invalid/test.txt"
+            )
 
     def test_memory_limit_handling(self):
-        """Test handling of memory limit exceeded scenario."""
-        with patch('src.video_understanding.core.processing.video.Path.stat') as mock_stat:
-            mock_stat.return_value.st_size = 3 * 1024 * 1024 * 1024  # 3GB, above limit
-            with pytest.raises(ValidationError):
-                self.processor.validate_video(self.test_file)
+        """Test handling of memory limits."""
+        with patch("psutil.virtual_memory") as mock_memory:
+            mock_memory.return_value.available = 100  # Very low memory
+            with pytest.raises(ResourceExceededError):
+                self.processor.check_resources()
 
     def test_concurrent_processing_limit(self):
         """Test handling of concurrent processing limit."""
@@ -57,9 +91,7 @@ class TestVideoProcessor:
         custom_settings = {
             "frame_interval": 2,
             "min_confidence": 0.8,
-            "enable_audio": True
+            "enable_audio": True,
         }
         result = self.processor.process_video(self.test_file, options=custom_settings)
-        assert "frames" in result
-        assert "text_results" in result
-        assert "audio_results" in result
+        assert isinstance(result, dict)
diff --git a/tests/unit/test_scene.py b/tests/unit/test_scene.py
index 9d805dc..3ea7130 100644
--- a/tests/unit/test_scene.py
+++ b/tests/unit/test_scene.py
@@ -1,77 +1,92 @@
+"""Tests for scene detection functionality."""
+
 import pytest
-from unittest.mock import Mock, patch
+from pathlib import Path
+import tempfile
+import cv2
 import numpy as np
-from src.core.processing.scene import SceneAnalyzer, SceneMetadata
-
-class TestSceneAnalyzer:
-    def setup_method(self):
-        """Set up test fixtures before each test method."""
-        self.analyzer = SceneAnalyzer()
-        self.test_frame = np.zeros((1080, 1920, 3), dtype=np.uint8)
-        self.test_scene = {
-            "start_time": 0.0,
-            "end_time": 5.0,
-            "frames": [self.test_frame] * 10
-        }
-
-    def test_scene_content_analysis(self):
-        """Test analysis of scene content."""
-        result = self.analyzer.analyze_scene(self.test_scene)
-        assert isinstance(result, dict)
-        assert "content_type" in result
-        assert "confidence" in result
-        assert "metadata" in result
-
-    def test_scene_transition_detection(self):
-        """Test detection of scene transitions."""
-        scenes = [self.test_scene, self.test_scene]
-        transitions = self.analyzer.analyze_transitions(scenes)
-        assert isinstance(transitions, list)
-        assert len(transitions) == 1  # One transition between two scenes
-        assert all("type" in t for t in transitions)
-
-    def test_scene_duration_validation(self):
-        """Test validation of scene duration."""
-        invalid_scene = {
-            "start_time": 0.0,
-            "end_time": 0.5,  # Too short
-            "frames": [self.test_frame]
-        }
-        with pytest.raises(ValueError):
-            self.analyzer.analyze_scene(invalid_scene)
-
-class TestSceneMetadata:
-    def setup_method(self):
-        """Set up test fixtures before each test method."""
-        self.metadata = SceneMetadata()
-        self.test_data = {
-            "duration": 5.0,
-            "frame_count": 150,
-            "average_brightness": 0.5
-        }
-
-    def test_metadata_creation(self):
-        """Test creation of scene metadata."""
-        meta = self.metadata.create(self.test_data)
-        assert isinstance(meta, dict)
-        assert "duration" in meta
-        assert "frame_count" in meta
-        assert "timestamp" in meta
-
-    def test_metadata_validation(self):
-        """Test validation of metadata fields."""
-        invalid_data = {
-            "duration": -1.0,  # Invalid duration
-            "frame_count": 150
-        }
-        with pytest.raises(ValueError):
-            self.metadata.create(invalid_data)
-
-    def test_metadata_aggregation(self):
-        """Test aggregation of metadata from multiple scenes."""
-        scene_list = [self.test_data] * 3
-        aggregated = self.metadata.aggregate(scene_list)
-        assert isinstance(aggregated, dict)
-        assert "total_duration" in aggregated
-        assert "total_frames" in aggregated
-        assert aggregated["total_frames"] == 450  # 3 * 150
+
+from video_understanding.core.upload.scene import SceneDetector
+
+@pytest.fixture
+def sample_video():
+    """Create a sample video file for testing."""
+    with tempfile.NamedTemporaryFile(suffix=".mp4", delete=False) as f:
+        # Create a video writer
+        fourcc = cv2.VideoWriter.fourcc(*'mp4v')
+        out = cv2.VideoWriter(f.name, fourcc, 30.0, (640, 480))
+
+        try:
+            # Create some frames
+            for _ in range(90):  # 3 seconds at 30fps
+                frame = np.zeros((480, 640, 3), dtype=np.uint8)
+                # Add some content to make scene detection possible
+                cv2.rectangle(frame, (100, 100), (200, 200), (0, 255, 0), -1)
+                out.write(frame)
+
+            # Create a scene change
+            for _ in range(90):  # Another 3 seconds
+                frame = np.zeros((480, 640, 3), dtype=np.uint8)
+                # Different content
+                cv2.circle(frame, (320, 240), 100, (0, 0, 255), -1)
+                out.write(frame)
+
+        finally:
+            out.release()
+
+    yield Path(f.name)
+    Path(f.name).unlink()
+
+@pytest.mark.asyncio
+async def test_scene_detection(sample_video):
+    """Test basic scene detection."""
+    detector = SceneDetector()
+    scenes = await detector.detect(sample_video)
+
+    assert len(scenes) > 0
+    for scene in scenes:
+        assert "start_frame" in scene
+        assert "end_frame" in scene
+        assert "start_time" in scene
+        assert "end_time" in scene
+        assert "duration" in scene
+        assert scene["duration"] > 0
+
+@pytest.mark.asyncio
+async def test_scene_detection_config():
+    """Test scene detector configuration."""
+    detector = SceneDetector()
+
+    # Test min scene duration
+    detector.set_min_scene_duration(5.0)
+    assert detector.min_scene_duration == 5.0
+
+    # Test max scenes
+    detector.set_max_scenes(100)
+    assert detector.max_scenes == 100
+
+    # Test threshold
+    detector.set_threshold(50.0)
+    assert detector.threshold == 50.0
+
+@pytest.mark.asyncio
+async def test_scene_detection_invalid_file():
+    """Test scene detection with invalid file."""
+    detector = SceneDetector()
+    scenes = await detector.detect(Path("nonexistent.mp4"))
+    assert len(scenes) == 0
+
+@pytest.mark.asyncio
+async def test_frame_difference():
+    """Test frame difference calculation."""
+    detector = SceneDetector()
+
+    # Create two different frames
+    frame1 = np.zeros((480, 640, 3), dtype=np.uint8)
+    cv2.rectangle(frame1, (100, 100), (200, 200), (0, 255, 0), -1)
+
+    frame2 = np.zeros((480, 640, 3), dtype=np.uint8)
+    cv2.circle(frame2, (320, 240), 100, (0, 0, 255), -1)
+
+    diff = detector._calculate_frame_diff(frame1, frame2)
+    assert diff > 0
diff --git a/tests/unit/test_upload.py b/tests/unit/test_upload.py
index f38c548..0d7b36b 100644
--- a/tests/unit/test_upload.py
+++ b/tests/unit/test_upload.py
@@ -1,203 +1,85 @@
-"""Unit tests for video upload functionality."""
-
-import os
-import shutil
-import tempfile
-from collections.abc import Generator
-from pathlib import Path
-from typing import Any
-from uuid import UUID
+"""Tests for video upload functionality."""
 
 import pytest
-from pytest import MonkeyPatch
-
-from video_understanding.core.config import VideoConfig
-from video_understanding.core.exceptions import FileValidationError
-from video_understanding.models.video import Video
-from video_understanding.video.upload import VideoUploader
-
-
-@pytest.fixture
-def temp_upload_dir() -> Generator[Path, None, None]:
-    """Create a temporary directory for uploads."""
-    with tempfile.TemporaryDirectory() as temp_dir:
-        yield Path(temp_dir)
-
-
-@pytest.fixture
-def config(temp_upload_dir: Path) -> VideoConfig:
-    """Create a test configuration."""
-    return VideoConfig(
-        upload_directory=temp_upload_dir,
-        supported_formats=["MP4", "AVI", "MOV"],
-        max_file_size=1024 * 1024 * 1024,  # 1GB
-    )
-
-
-@pytest.fixture
-def uploader(config: VideoConfig) -> VideoUploader:
-    """Create a VideoUploader instance."""
-    return VideoUploader(config)
+from pathlib import Path
+import tempfile
+import cv2
+import numpy as np
 
+from video_understanding.core.upload import VideoUploader, UploadConfig
+from video_understanding.core.exceptions import VideoUnderstandingError
 
 @pytest.fixture
-def test_video_file() -> Generator[Path, None, None]:
-    """Create a temporary test video file."""
-    with tempfile.NamedTemporaryFile(suffix=".mp4", delete=False) as temp_file:
-        temp_file.write(b"dummy video content")
-        temp_file.flush()
-        yield Path(temp_file.name)
-        os.unlink(temp_file.name)
-
-
-def test_validate_file_success(uploader: VideoUploader, test_video_file: Path) -> None:
-    """Test successful file validation."""
-    assert uploader.validate_file(str(test_video_file)) is True
-
-
-def test_validate_file_not_exists(uploader: VideoUploader) -> None:
-    """Test validation of non-existent file."""
-    with pytest.raises(FileValidationError, match="File does not exist"):
-        uploader.validate_file("nonexistent.mp4")
-
-
-def test_validate_file_unsupported_format(
-    uploader: VideoUploader, test_video_file: Path
-) -> None:
-    """Test validation of unsupported format."""
-    unsupported = test_video_file.with_suffix(".xyz")
-    shutil.copy2(test_video_file, unsupported)
-    try:
-        with pytest.raises(FileValidationError, match="Unsupported format"):
-            uploader.validate_file(str(unsupported))
-    finally:
-        os.unlink(unsupported)
-
-
-def test_validate_file_empty(uploader: VideoUploader, test_video_file: Path) -> None:
-    """Test validation of empty file."""
-    empty_file = test_video_file.with_name("empty.mp4")
-    empty_file.touch()
-    try:
-        with pytest.raises(FileValidationError, match="File is empty"):
-            uploader.validate_file(str(empty_file))
-    finally:
-        os.unlink(empty_file)
-
+def sample_video():
+    """Create a sample video file for testing."""
+    with tempfile.NamedTemporaryFile(suffix=".mp4", delete=False) as f:
+        # Create a video writer
+        fourcc = cv2.VideoWriter.fourcc(*'mp4v')
+        out = cv2.VideoWriter(f.name, fourcc, 30.0, (640, 480))
 
-def test_validate_file_too_large(
-    uploader: VideoUploader, test_video_file: Path
-) -> None:
-    """Test validation of file exceeding size limit."""
-    uploader.config.max_file_size = 10  # Set very small limit
-    with pytest.raises(FileValidationError, match="File exceeds maximum size"):
-        uploader.validate_file(str(test_video_file))
-
-
-def test_validate_file_unreadable(
-    uploader: VideoUploader, test_video_file: Path
-) -> None:
-    """Test validation of unreadable file."""
-    if os.name != "nt":  # Skip on Windows
-        os.chmod(test_video_file, 0o000)
         try:
-            with pytest.raises(FileValidationError, match="Permission denied"):
-                uploader.validate_file(str(test_video_file))
-        finally:
-            os.chmod(test_video_file, 0o666)
-
-
-def test_upload_success(uploader: VideoUploader, test_video_file: Path) -> None:
-    """Test successful file upload."""
-    video = uploader.upload(str(test_video_file))
-    assert isinstance(video, Video)
-    assert isinstance(video.id, UUID)
-    assert video.file_info.filename == test_video_file.name
-    assert video.file_info.format == "MP4"
-    assert video.file_info.file_size > 0
-
-    # Verify file was copied
-    uploaded_path = (
-        uploader.config.upload_directory / str(video.id) / video.file_info.filename
-    )
-    assert uploaded_path.exists()
-    assert uploaded_path.stat().st_size == test_video_file.stat().st_size
-
-
-def test_upload_validation_failure(uploader: VideoUploader) -> None:
-    """Test upload with invalid file."""
-    with pytest.raises(FileValidationError, match="File does not exist"):
-        uploader.upload("nonexistent.mp4")
-
-
-def test_upload_disk_full(
-    uploader: VideoUploader, test_video_file: Path, monkeypatch: MonkeyPatch
-) -> None:
-    """Test upload when disk is full."""
-
-    def mock_copy2(*args: Any, **kwargs: Any) -> None:
-        raise OSError("No space left on device")
+            # Create some frames
+            for _ in range(90):  # 3 seconds at 30fps
+                frame = np.zeros((480, 640, 3), dtype=np.uint8)
+                # Add some content to make scene detection possible
+                cv2.rectangle(frame, (100, 100), (200, 200), (0, 255, 0), -1)
+                out.write(frame)
+
+            # Create a scene change
+            for _ in range(90):  # Another 3 seconds
+                frame = np.zeros((480, 640, 3), dtype=np.uint8)
+                # Different content
+                cv2.circle(frame, (320, 240), 100, (0, 0, 255), -1)
+                out.write(frame)
 
-    monkeypatch.setattr(shutil, "copy2", mock_copy2)
-    with pytest.raises(FileValidationError, match="No space left on device"):
-        uploader.upload(str(test_video_file))
-
-
-def test_upload_permission_error(
-    uploader: VideoUploader, test_video_file: Path
-) -> None:
-    """Test upload with insufficient permissions."""
-    if os.name != "nt":  # Skip on Windows
-        os.chmod(uploader.config.upload_directory, 0o444)  # Read-only
-        try:
-            with pytest.raises(FileValidationError, match="Permission denied"):
-                uploader.upload(str(test_video_file))
         finally:
-            os.chmod(uploader.config.upload_directory, 0o777)
-
-
-def test_upload_concurrent(uploader: VideoUploader, test_video_file: Path) -> None:
-    """Test concurrent uploads of the same file."""
-    import threading
-
-    def upload_file() -> None:
-        video = uploader.upload(str(test_video_file))
-        assert isinstance(video, Video)
-        assert video.file_info.filename == test_video_file.name
-
-    # Create multiple threads to upload the same file
-    threads = [threading.Thread(target=upload_file) for _ in range(3)]
-    for thread in threads:
-        thread.start()
-    for thread in threads:
-        thread.join()
-
-
-def test_upload_directory_creation(
-    uploader: VideoUploader, test_video_file: Path
-) -> None:
-    """Test upload directory creation."""
-    # Delete upload directory
-    shutil.rmtree(uploader.config.upload_directory)
-
-    # Upload should recreate directory
-    video = uploader.upload(str(test_video_file))
-    assert isinstance(video, Video)
-    assert (uploader.config.upload_directory / str(video.id)).exists()
-
+            out.release()
+
+    yield Path(f.name)
+    Path(f.name).unlink()
+
+@pytest.mark.asyncio
+async def test_video_upload_processing(sample_video):
+    """Test basic video upload processing."""
+    uploader = VideoUploader()
+    results = await uploader.process_upload(sample_video)
+
+    assert results is not None
+    assert "metadata" in results
+    assert "scenes" in results
+    assert len(results["scenes"]) > 0
+
+@pytest.mark.asyncio
+async def test_upload_invalid_file():
+    """Test handling of invalid file."""
+    uploader = VideoUploader()
+    with pytest.raises(VideoUnderstandingError):
+        await uploader.process_upload(Path("nonexistent.mp4"))
+
+@pytest.mark.asyncio
+async def test_batch_processing(sample_video):
+    """Test batch video processing."""
+    uploader = VideoUploader()
+    results = await uploader.process_batch([sample_video, sample_video])
+
+    assert len(results) == 2
+    for result in results:
+        assert isinstance(result, dict)
+        assert "metadata" in result
+        assert "scenes" in result
+
+@pytest.mark.asyncio
+async def test_custom_config():
+    """Test uploader with custom configuration."""
+    config = UploadConfig(
+        max_file_size_mb=100,
+        allowed_extensions=[".mp4"],
+        detection_enabled=True,
+        ocr_enabled=False
+    )
+    uploader = VideoUploader(config)
 
-def test_upload_with_special_characters(
-    uploader: VideoUploader, temp_upload_dir: Path
-) -> None:
-    """Test upload with special characters in filename."""
-    special_file = temp_upload_dir / "test!@#$%^&*.mp4"
-    special_file.write_bytes(b"test content")
-    try:
-        video = uploader.upload(str(special_file))
-        assert isinstance(video, Video)
-        assert video.file_info.filename == special_file.name
-        assert (
-            uploader.config.upload_directory / str(video.id) / video.file_info.filename
-        ).exists()
-    finally:
-        os.unlink(special_file)
+    assert uploader.config.max_file_size_mb == 100
+    assert uploader.config.allowed_extensions == [".mp4"]
+    assert uploader.config.detection_enabled is True
+    assert uploader.config.ocr_enabled is False
