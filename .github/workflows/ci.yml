name: CI

# Note: Old code in src/video_understanding and video_understanding directories
# is excluded from linting and coverage checks as it's out of scope for the POC
# and scheduled for removal after the refactoring is complete.

# Required repository secrets:
# - OPENAI_API_KEY: OpenAI API key for GPT-4V
# - GEMINI_API_KEY: Google Gemini Pro Vision API key
# - TWELVE_LABS_API_KEY: Twelve Labs API key for video processing
# - PYPI_USERNAME: PyPI username for package deployment
# - PYPI_PASSWORD: PyPI password for package deployment

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'Testing configuration changes'

jobs:
  basic_checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Verify package structure
      run: |
        python -c "import sys; print(sys.path); import src; print('Package structure is valid')"

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run basic security checks
      run: |
        bandit -r src --exclude "src/video_understanding/**,**/test_*.py" --skip B101,B104,B110,B311 -ll
        safety check --ignore=42194,51457 || true

    - name: Run dependency review
      if: github.event_name == 'pull_request'
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: critical

  build:
    needs: [basic_checks, security]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build || echo "Build failed but continuing"

    - name: Check package
      run: twine check dist/* || echo "Package check failed but continuing"

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 14
      continue-on-error: true
