[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "video-understanding-ai"
version = "0.1.0"
authors = [
  { name="Your Organization", email="your.email@example.com" },
]
description = "AI-powered video understanding and analysis system"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--cov=src",
    "--cov-branch",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-report=term-missing:skip-covered",
    "--strict-markers",
]
markers = [
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests",
    "slow: marks tests as slow running",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "tests/*",
    "**/__init__.py",
    "**/conftest.py",
    "src/core/config.py",
    "src/storage/cache.py",
    "src/storage/vector.py",
    "src/video/upload.py"
]
relative_files = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pass",
    "raise NotImplemented",
    "@abstractmethod",
]
fail_under = 50
precision = 2
skip_empty = true
sort = "cover"

[tool.coverage.html]
directory = "coverage_html"
show_contexts = true
title = "Video Understanding AI Coverage Report"

[tool.coverage.xml]
output = "coverage.xml"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3 